{"version":3,"file":"hlviewer.js","sources":["../node_modules/nanoevents/index.js","../src/Time.ts","../src/SoundSystem.ts","../src/Sound.ts","../src/Util.ts","../src/Reader.ts","../src/Parsers/Tga.ts","../src/Parsers/Util.ts","../src/Parsers/Wad.ts","../src/Replay/ReplayMap.ts","../src/Replay/ReplayChunk.ts","../src/Replay/ReplayState.ts","../src/Replay/readCoord.ts","../src/Replay/DeltaType.ts","../src/Replay/readDelta.ts","../src/BitReader.ts","../src/Replay/FrameDataReader.ts","../src/Replay/Replay.ts","../src/Parsers/Sprite.ts","../src/Xhr.ts","../node_modules/gl-matrix/esm/common.js","../node_modules/gl-matrix/esm/mat4.js","../node_modules/gl-matrix/esm/vec3.js","../node_modules/gl-matrix/esm/vec2.js","../src/Parsers/Vdf.ts","../src/Bsp.ts","../src/Parsers/BspLightmapParser.ts","../src/Parsers/BspParser.ts","../src/Loader.ts","../src/Input/Mouse.ts","../src/Input/Touch.ts","../src/Graphics/Camera.ts","../src/Input/Keyboard.ts","../src/Graphics/Context.ts","../src/ReplayPlayer.ts","../src/Graphics/Renderer.ts","../src/Graphics/SkyShader/SkyShader.ts","../src/Graphics/SkyScene.ts","../src/Graphics/WorldShader/WorldShader.ts","../src/Parsers/BspEntityParser.ts","../src/Graphics/Util.ts","../src/Graphics/WorldScene.ts","../src/Game.ts","../src/Config.ts","../node_modules/solid-js/dist/solid.js","../node_modules/solid-js/web/dist/web.js","../node_modules/solid-js/store/dist/store.js","../src/PlayerInterface/Loading/index.tsx","../src/PlayerInterface/Buttons/SettingsButton/index.tsx","../src/Fullscreen.ts","../src/PlayerInterface/Buttons/FullscreenButton/index.tsx","../src/PlayerInterface/FreeMode/index.tsx","../src/PlayerInterface/GameState.tsx","../src/PlayerInterface/Time/index.tsx","../src/PlayerInterface/TimeLine/index.tsx","../src/PlayerInterface/VolumeControl/index.tsx","../src/PlayerInterface/Buttons/PlayButton/index.tsx","../src/PlayerInterface/Buttons/PauseButton/index.tsx","../src/PlayerInterface/Buttons/VolumeButton/VolumeFull.tsx","../src/PlayerInterface/Buttons/VolumeButton/VolumeHalf.tsx","../src/PlayerInterface/Buttons/VolumeButton/VolumeMute.tsx","../src/PlayerInterface/Buttons/VolumeButton/index.tsx","../src/PlayerInterface/Buttons/SpeedUpButton/index.tsx","../src/PlayerInterface/Buttons/SpeedDownButton/index.tsx","../src/PlayerInterface/ReplayMode/index.tsx","../src/PlayerInterface/App/index.tsx","../src/PlayerInterface/index.tsx","../src/index.ts"],"sourcesContent":["export let createNanoEvents = () => ({\n  emit(event, ...args) {\n    for (\n      let i = 0,\n        callbacks = this.events[event] || [],\n        length = callbacks.length;\n      i < length;\n      i++\n    ) {\n      callbacks[i](...args)\n    }\n  },\n  events: {},\n  on(event, cb) {\n    ;(this.events[event] ||= []).push(cb)\n    return () => {\n      this.events[event] = this.events[event]?.filter(i => cb !== i)\n    }\n  }\n})\n","export const now = performance.now.bind(performance)\r\n\r\nexport const formatTime = (seconds: number) => {\r\n  const m = Math.floor(seconds / 60)\r\n  const s = Math.floor(seconds - m * 60)\r\n  const mm = m < 10 ? `0${m}` : m.toString()\r\n  const ss = s < 10 ? `0${s}` : s.toString()\r\n  return `${mm}:${ss}`\r\n}\r\n","import { createNanoEvents, type Emitter as EventEmitter } from 'nanoevents'\r\nimport type { Sound } from './Sound'\r\n\r\nconst audioContext = new AudioContext()\r\n\r\nexport class SoundSystem {\r\n  context: AudioContext\r\n  channels: {\r\n    source: AudioBufferSourceNode | null\r\n    gain: GainNode\r\n  }[]\r\n  masterGain: GainNode\r\n  preMuteVolume: number\r\n  events: EventEmitter\r\n\r\n  constructor() {\r\n    this.context = audioContext\r\n\r\n    this.events = createNanoEvents()\r\n\r\n    const volume = Number.parseFloat(localStorage.getItem('volume') || '0.3')\r\n    localStorage.setItem('volume', volume.toString())\r\n\r\n    this.channels = []\r\n\r\n    this.preMuteVolume = 1\r\n    this.masterGain = this.context.createGain()\r\n    this.masterGain.gain.value = volume\r\n    this.masterGain.connect(this.context.destination)\r\n\r\n    for (let i = 0; i < 8; ++i) {\r\n      this.channels.push({\r\n        source: null,\r\n        gain: this.context.createGain()\r\n      })\r\n      this.channels[i].gain.connect(this.masterGain)\r\n    }\r\n  }\r\n\r\n  static getContext() {\r\n    return audioContext\r\n  }\r\n\r\n  play(sound: Sound, channel: number, volume: number) {\r\n    this.stop(channel)\r\n\r\n    const gain = this.channels[channel].gain\r\n    gain.gain.value = Math.max(0, Math.min(1, volume))\r\n\r\n    const source = this.context.createBufferSource()\r\n    source.buffer = sound.buffer\r\n    source.connect(gain)\r\n    source.start(0)\r\n\r\n    this.channels[channel].source = source\r\n  }\r\n\r\n  stop(channel: number) {\r\n    const source = this.channels[channel].source\r\n    if (source) {\r\n      source.stop(0)\r\n    }\r\n  }\r\n\r\n  getVolume() {\r\n    return this.masterGain.gain.value\r\n  }\r\n\r\n  setVolume(value: number) {\r\n    const current = this.masterGain.gain.value\r\n    if (current > 0 && value === 0) {\r\n      this.preMuteVolume = current\r\n    }\r\n\r\n    this.masterGain.gain.value = value\r\n\r\n    localStorage.setItem('volume', value.toString())\r\n    this.events.emit('volumeChange', value)\r\n  }\r\n\r\n  toggleMute() {\r\n    if (this.getVolume() === 0) {\r\n      this.setVolume(this.preMuteVolume)\r\n    } else {\r\n      this.setVolume(0)\r\n    }\r\n  }\r\n}\r\n","import { SoundSystem } from './SoundSystem'\r\n\r\nexport class Sound {\r\n  index: number\r\n  name: string\r\n  buffer: AudioBuffer\r\n\r\n  constructor(buffer: AudioBuffer) {\r\n    this.index = -1\r\n    this.name = ''\r\n    this.buffer = buffer\r\n  }\r\n\r\n  static create(buffer: ArrayBuffer): Promise<Sound> {\r\n    return new Promise<Sound>((resolve, reject) => {\r\n      SoundSystem.getContext().decodeAudioData(\r\n        buffer,\r\n        (buffer: AudioBuffer) => {\r\n          resolve(new Sound(buffer))\r\n        },\r\n        (err) => {\r\n          reject(err)\r\n        }\r\n      )\r\n    })\r\n  }\r\n}\r\n","export function basename(path: string, extension?: string) {\n  return path.slice(path.lastIndexOf('/') + 1).replace(extension || '', '')\n}\n\nexport function extname(path: string) {\n  const slashPos = path.lastIndexOf('/')\n  const dotPos = path.lastIndexOf('.')\n  if (slashPos < dotPos) {\n    return path.slice(dotPos)\n  }\n  return ''\n}\n","export enum ReaderDataType {\r\n  UByte = 0,\r\n  Byte = 1,\r\n  UShort = 2,\r\n  Short = 3,\r\n  UInt = 4,\r\n  Int = 5,\r\n  Float = 6,\r\n  Double = 7,\r\n  NString = 8,\r\n  String = 9\r\n}\r\n\r\nexport class Reader {\r\n  data: DataView\r\n  offset: number\r\n\r\n  constructor(data: ArrayBuffer) {\r\n    this.data = new DataView(data)\r\n    this.offset = 0\r\n  }\r\n\r\n  length() {\r\n    return this.data.byteLength\r\n  }\r\n\r\n  tell() {\r\n    return this.offset\r\n  }\r\n\r\n  seek(offset: number) {\r\n    this.offset = Math.max(0, offset)\r\n  }\r\n\r\n  skip(offset: number) {\r\n    this.seek(this.tell() + offset)\r\n  }\r\n\r\n  b() {\r\n    const r = this.data.getInt8(this.offset)\r\n    this.skip(1)\r\n    return r\r\n  }\r\n\r\n  ub() {\r\n    const r = this.data.getUint8(this.offset)\r\n    this.skip(1)\r\n    return r\r\n  }\r\n\r\n  s(isLittleEndian = true) {\r\n    const r = this.data.getInt16(this.offset, isLittleEndian)\r\n    this.skip(2)\r\n    return r\r\n  }\r\n\r\n  us(isLittleEndian = true) {\r\n    const r = this.data.getUint16(this.offset, isLittleEndian)\r\n    this.skip(2)\r\n    return r\r\n  }\r\n\r\n  i(isLittleEndian = true) {\r\n    const r = this.data.getInt32(this.tell(), isLittleEndian)\r\n    this.skip(4)\r\n    return r\r\n  }\r\n\r\n  ui(isLittleEndian = true) {\r\n    const r = this.data.getUint32(this.tell(), isLittleEndian)\r\n    this.skip(4)\r\n    return r\r\n  }\r\n\r\n  f(isLittleEndian = true) {\r\n    const r = this.data.getFloat32(this.tell(), isLittleEndian)\r\n    this.skip(4)\r\n    return r\r\n  }\r\n\r\n  lf(isLittleEndian = true) {\r\n    const r = this.data.getFloat64(this.tell(), isLittleEndian)\r\n    this.skip(8)\r\n    return r\r\n  }\r\n\r\n  str() {\r\n    let t = this.ub()\r\n    let r = ''\r\n    while (t !== 0) {\r\n      r += String.fromCharCode(t)\r\n      t = this.ub()\r\n    }\r\n\r\n    return r\r\n  }\r\n\r\n  nstr(length: number) {\r\n    let n = length\r\n    if (n < 0) {\r\n      return ''\r\n    }\r\n\r\n    let r = ''\r\n    while (n > 0) {\r\n      n -= 1\r\n      const charCode = this.ub()\r\n      if (charCode === 0) {\r\n        break\r\n      }\r\n\r\n      r += String.fromCharCode(charCode)\r\n    }\r\n\r\n    if (n !== 0) {\r\n      this.skip(n)\r\n    }\r\n\r\n    return r\r\n  }\r\n\r\n  arr(length: number, f: () => any) {\r\n    let n = length\r\n    f.bind(this)\r\n    const r = []\r\n    while (n-- > 0) {\r\n      r.push(f())\r\n    }\r\n\r\n    return r\r\n  }\r\n\r\n  arrx(length: number, type: ReaderDataType, nstrlen = 0) {\r\n    let n = length\r\n    let r: any\r\n\r\n    switch (type) {\r\n      case ReaderDataType.UByte: {\r\n        r = new Uint8Array(this.data.buffer, this.tell(), n)\r\n        this.skip(n)\r\n        break\r\n      }\r\n\r\n      case ReaderDataType.Byte: {\r\n        r = new Int8Array(this.data.buffer, this.tell(), n)\r\n        this.skip(n)\r\n        break\r\n      }\r\n\r\n      case ReaderDataType.UShort:\r\n        r = new Uint16Array(this.data.buffer, this.tell(), n)\r\n        this.skip(n * 2)\r\n        break\r\n\r\n      case ReaderDataType.Short:\r\n        r = new Int16Array(this.data.buffer, this.tell(), n)\r\n        this.skip(n * 2)\r\n        break\r\n\r\n      case ReaderDataType.UInt:\r\n        r = new Uint32Array(this.data.buffer, this.tell(), n)\r\n        this.skip(n * 4)\r\n        break\r\n\r\n      case ReaderDataType.Int:\r\n        r = new Int32Array(this.data.buffer, this.tell(), n)\r\n        this.skip(n * 4)\r\n        break\r\n\r\n      case ReaderDataType.Float:\r\n        r = new Float32Array(this.data.buffer, this.tell(), n)\r\n        this.skip(n * 4)\r\n        break\r\n\r\n      case ReaderDataType.Double:\r\n        r = new Float64Array(this.data.buffer, this.tell(), n)\r\n        this.skip(n * 8)\r\n        break\r\n\r\n      case ReaderDataType.NString:\r\n        r = []\r\n        while (n-- > 0) {\r\n          r.push(r.nstr(nstrlen))\r\n        }\r\n        break\r\n\r\n      case ReaderDataType.String:\r\n        r = []\r\n        while (n-- > 0) {\r\n          r.push(r.str())\r\n        }\r\n        break\r\n    }\r\n\r\n    return r\r\n  }\r\n}\r\n","import { Reader, ReaderDataType } from '../Reader'\r\n\r\nexport class Tga {\r\n  name: string\r\n  width: number\r\n  height: number\r\n  data: Uint8Array\r\n\r\n  constructor(name: string, width: number, height: number, data: Uint8Array) {\r\n    this.name = name\r\n    this.width = width\r\n    this.height = height\r\n    this.data = data\r\n  }\r\n\r\n  static parse(buffer: ArrayBuffer, name: string) {\r\n    const r = new Reader(buffer)\r\n\r\n    const header = {\r\n      idLength: r.ub(),\r\n      colorMapType: r.ub(),\r\n      imageType: r.ub(),\r\n      colorMap: {\r\n        firstEntryIndex: r.us(),\r\n        length: r.us(),\r\n        size: r.ub()\r\n      },\r\n      image: {\r\n        xOrigin: r.us(),\r\n        yOrigin: r.us(),\r\n        width: r.us(),\r\n        height: r.us(),\r\n        depth: r.ub(),\r\n        descriptor: r.ub()\r\n      }\r\n    }\r\n\r\n    // let imageId\r\n    if (header.idLength) {\r\n      // imageId = r.arrx(header.idLength, Reader.Type.UByte)\r\n      r.arrx(header.idLength, ReaderDataType.UByte)\r\n    }\r\n\r\n    if (header.colorMapType) {\r\n      throw new Error('Not implemented')\r\n    }\r\n\r\n    const w = header.image.width\r\n    const h = header.image.height\r\n    const pixelCount = w * h\r\n    let imageData: Uint8Array = new Uint8Array(0)\r\n\r\n    if (header.imageType === 0x02) {\r\n      const byteCount = (pixelCount * header.image.depth) / 8\r\n      imageData = r.arrx(byteCount, ReaderDataType.UByte)\r\n      if (header.image.depth === 24) {\r\n        const temp = new Uint8Array(pixelCount * 4)\r\n        for (let i = 0; i < h; ++i) {\r\n          for (let j = 0; j < w; ++j) {\r\n            const dst = (h - 1 - i) * w + j\r\n            temp[dst * 4] = imageData[(i * w + j) * 3 + 2]\r\n            temp[dst * 4 + 1] = imageData[(i * w + j) * 3 + 1]\r\n            temp[dst * 4 + 2] = imageData[(i * w + j) * 3]\r\n            temp[dst * 4 + 3] = 255\r\n          }\r\n        }\r\n        imageData = temp\r\n      } else if (header.image.depth === 32) {\r\n        const temp = new Uint8Array(pixelCount * 4)\r\n        for (let i = 0; i < h; ++i) {\r\n          for (let j = 0; j < w; ++j) {\r\n            const dst = (h - 1 - i) * w + j\r\n            temp[dst * 4] = imageData[(i * w + j) * 4 + 2]\r\n            temp[dst * 4 + 1] = imageData[(i * w + j) * 4 + 1]\r\n            temp[dst * 4 + 2] = imageData[(i * w + j) * 4]\r\n            temp[dst * 4 + 3] = 255\r\n          }\r\n        }\r\n        imageData = temp\r\n      }\r\n    } else if (header.imageType === 0x0a) {\r\n      imageData = new Uint8Array(pixelCount * 4)\r\n      if (header.image.depth === 24) {\r\n        for (let i = 0; i < h; ++i) {\r\n          for (let j = 0; j < w /*++j*/; ) {\r\n            let repCount = r.ub()\r\n            if (repCount & 0x80) {\r\n              repCount = (repCount & 0x7f) + 1\r\n              const bl = r.ub()\r\n              const gr = r.ub()\r\n              const rd = r.ub()\r\n              while (j < w && repCount) {\r\n                const dst = (h - 1 - i) * w + j\r\n                imageData[dst * 4] = rd\r\n                imageData[dst * 4 + 1] = gr\r\n                imageData[dst * 4 + 2] = bl\r\n                imageData[dst * 4 + 3] = 255\r\n                ++j\r\n                --repCount\r\n              }\r\n            } else {\r\n              repCount = (repCount & 0x7f) + 1\r\n              while (j < w && repCount) {\r\n                const dst = (h - 1 - i) * w + j\r\n                imageData[dst * 4 + 2] = r.ub()\r\n                imageData[dst * 4 + 1] = r.ub()\r\n                imageData[dst * 4] = r.ub()\r\n                imageData[dst * 4 + 3] = 255\r\n                ++j\r\n                --repCount\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return new Tga(name, header.image.width, header.image.height, imageData)\r\n  }\r\n}\r\n","export function paletteToRGBA(\n  pixels: Uint8Array,\n  palette: Uint8Array\n): Uint8Array {\n  const rgba = new Uint8Array(pixels.length * 4)\n\n  const len = pixels.length\n  for (let i = 0; i < len; ++i) {\n    rgba[i * 4] = palette[pixels[i] * 3]\n    rgba[i * 4 + 1] = palette[pixels[i] * 3 + 1]\n    rgba[i * 4 + 2] = palette[pixels[i] * 3 + 2]\n    rgba[i * 4 + 3] = 255\n  }\n\n  return rgba\n}\n\nexport function paletteWithLastTransToRGBA(\n  pixels: Uint8Array,\n  palette: Uint8Array\n): Uint8Array {\n  const rgba = new Uint8Array(pixels.length * 4)\n\n  const len = pixels.length\n  for (let i = 0; i < len; ++i) {\n    if (pixels[i] === 255) {\n      rgba[i * 4 + 3] = 0\n    } else {\n      rgba[i * 4] = palette[pixels[i] * 3]\n      rgba[i * 4 + 1] = palette[pixels[i] * 3 + 1]\n      rgba[i * 4 + 2] = palette[pixels[i] * 3 + 2]\n      rgba[i * 4 + 3] = 255\n    }\n  }\n\n  return rgba\n}\n","import { Reader, ReaderDataType } from '../Reader'\r\nimport { paletteToRGBA, paletteWithLastTransToRGBA } from './Util'\r\n\r\nfunction parseDecal(r: Reader): WadDecal {\r\n  const name = r.nstr(16)\r\n\r\n  const width = r.ui()\r\n  const height = r.ui()\r\n\r\n  r.skip(4 * 4) // skip mipmap offsets\r\n\r\n  // read largest mipmap data\r\n  const pixelCount = width * height\r\n  const pixels = r.arrx(pixelCount, ReaderDataType.UByte)\r\n\r\n  // skip other 3 mipmaps\r\n  r.skip(21 * (pixelCount / 64))\r\n\r\n  r.skip(2) // skip padding bytes\r\n\r\n  const palette = r.arrx(768, ReaderDataType.UByte)\r\n\r\n  const data =\r\n    name[0] === '{'\r\n      ? paletteWithLastTransToRGBA(pixels, palette)\r\n      : paletteToRGBA(pixels, palette)\r\n\r\n  return {\r\n    type: 'decal',\r\n    name,\r\n    width,\r\n    height,\r\n    data\r\n  }\r\n}\r\n\r\nconst parseCache = (_r: Reader, metadata: WadEntryMetadata): WadCache => ({\r\n  type: 'cache',\r\n  name: metadata.name\r\n})\r\n\r\nfunction parseTexture(r: Reader): WadTexture {\r\n  const name = r.nstr(16)\r\n\r\n  const width = r.ui()\r\n  const height = r.ui()\r\n\r\n  r.skip(4 * 4) // skip mipmap offsets\r\n\r\n  // read largest mipmap data\r\n  const pixelCount = width * height\r\n  const pixels = r.arrx(pixelCount, ReaderDataType.UByte)\r\n\r\n  // skip other 3 mipmaps\r\n  r.skip(21 * (pixelCount / 64))\r\n\r\n  r.skip(2) // skip padding bytes\r\n\r\n  const palette = r.arrx(768, ReaderDataType.UByte)\r\n\r\n  const data =\r\n    name[0] === '{'\r\n      ? paletteWithLastTransToRGBA(pixels, palette)\r\n      : paletteToRGBA(pixels, palette)\r\n\r\n  return {\r\n    type: 'texture',\r\n    name,\r\n    width,\r\n    height,\r\n    data\r\n  }\r\n}\r\n\r\nfunction parseFont(r: Reader, metadata: WadEntryMetadata): WadFont {\r\n  // TODO: figure out why width is incorrect\r\n  const width = r.ui() && 256 // NOTE: fonts are lying about their width\r\n  const height = r.ui()\r\n  const rowCount = r.ui()\r\n  const rowHeight = r.ui()\r\n\r\n  const glyphs = []\r\n  // hardcoded 256 number of glyphs\r\n  for (let i = 0; i < 256; ++i) {\r\n    const glyphOffset = r.us()\r\n    const glyphWidth = r.us()\r\n\r\n    glyphs.push({\r\n      x: glyphOffset % width,\r\n      y: (Math.floor(glyphOffset / width) / rowHeight) * rowHeight,\r\n      width: glyphWidth,\r\n      height: rowHeight\r\n    })\r\n  }\r\n\r\n  const pixelCount = width * height\r\n  const pixels = r.arrx(pixelCount, ReaderDataType.UByte)\r\n\r\n  r.skip(2)\r\n\r\n  const palette = r.arrx(256 * 3, ReaderDataType.UByte)\r\n\r\n  return {\r\n    type: 'font',\r\n    name: metadata.name,\r\n    width,\r\n    height,\r\n    rowCount,\r\n    rowHeight,\r\n    glyphs,\r\n    data: paletteWithLastTransToRGBA(pixels, palette)\r\n  }\r\n}\r\n\r\nconst parseUnknown = (r: Reader, metadata: WadEntryMetadata): WadUnknown => ({\r\n  type: 'unknown',\r\n  name: metadata.name,\r\n  data: r.arrx(metadata.length, ReaderDataType.UByte)\r\n})\r\n\r\nfunction parseEntry(r: Reader, metadata: WadEntryMetadata): WadEntry {\r\n  r.seek(metadata.offset)\r\n  switch (metadata.type) {\r\n    case 0x40: {\r\n      return parseDecal(r)\r\n    }\r\n    case 0x42: {\r\n      return parseCache(r, metadata)\r\n    }\r\n    case 0x43: {\r\n      return parseTexture(r)\r\n    }\r\n    case 0x46: {\r\n      return parseFont(r, metadata)\r\n    }\r\n\r\n    default: {\r\n      // unknown data type; return array of bytes\r\n      return parseUnknown(r, metadata)\r\n    }\r\n  }\r\n}\r\n\r\nexport interface WadTexture {\r\n  type: 'texture'\r\n  name: string\r\n  width: number\r\n  height: number\r\n  data: Uint8Array\r\n}\r\n\r\nexport interface WadDecal {\r\n  type: 'decal'\r\n  name: string\r\n  width: number\r\n  height: number\r\n  data: Uint8Array\r\n}\r\n\r\nexport interface WadCache {\r\n  type: 'cache'\r\n  name: string\r\n}\r\n\r\nexport interface WadFont {\r\n  type: 'font'\r\n  name: string\r\n  width: number\r\n  height: number\r\n  rowCount: number\r\n  rowHeight: number\r\n  glyphs: {\r\n    x: number\r\n    y: number\r\n    width: number\r\n    height: number\r\n  }[]\r\n  data: Uint8Array\r\n}\r\n\r\nexport interface WadUnknown {\r\n  type: 'unknown'\r\n  name: string\r\n  data: Uint8Array\r\n}\r\n\r\nexport type WadEntry = WadTexture | WadDecal | WadCache | WadFont | WadUnknown\r\n\r\ninterface WadEntryMetadata {\r\n  offset: number\r\n  diskLength: number\r\n  length: number\r\n  type: number\r\n  isCompressed: number\r\n  name: string\r\n}\r\n\r\nexport class Wad {\r\n  entries: WadEntry[]\r\n\r\n  constructor(entries: WadEntry[]) {\r\n    this.entries = entries\r\n  }\r\n\r\n  static parse(buffer: ArrayBuffer) {\r\n    const r = new Reader(buffer)\r\n\r\n    const magic = r.nstr(4)\r\n    if (magic !== 'WAD3') {\r\n      throw new Error('Invalid WAD file format')\r\n    }\r\n\r\n    const entryCount = r.ui()\r\n    const directoryOffset = r.ui()\r\n    r.seek(directoryOffset)\r\n    const entriesMetadata: WadEntryMetadata[] = []\r\n    for (let i = 0; i < entryCount; ++i) {\r\n      const entry: WadEntryMetadata = {\r\n        offset: r.ui(),\r\n        diskLength: r.ui(),\r\n        length: r.ui(),\r\n        type: r.b(),\r\n        isCompressed: r.b(),\r\n        name: ''\r\n      }\r\n      r.skip(2)\r\n      entry.name = r.nstr(16)\r\n      entriesMetadata.push(entry)\r\n    }\r\n\r\n    const entries: WadEntry[] = entriesMetadata.map(e => parseEntry(r, e))\r\n\r\n    return new Wad(entries)\r\n  }\r\n}\r\n","import { basename } from '../Util'\nimport type { ReplayChunk } from './ReplayChunk'\n\nexport class ReplayMap {\n  name: string\n  chunks: ReplayChunk[]\n  resources: any\n\n  constructor(mapFilePath: string) {\n    this.name = basename(mapFilePath, '.bsp')\n    this.chunks = []\n    this.resources = {\n      sounds: [],\n      skins: [],\n      models: [],\n      decals: [],\n      custom: [],\n      events: []\n    }\n  }\n\n  setResources(resources: any[]) {\n    for (const res of resources) {\n      switch (res.type) {\n        case 0: {\n          res.used = false\n          this.resources.sounds.push(res)\n          break\n        }\n        case 1: {\n          this.resources.skins.push(res)\n          break\n        }\n        case 2: {\n          this.resources.models.push(res)\n          break\n        }\n        case 3: {\n          this.resources.decals.push(res)\n          break\n        }\n        case 4: {\n          this.resources.custom.push(res)\n          break\n        }\n        case 5: {\n          this.resources.events.push(res)\n          break\n        }\n      }\n    }\n  }\n\n  addChunk(chunk: ReplayChunk) {\n    this.chunks.push(chunk)\n  }\n}\n","import { Reader } from '../Reader'\nimport type { ReplayState } from './ReplayState'\n\nexport class ReplayChunk {\n  state: ReplayState\n  startTime: number\n  timeLength: number\n  data: Uint8Array | null\n  reader: Reader | null\n\n  constructor(initialState: ReplayState, startTime: number) {\n    this.state = initialState.clone()\n    this.startTime = startTime\n    this.timeLength = 10\n    this.data = null\n    this.reader = null\n  }\n\n  setData(data: Uint8Array) {\n    this.data = new Uint8Array(data.length)\n    for (let i = 0; i < data.length; ++i) {\n      this.data[i] = data[i]\n    }\n\n    this.reader = new Reader(this.data.buffer as ArrayBuffer)\n  }\n}\n","export interface ReplayState {\n  cameraPos: [number, number, number]\n  cameraRot: [number, number, number]\n  entities: any[]\n  prevCameraPos?: [number, number, number]  // 上一帧的位置\n  prevTime: number                          // 上一帧的时间\n  time: number                              // 当前时间\n  velocity?: [number, number, number]       // 速度向量\n  speed?: number                            // 速度标量\n}\n\nexport class ReplayState {\n  cameraPos: [number, number, number]\n  cameraRot: [number, number, number]\n  entities: any[]\n  prevCameraPos?: [number, number, number]  // 上一帧的位置\n  prevTime: number                          // 上一帧的时间\n  time: number                              // 当前时间\n  velocity?: [number, number, number]       // 速度向量\n  speed?: number                            // 速度标量\n\n  constructor(obj: any | null = null) {\n    if (obj) {\n      this.cameraPos = obj.cameraPos ? JSON.parse(JSON.stringify(obj.cameraPos)) : [0, 0, 0]\n      this.cameraRot = obj.cameraRot ? JSON.parse(JSON.stringify(obj.cameraRot)) : [0, 0, 0]\n      this.entities = obj.entities ? JSON.parse(JSON.stringify(obj.entities)) : []\n      this.prevCameraPos = obj.prevCameraPos ? JSON.parse(JSON.stringify(obj.prevCameraPos)) : undefined\n      this.prevTime = obj.prevTime || 0\n      this.time = obj.time || 0\n      this.velocity = obj.velocity ? JSON.parse(JSON.stringify(obj.velocity)) : undefined\n      this.speed = obj.speed || 0\n    } else {\n      this.cameraPos = [0, 0, 0]\n      this.cameraRot = [0, 0, 0]\n      this.entities = []\n      this.prevTime = 0\n      this.time = 0\n    }\n  }\n\n  feedFrame(frame: any) {\n    switch (frame.type) {\n      case 0:\n      case 1: {\n        this.cameraPos[0] = frame.camera.position[0]\n        this.cameraPos[1] = frame.camera.position[1]\n        this.cameraPos[2] = frame.camera.position[2]\n        \n        this.cameraRot[0] = frame.camera.orientation[0]\n        this.cameraRot[1] = frame.camera.orientation[1]\n        this.cameraRot[2] = frame.camera.orientation[2]\n\n        this.time = frame.time\n\n        break;\n      }\n    }\n  }\n\n  clone() {\n    return new ReplayState(this)\n  }\n}\n","import type { BitStream } from '../BitReader'\n\nexport function readCoord(bs: BitStream) {\n  const intFlag = bs.readBits(1)\n  const fractionFlag = bs.readBits(1)\n\n  if (!intFlag && !fractionFlag) {\n    return 0\n  }\n\n  const sign = bs.readBits(1)\n  let intValue = 0\n  let fractionValue = 0\n  if (intFlag) {\n    intValue = bs.readBits(12)\n  }\n  if (fractionFlag) {\n    fractionValue = bs.readBits(3)\n  }\n\n  let value = intValue + fractionValue / 32\n  if (sign) {\n    value = -value\n  }\n\n  return value\n}\n","export enum DeltaType {\n  DT_BYTE = 1,\n  DT_SHORT = 1 << 1,\n  DT_FLOAT = 1 << 2,\n  DT_INTEGER = 1 << 3,\n  DT_ANGLE = 1 << 4,\n  DT_TIMEWINDOW_8 = 1 << 5,\n  DT_TIMEWINDOW_BIG = 1 << 6,\n  DT_STRING = 1 << 7,\n  DT_SIGNED = 1 << 31\n}\n","import { DeltaType } from './DeltaType'\nimport type { BitStream } from '../BitReader'\nimport type { DeltaDecoder } from './DeltaDecoder'\n\nexport function readDelta(bs: BitStream, dd: DeltaDecoder) {\n  const data: { [name: string]: any } = {}\n\n  const maskBitCount = bs.readBits(3)\n  const maskBits = []\n  for (let i = 0; i < maskBitCount; ++i) {\n    maskBits.push(bs.readBits(8))\n  }\n\n  let brk = false\n  for (let i = 0; i < maskBitCount; ++i) {\n    for (let j = 0; j < 8; ++j) {\n      const index = j + i * 8\n      if (index === dd.length) {\n        brk = true\n        break\n      }\n\n      if (maskBits[i] & (1 << j)) {\n        if (dd[index].flags & DeltaType.DT_BYTE) {\n          if (dd[index].flags & DeltaType.DT_SIGNED) {\n            const sign = bs.readBits(1) ? -1 : 1\n            const value = bs.readBits(dd[index].bits - 1)\n            const divisor = dd[index].divisor\n            data[dd[index].name] = (sign * value) / divisor\n          } else {\n            const value = bs.readBits(dd[index].bits)\n            const divisor = dd[index].divisor\n            data[dd[index].name] = value / divisor\n          }\n        } else if (dd[index].flags & DeltaType.DT_SHORT) {\n          if (dd[index].flags & DeltaType.DT_SIGNED) {\n            const sign = bs.readBits(1) ? -1 : 1\n            const value = bs.readBits(dd[index].bits - 1)\n            const divisor = dd[index].divisor\n            data[dd[index].name] = (sign * value) / divisor\n          } else {\n            const value = bs.readBits(dd[index].bits)\n            const divisor = dd[index].divisor\n            data[dd[index].name] = value / divisor\n          }\n        } else if (dd[index].flags & DeltaType.DT_INTEGER) {\n          if (dd[index].flags & DeltaType.DT_SIGNED) {\n            const sign = bs.readBits(1) ? -1 : 1\n            const value = bs.readBits(dd[index].bits - 1)\n            const divisor = dd[index].divisor\n            data[dd[index].name] = (sign * value) / divisor\n          } else {\n            const value = bs.readBits(dd[index].bits)\n            const divisor = dd[index].divisor\n            data[dd[index].name] = value / divisor\n          }\n        } else if (\n          dd[index].flags & DeltaType.DT_FLOAT ||\n          dd[index].flags & DeltaType.DT_TIMEWINDOW_8 ||\n          dd[index].flags & DeltaType.DT_TIMEWINDOW_BIG\n        ) {\n          if (dd[index].flags & DeltaType.DT_SIGNED) {\n            const sign = bs.readBits(1) ? -1 : 1\n            const value = bs.readBits(dd[index].bits - 1)\n            const divisor = dd[index].divisor\n            data[dd[index].name] = (sign * value) / divisor\n          } else {\n            const value = bs.readBits(dd[index].bits)\n            const divisor = dd[index].divisor\n            data[dd[index].name] = value / divisor\n          }\n        } else if (dd[index].flags & DeltaType.DT_ANGLE) {\n          const value = bs.readBits(dd[index].bits)\n          const multiplier = 360 / (1 << dd[index].bits)\n          data[dd[index].name] = value * multiplier\n        } else if (dd[index].flags & DeltaType.DT_STRING) {\n          data[dd[index].name] = bs.readString()\n        }\n      }\n    }\n\n    if (brk) {\n      break\n    }\n  }\n\n  return data\n}\n\nconst initialDeltaDecoders = {\n  delta_description_t: [\n    {\n      name: 'flags',\n      bits: 32,\n      divisor: 1,\n      flags: DeltaType.DT_INTEGER\n    },\n    {\n      name: 'name',\n      bits: 8,\n      divisor: 1,\n      flags: DeltaType.DT_STRING\n    },\n    {\n      name: 'offset',\n      bits: 16,\n      divisor: 1,\n      flags: DeltaType.DT_INTEGER\n    },\n    {\n      name: 'size',\n      bits: 8,\n      divisor: 1,\n      flags: DeltaType.DT_INTEGER\n    },\n    {\n      name: 'bits',\n      bits: 8,\n      divisor: 1,\n      flags: DeltaType.DT_INTEGER\n    },\n    {\n      name: 'divisor',\n      bits: 32,\n      divisor: 4000,\n      flags: DeltaType.DT_FLOAT\n    },\n    {\n      name: 'preMultiplier',\n      bits: 32,\n      divisor: 4000,\n      flags: DeltaType.DT_FLOAT\n    }\n  ]\n}\n\nexport const getInitialDeltaDecoders = (): {\n  [name: string]: DeltaDecoder\n} => ({ ...initialDeltaDecoders })\n","export class BitView {\r\n  static scratch = new DataView(new ArrayBuffer(8))\r\n\r\n  private view: Uint8Array\r\n\r\n  constructor(buffer: ArrayBuffer) {\r\n    this.view = new Uint8Array(buffer, 0, buffer.byteLength)\r\n  }\r\n\r\n  getBits(_offset: number, bits: number, signed = false) {\r\n    let offset = _offset\r\n    const available = this.view.length * 8 - offset\r\n\r\n    if (bits > available) {\r\n      throw new Error('Bits out of bounds')\r\n    }\r\n\r\n    let value = 0\r\n    for (let i = 0; i < bits; ) {\r\n      const remaining = bits - i\r\n      const bitOffset = offset & 7\r\n      const currentByte = this.view[offset >> 3]\r\n\r\n      // the max number of bits we can read from the current byte\r\n      const read = Math.min(remaining, 8 - bitOffset)\r\n\r\n      // create a mask with the correct bit width\r\n      const mask = (1 << read) - 1\r\n      // shift bits we want to the start of the byte and mask of the rest\r\n      const readBits = (currentByte >> bitOffset) & mask\r\n      value |= readBits << i\r\n\r\n      offset += read\r\n      i += read\r\n    }\r\n\r\n    if (signed) {\r\n      // If we're not working with a full 32 bits, check the\r\n      // imaginary MSB for this bit count and convert to a\r\n      // valid 32-bit signed value if set.\r\n      if (bits !== 32 && value & (1 << (bits - 1))) {\r\n        value |= -1 ^ ((1 << bits) - 1)\r\n      }\r\n\r\n      return value\r\n    }\r\n\r\n    return value >>> 0\r\n  }\r\n\r\n  getInt8(offset: number) {\r\n    return this.getBits(offset, 8, true)\r\n  }\r\n\r\n  getUint8(offset: number) {\r\n    return this.getBits(offset, 8, false)\r\n  }\r\n\r\n  getInt16(offset: number) {\r\n    return this.getBits(offset, 16, true)\r\n  }\r\n\r\n  getUint16(offset: number) {\r\n    return this.getBits(offset, 16, false)\r\n  }\r\n\r\n  getInt32(offset: number) {\r\n    return this.getBits(offset, 32, true)\r\n  }\r\n\r\n  getUint32(offset: number) {\r\n    return this.getBits(offset, 32, false)\r\n  }\r\n\r\n  getFloat32(offset: number) {\r\n    BitView.scratch.setUint32(0, this.getUint32(offset))\r\n    return BitView.scratch.getFloat32(0)\r\n  }\r\n\r\n  getFloat64(offset: number) {\r\n    BitView.scratch.setUint32(0, this.getUint32(offset))\r\n    // DataView offset is in bytes.\r\n    BitView.scratch.setUint32(4, this.getUint32(offset + 32))\r\n    return BitView.scratch.getFloat64(0)\r\n  }\r\n}\r\n\r\nexport class BitStream {\r\n  private view: BitView\r\n  index: number\r\n\r\n  constructor(source: ArrayBuffer) {\r\n    this.view = new BitView(source)\r\n    this.index = 0\r\n  }\r\n\r\n  readBits(bits: number, signed = false) {\r\n    const val = this.view.getBits(this.index, bits, signed)\r\n    this.index += bits\r\n    return val\r\n  }\r\n\r\n  readInt8() {\r\n    const val = this.view.getInt8(this.index)\r\n    this.index += 8\r\n    return val\r\n  }\r\n\r\n  readUint8() {\r\n    const val = this.view.getUint8(this.index)\r\n    this.index += 8\r\n    return val\r\n  }\r\n\r\n  readInt16() {\r\n    const val = this.view.getInt16(this.index)\r\n    this.index += 16\r\n    return val\r\n  }\r\n\r\n  readUint16() {\r\n    const val = this.view.getUint16(this.index)\r\n    this.index += 16\r\n    return val\r\n  }\r\n\r\n  readInt32() {\r\n    const val = this.view.getInt32(this.index)\r\n    this.index += 32\r\n    return val\r\n  }\r\n\r\n  readUint32() {\r\n    const val = this.view.getUint32(this.index)\r\n    this.index += 32\r\n    return val\r\n  }\r\n\r\n  readFloat32() {\r\n    const val = this.view.getFloat32(this.index)\r\n    this.index += 32\r\n    return val\r\n  }\r\n\r\n  readFloat64() {\r\n    const val = this.view.getFloat64(this.index)\r\n    this.index += 64\r\n    return val\r\n  }\r\n\r\n  readString(bytes = 0, utf8 = false) {\r\n    let i = 0\r\n    const chars = []\r\n    let append = true\r\n\r\n    // Read while we still have space available, or until we've\r\n    // hit the fixed byte length passed in.\r\n    while (!bytes || (bytes && i < bytes)) {\r\n      const c = this.readUint8()\r\n\r\n      // Stop appending chars once we hit 0x00\r\n      if (c === 0x00) {\r\n        append = false\r\n\r\n        // If we don't have a fixed length to read, break out now.\r\n        if (!bytes) {\r\n          break\r\n        }\r\n      }\r\n      if (append) {\r\n        chars.push(c)\r\n      }\r\n\r\n      i++\r\n    }\r\n\r\n    const string = String.fromCharCode.apply(null, chars)\r\n    if (utf8) {\r\n      try {\r\n        // https://stackoverflow.com/a/17192845\r\n        return decodeURIComponent(string)\r\n      } catch (e) {\r\n        return string\r\n      }\r\n    } else {\r\n      return string\r\n    }\r\n  }\r\n}\r\n\r\n","import { readCoord } from './readCoord'\nimport { readDelta } from './readDelta'\nimport { BitStream } from '../BitReader'\nimport type { DeltaDecoderTable } from './DeltaDecoder'\nimport { type Reader, ReaderDataType } from '../Reader'\n\ntype FrameDataHandler = (r: Reader, deltaDecoder: DeltaDecoderTable) => any\n\nexport const frameReaders = {\n  bad() {\n    throw new Error('Invalid message type')\n  },\n  nop(): null {\n    return null\n  },\n  disconnect(r: Reader) {\n    return {\n      reason: r.str()\n    }\n  },\n  event(r: Reader, deltaDecoders: DeltaDecoderTable) {\n    const bs = new BitStream(r.data.buffer)\n    bs.index = r.tell() * 8\n\n    type Event = {\n      index: number\n      packetIndex?: number\n      fireTime?: number\n      delta?: { [name: string]: any }\n    }\n\n    const events: Event[] = []\n    const eventCount = bs.readBits(5)\n    for (let i = 0; i < eventCount; ++i) {\n      const event: Event = {\n        index: bs.readBits(10)\n      }\n      const packetIndexBit = bs.readBits(1)\n      if (packetIndexBit) {\n        event.packetIndex = bs.readBits(11)\n        const deltaBit = bs.readBits(1)\n        if (deltaBit) {\n          event.delta = readDelta(bs, deltaDecoders.event_t)\n        }\n      }\n      const fireTimeBit = bs.readBits(1)\n      if (fireTimeBit) {\n        event.fireTime = bs.readBits(16)\n      }\n\n      events.push(event)\n    }\n\n    if (bs.index % 8 > 0) {\n      r.seek(Math.floor(bs.index / 8) + 1)\n    } else {\n      r.seek(bs.index / 8)\n    }\n\n    return { events }\n  },\n  version(r: Reader) {\n    return {\n      version: r.ui()\n    }\n  },\n  setView(r: Reader) {\n    return {\n      entityIndex: r.s()\n    }\n  },\n  sound(r: Reader) {\n    const bs = new BitStream(r.data.buffer)\n    bs.index = r.tell() * 8\n\n    const flags = bs.readBits(9)\n\n    let volume = 1\n    if ((flags & 1) !== 0) {\n      volume = bs.readBits(8) / 255\n    }\n\n    let attenuation = 1\n    if ((flags & 2) !== 0) {\n      attenuation = bs.readBits(8) / 64\n    }\n\n    const channel = bs.readBits(3)\n    const entityIndex = bs.readBits(11)\n\n    let soundIndex: number\n    if ((flags & 4) !== 0) {\n      soundIndex = bs.readBits(16)\n    } else {\n      soundIndex = bs.readBits(8)\n    }\n\n    const xFlag = bs.readBits(1)\n    const yFlag = bs.readBits(1)\n    const zFlag = bs.readBits(1)\n    let xPosition = 0\n    let yPosition = 0\n    let zPosition = 0\n    if (xFlag) {\n      xPosition = readCoord(bs)\n    }\n    if (yFlag) {\n      yPosition = readCoord(bs)\n    }\n    if (zFlag) {\n      zPosition = readCoord(bs)\n    }\n\n    let pitch = 1\n    if ((flags & 8) !== 0) {\n      pitch = bs.readBits(8)\n    }\n\n    if (bs.index % 8 > 0) {\n      r.seek(Math.floor(bs.index / 8) + 1)\n    } else {\n      r.seek(bs.index / 8)\n    }\n\n    return {\n      flags,\n      volume,\n      attenuation,\n      channel,\n      entityIndex,\n      soundIndex,\n      xPosition,\n      yPosition,\n      zPosition,\n      pitch\n    }\n  },\n  time(r: Reader) {\n    return {\n      time: r.f()\n    }\n  },\n  print(r: Reader) {\n    return {\n      message: r.str()\n    }\n  },\n  stuffText(r: Reader) {\n    const message = r.str()\n    const commands = message.split(';').map((command) => {\n      const args = command\n        .split(/\\s*(\"[^\"]+\"|[^\\s\"]+)/)\n        .map((arg) => arg.replace(/^\"(.*)\"$/, '$1').trim())\n        .filter((arg) => arg)\n\n      const func = args[0]\n      const params = args.slice(1)\n\n      return { func, params }\n    })\n\n    return { commands }\n  },\n  setAngle(r: Reader) {\n    return {\n      pitch: r.s(),\n      yaw: r.s(),\n      roll: r.s()\n    }\n  },\n  serverInfo(r: Reader) {\n    const info = {\n      protocol: r.i(),\n      spawnCount: r.i(), // map change count\n      mapCrc: r.i(),\n      clientDllHash: r.arrx(16, ReaderDataType.UByte),\n      maxPlayers: r.ub(),\n      playerIndex: r.ub(),\n      isDeathmatch: r.ub(),\n      gameDir: r.str(),\n      hostName: r.str(),\n      mapFileName: r.str(), // path to map relative in mod directory\n      mapCycle: r.str()\n    }\n    r.skip(1) // skip padding\n\n    return info\n  },\n  lightStyle(r: Reader) {\n    return {\n      index: r.ub(),\n      lightInfo: r.str()\n    }\n  },\n  updateUserInfo(r: Reader) {\n    return {\n      clientIndex: r.ub(),\n      clientUserId: r.ui(),\n      clientUserInfo: r.str(),\n      clientCdKeyHash: r.arrx(16, ReaderDataType.UByte)\n    }\n  },\n  deltaDescription(r: Reader, deltaDecoders: DeltaDecoderTable) {\n    const data: {\n      name: string\n      fields: { [name: string]: any }[]\n    } = {\n      name: r.str(),\n      fields: []\n    }\n\n    const bs = new BitStream(r.data.buffer)\n    const fieldCount = r.us()\n    bs.index = r.tell() * 8\n    for (let i = 0; i < fieldCount; ++i) {\n      data.fields.push(readDelta(bs, deltaDecoders.delta_description_t))\n    }\n    deltaDecoders[data.name] = data.fields as any\n\n    if (bs.index % 8 > 0) {\n      r.seek(Math.floor(bs.index / 8) + 1)\n    } else {\n      r.seek(bs.index / 8)\n    }\n\n    return data\n  },\n  clientData(r: Reader, deltaDecoders: DeltaDecoderTable) {\n    const bs = new BitStream(r.data.buffer)\n    bs.index = r.tell() * 8\n\n    const deltaSequence = bs.readBits(1)\n    if (deltaSequence) {\n      // delta update mask\n      bs.index += 8\n    }\n\n    const clientDataDecoder = deltaDecoders.clientdata_t\n    const clientData = readDelta(bs, clientDataDecoder)\n\n    // TODO: weapon data\n    const weaponDataDecoder = deltaDecoders.weapon_data_t\n    while (bs.readBits(1)) {\n      bs.index += 6 // weapon index\n      readDelta(bs, weaponDataDecoder) // weapon data\n    }\n\n    if (bs.index % 8 > 0) {\n      r.seek(Math.floor(bs.index / 8) + 1)\n    } else {\n      r.seek(bs.index / 8)\n    }\n\n    return {\n      clientData\n    }\n  },\n  stopSound(r: Reader) {\n    return {\n      entityIndex: r.s()\n    }\n  },\n  pings(r: Reader) {\n    const bs = new BitStream(r.data.buffer)\n    bs.index = r.tell() * 8\n\n    const pings = []\n    while (bs.readBits(1)) {\n      pings.push({\n        slot: bs.readBits(8),\n        ping: bs.readBits(8),\n        loss: bs.readBits(8)\n      })\n    }\n\n    if (bs.index % 8 > 0) {\n      r.seek(Math.floor(bs.index / 8) + 1)\n    } else {\n      r.seek(bs.index / 8)\n    }\n\n    return pings\n  },\n  particle(r: Reader) {\n    return {\n      position: [r.s() / 8, r.s() / 8, r.s() / 8],\n      direction: [r.b(), r.b(), r.b()],\n      count: r.ub(),\n      color: r.ub()\n    }\n  },\n  damage(): null {\n    // unused\n    return null\n  },\n  spawnStatic(r: Reader) {\n    const data: any = {\n      modelIndex: r.s(),\n      sequence: r.b(),\n      frame: r.b(),\n      colorMap: r.s(),\n      skin: r.b(),\n      position: [],\n      rotation: []\n    }\n    data.position[0] = r.s() / 8\n    data.rotation[0] = r.b() * (360 / 256)\n    data.position[1] = r.s() / 8\n    data.rotation[1] = r.b() * (360 / 256)\n    data.position[2] = r.s() / 8\n    data.rotation[2] = r.b() * (360 / 256)\n    data.renderMode = r.b()\n    if (data.renderMode) {\n      data.renderAmt = r.b()\n      data.renderColor = [r.ub(), r.ub(), r.ub()]\n      data.renderFx = r.b()\n    }\n\n    return data\n  },\n  eventReliable(r: Reader, deltaDecoders: DeltaDecoderTable) {\n    const bs = new BitStream(r.data.buffer)\n    bs.index = r.tell() * 8\n\n    const eventIndex = bs.readBits(10)\n    const eventData = readDelta(bs, deltaDecoders['event_t'])\n    const delayBit = bs.readBits(1)\n    let delay = 0\n    if (delayBit) {\n      delay = bs.readBits(16)\n    }\n\n    if (bs.index % 8 > 0) {\n      r.seek(Math.floor(bs.index / 8) + 1)\n    } else {\n      r.seek(bs.index / 8)\n    }\n\n    return {\n      eventIndex,\n      eventData,\n      delayBit,\n      delay\n    }\n  },\n  spawnBaseLine(r: Reader, deltaDecoders: DeltaDecoderTable) {\n    const bs = new BitStream(r.data.buffer)\n    bs.index = r.tell() * 8\n\n    const entities = []\n    while (true) {\n      const entityIdx = bs.readBits(11)\n      if (entityIdx === (1 << 11) - 1) {\n        break\n      }\n\n      const entityType = bs.readBits(2)\n      let entityTypeString: string\n      if (entityType & 1) {\n        if (entityIdx > 0 && entityIdx <= 32) {\n          entityTypeString = 'entity_state_player_t'\n        } else {\n          entityTypeString = 'entity_state_t'\n        }\n      } else {\n        entityTypeString = 'custom_entity_state_t'\n      }\n\n      entities[entityIdx] = readDelta(bs, deltaDecoders[entityTypeString])\n    }\n\n    const footer = bs.readBits(5)\n    if (footer !== (1 << 5) - 1) {\n      throw new Error('Bad spawnbaseline')\n    }\n\n    const nExtraData = bs.readBits(6)\n    const extraData = []\n    for (let i = 0; i < nExtraData; ++i) {\n      extraData.push(readDelta(bs, deltaDecoders.entity_state_t))\n    }\n\n    if (bs.index % 8 > 0) {\n      r.seek(Math.floor(bs.index / 8) + 1)\n    } else {\n      r.seek(bs.index / 8)\n    }\n\n    return {\n      entities,\n      extraData\n    }\n  },\n  tempEntity(r: Reader) {\n    const TE_BEAMPOINTS = 0 // Beam effect between two points\n    const TE_BEAMENTPOINT = 1 // Beam effect between point and entity\n    const TE_GUNSHOT = 2 // Particle effect plus ricochet sound\n    const TE_EXPLOSION = 3 // Additive sprite, 2 dynamic lights, flickering particles, explosion sound, move vertically 8 pps\n    const TE_TAREXPLOSION = 4 // Quake1 \"tarbaby\" explosion with sound\n    const TE_SMOKE = 5 // Alphablend sprite, move vertically 30 pps\n    const TE_TRACER = 6 // Tracer effect from point to point\n    const TE_LIGHTNING = 7 // TE_BEAMPOINTS with simplified parameters\n    const TE_BEAMENTS = 8\n    const TE_SPARKS = 9 // 8 random tracers with gravity, ricochet sprite\n    const TE_LAVASPLASH = 10 // Quake1 lava splash\n    const TE_TELEPORT = 11 // Quake1 teleport splash\n    const TE_EXPLOSION2 = 12 // Quake1 colormaped (base palette) particle explosion with sound\n    const TE_BSPDECAL = 13 // Decal from the .BSP file\n    const TE_IMPLOSION = 14 // Tracers moving toward a point\n    const TE_SPRITETRAIL = 15 // Line of moving glow sprites with gravity, fadeout, and collisions\n    const TE_SPRITE = 17 // Additive sprite, plays 1 cycle\n    const TE_BEAMSPRITE = 18 // A beam with a sprite at the end\n    const TE_BEAMTORUS = 19 // Screen aligned beam ring, expands to max radius over lifetime\n    const TE_BEAMDISK = 20 // Disk that expands to max radius over lifetime\n    const TE_BEAMCYLINDER = 21 // Cylinder that expands to max radius over lifetime\n    const TE_BEAMFOLLOW = 22 // Create a line of decaying beam segments until entity stops moving\n    const TE_GLOWSPRITE = 23\n    const TE_BEAMRING = 24 // Connect a beam ring to two entities\n    const TE_STREAK_SPLASH = 25 // Oriented shower of tracers\n    const TE_DLIGHT = 27 // Dynamic light, effect world, minor entity effect\n    const TE_ELIGHT = 28 // Point entity light, no world effect\n    const TE_TEXTMESSAGE = 29\n    const TE_LINE = 30\n    const TE_BOX = 31\n    const TE_KILLBEAM = 99 // Kill all beams attached to entity\n    const TE_LARGEFUNNEL = 100\n    const TE_BLOODSTREAM = 101 // Particle spray\n    const TE_SHOWLINE = 102 // Line of particles every 5 units, dies in 30 seconds\n    const TE_BLOOD = 103 // Particle spray\n    const TE_DECAL = 104 // Decal applied to a brush entity (not the world)\n    const TE_FIZZ = 105 // Create alpha sprites inside of entity, float upwards\n    const TE_MODEL = 106 // Create a moving model that bounces and makes a sound when it hits\n    const TE_EXPLODEMODEL = 107 // Spherical shower of models, picks from set\n    const TE_BREAKMODEL = 108 // Box of models or sprites\n    const TE_GUNSHOTDECAL = 109 // Decal and ricochet sound\n    const TE_SPRITE_SPRAY = 110 // Spray of alpha sprites\n    const TE_ARMOR_RICOCHET = 111 // Quick spark sprite, client ricochet sound.\n    const TE_PLAYERDECAL = 112\n    const TE_BUBBLES = 113 // Create alpha sprites inside of box, float upwards\n    const TE_BUBBLETRAIL = 114 // Create alpha sprites along a line, float upwards\n    const TE_BLOODSPRITE = 115 // Spray of opaque sprite1's that fall, single sprite2 for 1..2 secs (this is a high-priority tent)\n    const TE_WORLDDECAL = 116 // Decal applied to the world brush\n    const TE_WORLDDECALHIGH = 117 // Decal (with texture index > 256) applied to world brush\n    const TE_DECALHIGH = 118 // Same as TE_DECAL, but the texture index was greater than 256\n    const TE_PROJECTILE = 119 // Makes a projectile (like a nail) (this is a high-priority tent)\n    const TE_SPRAY = 120 // Throws a shower of sprites or models\n    const TE_PLAYERSPRITES = 121 // Sprites emit from a player's bounding box (ONLY use for players!)\n    const TE_PARTICLEBURST = 122 // Very similar to lavasplash\n    const TE_FIREFIELD = 123 // Makes a field of fire\n    const TE_PLAYERATTACHMENT = 124 // Attaches a TENT to a player (this is a high-priority tent)\n    const TE_KILLPLAYERATTACHMENTS = 125 // Will expire all TENTS attached to a player.\n    const TE_MULTIGUNSHOT = 126 // Much more compact shotgun message\n    const TE_USERTRACER = 127 // Larger message than the standard tracer, but allows some customization.\n\n    const type = r.ub()\n    const data: any = {}\n    switch (type) {\n      case TE_BEAMPOINTS: {\n        r.skip(24)\n        break\n      }\n\n      case TE_BEAMENTPOINT: {\n        r.skip(20)\n        break\n      }\n\n      case TE_GUNSHOT: {\n        r.skip(6)\n        break\n      }\n\n      case TE_EXPLOSION: {\n        r.skip(11)\n        break\n      }\n\n      case TE_TAREXPLOSION: {\n        r.skip(6)\n        break\n      }\n\n      case TE_SMOKE: {\n        r.skip(10)\n        break\n      }\n\n      case TE_TRACER: {\n        r.skip(12)\n        break\n      }\n\n      case TE_LIGHTNING: {\n        r.skip(17)\n        break\n      }\n\n      case TE_BEAMENTS: {\n        r.skip(16)\n        break\n      }\n\n      case TE_SPARKS: {\n        r.skip(6)\n        break\n      }\n\n      case TE_LAVASPLASH: {\n        r.skip(6)\n        break\n      }\n\n      case TE_TELEPORT: {\n        r.skip(6)\n        break\n      }\n\n      case TE_EXPLOSION2: {\n        r.skip(8)\n        break\n      }\n\n      case TE_BSPDECAL: {\n        r.skip(8)\n        const entityIndex = r.s()\n        if (entityIndex) {\n          r.skip(2)\n        }\n        break\n      }\n\n      case TE_IMPLOSION: {\n        r.skip(9)\n        break\n      }\n\n      case TE_SPRITETRAIL: {\n        r.skip(19)\n        break\n      }\n\n      case TE_SPRITE: {\n        r.skip(10)\n        break\n      }\n\n      case TE_BEAMSPRITE: {\n        r.skip(16)\n        break\n      }\n\n      case TE_BEAMTORUS: {\n        r.skip(24)\n        break\n      }\n\n      case TE_BEAMDISK: {\n        r.skip(24)\n        break\n      }\n\n      case TE_BEAMCYLINDER: {\n        r.skip(24)\n        break\n      }\n\n      case TE_BEAMFOLLOW: {\n        r.skip(10)\n        break\n      }\n\n      case TE_GLOWSPRITE: {\n        r.skip(11)\n        break\n      }\n\n      case TE_BEAMRING: {\n        r.skip(16)\n        break\n      }\n\n      case TE_STREAK_SPLASH: {\n        r.skip(19)\n        break\n      }\n\n      case TE_DLIGHT: {\n        r.skip(12)\n        break\n      }\n\n      case TE_ELIGHT: {\n        r.skip(16)\n        break\n      }\n\n      case TE_TEXTMESSAGE: {\n        data.channel = r.b()\n        data.x = r.s()\n        data.y = r.s()\n        data.effect = r.b()\n        data.textColor = [r.ub(), r.ub(), r.ub(), r.ub()]\n        data.effectColor = [r.ub(), r.ub(), r.ub(), r.ub()]\n        data.fadeInTime = r.s()\n        data.fadeOutTime = r.s()\n        data.holdTime = r.s()\n        if (data.effect) {\n          data.effectTime = r.s()\n        }\n        data.message = r.str()\n        break\n      }\n\n      case TE_LINE: {\n        r.skip(17)\n        break\n      }\n\n      case TE_BOX: {\n        r.skip(17)\n        break\n      }\n\n      case TE_KILLBEAM: {\n        r.skip(2)\n        break\n      }\n\n      case TE_LARGEFUNNEL: {\n        r.skip(10)\n        break\n      }\n\n      case TE_BLOODSTREAM: {\n        r.skip(14)\n        break\n      }\n\n      case TE_SHOWLINE: {\n        r.skip(12)\n        break\n      }\n\n      case TE_BLOOD: {\n        r.skip(14)\n        break\n      }\n\n      case TE_DECAL: {\n        r.skip(9)\n        break\n      }\n\n      case TE_FIZZ: {\n        r.skip(5)\n        break\n      }\n\n      case TE_MODEL: {\n        r.skip(17)\n        break\n      }\n\n      case TE_EXPLODEMODEL: {\n        r.skip(13)\n        break\n      }\n\n      case TE_BREAKMODEL: {\n        r.skip(24)\n        break\n      }\n\n      case TE_GUNSHOTDECAL: {\n        r.skip(9)\n        break\n      }\n\n      case TE_SPRITE_SPRAY: {\n        r.skip(17)\n        break\n      }\n\n      case TE_ARMOR_RICOCHET: {\n        r.skip(7)\n        break\n      }\n\n      case TE_PLAYERDECAL: {\n        r.skip(10)\n        break\n      }\n\n      case TE_BUBBLES: {\n        r.skip(19)\n        break\n      }\n\n      case TE_BUBBLETRAIL: {\n        r.skip(19)\n        break\n      }\n\n      case TE_BLOODSPRITE: {\n        r.skip(12)\n        break\n      }\n\n      case TE_WORLDDECAL: {\n        r.skip(7)\n        break\n      }\n\n      case TE_WORLDDECALHIGH: {\n        r.skip(7)\n        break\n      }\n\n      case TE_DECALHIGH: {\n        r.skip(9)\n        break\n      }\n\n      case TE_PROJECTILE: {\n        r.skip(16)\n        break\n      }\n\n      case TE_SPRAY: {\n        r.skip(18)\n        break\n      }\n\n      case TE_PLAYERSPRITES: {\n        r.skip(5)\n        break\n      }\n\n      case TE_PARTICLEBURST: {\n        r.skip(10)\n        break\n      }\n\n      case TE_FIREFIELD: {\n        r.skip(9)\n        break\n      }\n\n      case TE_PLAYERATTACHMENT: {\n        r.skip(7)\n        break\n      }\n\n      case TE_KILLPLAYERATTACHMENTS: {\n        r.skip(1)\n        break\n      }\n\n      case TE_MULTIGUNSHOT: {\n        r.skip(18)\n        break\n      }\n\n      case TE_USERTRACER: {\n        r.skip(15)\n        break\n      }\n\n      default: {\n        throw new Error('Unknown temp entity type')\n      }\n    }\n\n    return data\n  },\n  setPause(r: Reader) {\n    return {\n      isPaused: r.b()\n    }\n  },\n  signOnNum(r: Reader) {\n    return {\n      sign: r.b()\n    }\n  },\n  centerPrint(r: Reader) {\n    return {\n      message: r.str()\n    }\n  },\n  killedMonster(): null {\n    // unused\n    return null\n  },\n  foundSecret(): null {\n    // unused\n    return null\n  },\n  spawnStaticSound(r: Reader) {\n    return {\n      position: [r.s() / 8, r.s() / 8, r.s() / 8],\n      soundIndex: r.us(),\n      volume: r.ub() / 255,\n      attenuation: r.ub() / 64,\n      entityIndex: r.us(),\n      pitch: r.ub(),\n      flags: r.ub()\n    }\n  },\n  intermission(): null {\n    // has no arguments\n    return null\n  },\n  finale(r: Reader) {\n    return {\n      text: r.str()\n    }\n  },\n  cdTrack(r: Reader) {\n    return {\n      track: r.b(),\n      loopTrack: r.b()\n    }\n  },\n  restore(r: Reader) {\n    const saveName = r.str()\n    const mapCount = r.ub()\n    const maps = []\n    for (let i = 0; i < mapCount; ++i) {\n      maps.push(r.str())\n    }\n\n    return { saveName, maps }\n  },\n  cutscene(r: Reader) {\n    return {\n      text: r.str()\n    }\n  },\n  weaponAnim(r: Reader) {\n    return {\n      sequenceNumber: r.b(),\n      weaponModelBodyGroup: r.b()\n    }\n  },\n  decalName(r: Reader) {\n    return {\n      positionIndex: r.ub(),\n      decalName: r.str()\n    }\n  },\n  roomType(r: Reader) {\n    return {\n      type: r.us()\n    }\n  },\n  addAngle(r: Reader) {\n    // NOTE: not sure if (360/65536) or (65536/360)\n    return {\n      angleToAdd: r.s() / (360 / 65536)\n    }\n  },\n  newUserMsg(r: Reader) {\n    return {\n      index: r.ub(),\n      size: r.b(),\n      name: r.nstr(16)\n    }\n  },\n  packetEntities(r: Reader, deltaDecoders: DeltaDecoderTable) {\n    const bs = new BitStream(r.data.buffer)\n    bs.index = r.tell() * 8\n\n    const entityStates = []\n    bs.readBits(16) // skip entity count (unreliable)\n    let entityNumber = 0\n    while (true) {\n      const footer = bs.readBits(16)\n      if (footer === 0) {\n        break\n      }\n\n      bs.index -= 16\n\n      const entityNumberIncrement = bs.readBits(1)\n      if (!entityNumberIncrement) {\n        const absoluteEntityNumber = bs.readBits(1)\n        if (absoluteEntityNumber) {\n          entityNumber = bs.readBits(11)\n        } else {\n          entityNumber += bs.readBits(6)\n        }\n      } else {\n        entityNumber++\n      }\n\n      const custom = bs.readBits(1)\n      const useBaseline = bs.readBits(1)\n      if (useBaseline) {\n        bs.index += 6 // baseline index\n      }\n\n      let entityType = 'entity_state_t'\n      if (entityNumber > 0 && entityNumber <= 32) {\n        entityType = 'entity_state_player_t'\n      } else if (custom) {\n        entityType = 'custom_entity_state_t'\n      }\n\n      entityStates.push(readDelta(bs, deltaDecoders[entityType]))\n    }\n\n    if (bs.index % 8 > 0) {\n      r.seek(Math.floor(bs.index / 8) + 1)\n    } else {\n      r.seek(bs.index / 8)\n    }\n\n    return { entityStates }\n  },\n  deltaPacketEntities(r: Reader, deltaDecoders: DeltaDecoderTable) {\n    const bs = new BitStream(r.data.buffer)\n    bs.index = r.tell() * 8\n\n    bs.readBits(16) // skip entity count (unreliable)\n    bs.index += 8 // either updatemask or delta sequence number\n\n    const entityStates = []\n    let entityIdx = 0\n    while (true) {\n      const footer = bs.readBits(16)\n      if (footer === 0) {\n        break\n      }\n\n      bs.index -= 16\n\n      const removeEntity = bs.readBits(1)\n      const absoluteEntityNumber = bs.readBits(1)\n      if (absoluteEntityNumber) {\n        entityIdx = bs.readBits(11)\n      } else {\n        entityIdx += bs.readBits(6)\n      }\n\n      if (removeEntity) {\n        continue\n      }\n\n      const custom = bs.readBits(1)\n      let entityType = 'entity_state_t'\n      if (entityIdx > 0 && entityIdx < 32) {\n        entityType = 'entity_state_player_t'\n      } else if (custom) {\n        entityType = 'custom_entity_state_t'\n      }\n\n      entityStates[entityIdx] = readDelta(bs, deltaDecoders[entityType])\n    }\n\n    if (bs.index % 8 > 0) {\n      r.seek(Math.floor(bs.index / 8) + 1)\n    } else {\n      r.seek(bs.index / 8)\n    }\n\n    return { entityStates }\n  },\n  choke(): null {\n    // no arguments\n    return null\n  },\n  resourceList(r: Reader) {\n    const bs = new BitStream(r.data.buffer)\n    bs.index = r.tell() * 8\n\n    // TODO: extract more data???\n\n    const entries = []\n    const entryCount = bs.readBits(12)\n    for (let i = 0; i < entryCount; ++i) {\n      const entry = {\n        type: bs.readBits(4),\n        name: bs.readString(),\n        index: bs.readBits(12),\n        size: bs.readBits(24)\n      }\n\n      const flags = bs.readBits(3)\n      if (flags & 4) {\n        // TODO: entry.md5hash = read 128 bits\n        bs.index += 128\n      }\n\n      // 1 bit = boolean hasExtraInfo\n      if (bs.readBits(1)) {\n        // 32 bytes extraInfo\n        bs.index += 256\n      }\n\n      entries.push(entry)\n    }\n\n    if (bs.readBits(1)) {\n      while (bs.readBits(1)) {\n        const nBits = bs.readBits(1) ? 5 : 10\n        bs.index += nBits\n      }\n    }\n\n    if (bs.index % 8 > 0) {\n      r.seek(Math.floor(bs.index / 8) + 1)\n    } else {\n      r.seek(bs.index / 8)\n    }\n\n    return entries\n  },\n  newMoveVars(r: Reader) {\n    return {\n      gravity: r.f(),\n      stopSpeed: r.f(),\n      maxSpeed: r.f(),\n      spectatorMaxSpeed: r.f(),\n      acceleration: r.f(),\n      airAcceleration: r.f(),\n      waterAcceleration: r.f(),\n      friction: r.f(),\n      edgeFriction: r.f(),\n      waterFriction: r.f(),\n      entityGravity: r.f(),\n      bounce: r.f(),\n      stepSize: r.f(),\n      maxVelocity: r.f(),\n      zMax: r.f(),\n      waveHeight: r.f(),\n      footsteps: r.b(),\n      rollAngle: r.f(),\n      rollSpeed: r.f(),\n      skyColor: [r.f(), r.f(), r.f()],\n      skyVec: [r.f(), r.f(), r.f()],\n      skyName: r.str()\n    }\n  },\n  resourceRequest(r: Reader) {\n    const data = {\n      spawnCount: r.i()\n    }\n    r.skip(4) // unknown (always 0)\n\n    return data\n  },\n  customization(r: Reader) {\n    const playerIndex = r.ub()\n    const type = r.ub()\n    const name = r.str()\n    const index = r.us()\n    const downloadSize = r.ui()\n    const flags = r.ub()\n    let md5hash: number[] | null = null\n    if (flags & 4) {\n      md5hash = [r.i(), r.i(), r.i(), r.i()]\n    }\n\n    return {\n      playerIndex,\n      type,\n      name,\n      index,\n      downloadSize,\n      flags,\n      md5hash\n    }\n  },\n  crosshairAngle(r: Reader) {\n    return {\n      pitch: r.b(),\n      yaw: r.b()\n    }\n  },\n  soundFade(r: Reader) {\n    return {\n      initialPercent: r.ub(),\n      holdTime: r.ub(),\n      fadeOutTime: r.ub(),\n      fadeInTime: r.ub()\n    }\n  },\n  fileTxferFailed(r: Reader) {\n    return {\n      filename: r.str()\n    }\n  },\n  hltv(r: Reader) {\n    return {\n      mode: r.ub()\n    }\n  },\n  director(r: Reader) {\n    const length = r.ub()\n    return {\n      flag: r.ub(),\n      message: r.nstr(length - 1)\n    }\n  },\n  voiceInit(r: Reader) {\n    return {\n      codecName: r.str(),\n      quality: r.b()\n    }\n  },\n  voiceData(r: Reader) {\n    const playerIndex = r.ub()\n    const size = r.us()\n    const data = r.arrx(size, ReaderDataType.UByte)\n    return { playerIndex, data }\n  },\n  sendExtraInfo(r: Reader) {\n    return {\n      fallbackDir: r.str(),\n      canCheat: r.ub()\n    }\n  },\n  timeScale(r: Reader) {\n    return {\n      timeScale: r.f()\n    }\n  },\n  resourceLocation(r: Reader) {\n    return {\n      url: r.str()\n    }\n  },\n  sendCvarValue(r: Reader) {\n    // deprecated\n    return {\n      name: r.str()\n    }\n  },\n  sendCvarValue2(r: Reader) {\n    return {\n      requestId: r.ui(),\n      name: r.str()\n    }\n  }\n}\n\n// prettier-ignore\nconst frameReadHandlers = [\n  frameReaders.bad,                 // SVC_BAD                      0\n  frameReaders.nop,                 // SVC_NOP                      1\n  frameReaders.disconnect,          // SVC_DISCONNECT               2\n  frameReaders.event,               // SVC_EVENT                    3\n  frameReaders.version,             // SVC_VERSION                  4\n  frameReaders.setView,             // SVC_SETVIEW                  5\n  frameReaders.sound,               // SVC_SOUND                    6\n  frameReaders.time,                // SVC_TIME                     7\n  frameReaders.print,               // SVC_PRINT                    8\n  frameReaders.stuffText,           // SVC_STUFFTEXT                9\n  frameReaders.setAngle,            // SVC_SETANGLE                10\n  frameReaders.serverInfo,          // SVC_SERVERINFO              11\n  frameReaders.lightStyle,          // SVC_LIGHTSTYLE              12\n  frameReaders.updateUserInfo,      // SVC_UPDATEUSERINFO          13\n  frameReaders.deltaDescription,    // SVC_DELTADESCRIPTION        14\n  frameReaders.clientData,          // SVC_CLIENTDATA              15\n  frameReaders.stopSound,           // SVC_STOPSOUND               16\n  frameReaders.pings,               // SVC_PINGS                   17\n  frameReaders.particle,            // SVC_PARTICLE                18\n  frameReaders.damage,              // SVC_DAMAGE                  19\n  frameReaders.spawnStatic,         // SVC_SPAWN            20\n  frameReaders.eventReliable,       // SVC_EVENT_RELIABLE          21\n  frameReaders.spawnBaseLine,       // SVC_SPAWNBASELINE           22\n  frameReaders.tempEntity,          // SVC_TEMPENTITY              23\n  frameReaders.setPause,            // SVC_SETPAUSE                24\n  frameReaders.signOnNum,           // SVC_SIGNONNUM               25\n  frameReaders.centerPrint,         // SVC_CENTERPRINT             26\n  frameReaders.killedMonster,       // SVC_KILLEDMONSTER           27\n  frameReaders.foundSecret,         // SVC_FOUNDSECRET             28\n  frameReaders.spawnStaticSound,    // SVC_SPAWNSTATICSOUND        29\n  frameReaders.intermission,        // SVC_INTERMISSION            30\n  frameReaders.finale,              // SVC_FINALE                  31\n  frameReaders.cdTrack,             // SVC_CDTRACK                 32\n  frameReaders.restore,             // SVC_RESTORE                 33\n  frameReaders.cutscene,            // SVC_CUTSCENE                34\n  frameReaders.weaponAnim,          // SVC_WEAPONANIM              35\n  frameReaders.decalName,           // SVC_DECALNAME               36\n  frameReaders.roomType,            // SVC_ROOMTYPE                37\n  frameReaders.addAngle,            // SVC_ADDANGLE                38\n  frameReaders.newUserMsg,          // SVC_NEWUSERMSG              39\n  frameReaders.packetEntities,      // SVC_PACKETENTITIES          40\n  frameReaders.deltaPacketEntities, // SVC_DELTAPACKETENTITIES     41\n  frameReaders.choke,               // SVC_CHOKE                   42\n  frameReaders.resourceList,        // SVC_RESOURCELIST            43\n  frameReaders.newMoveVars,         // SVC_NEWMOVEVARS             44\n  frameReaders.resourceRequest,     // SVC_RESOURCEREQUEST         45\n  frameReaders.customization,       // SVC_CUSTOMIZATION           46\n  frameReaders.crosshairAngle,      // SVC_CROSSHAIRANGLE          47\n  frameReaders.soundFade,           // SVC_SOUNDFADE               48\n  frameReaders.fileTxferFailed,     // SVC_FILETXFERFAILED         49\n  frameReaders.hltv,                // SVC_HLTV                    50\n  frameReaders.director,            // SVC_DIRECTOR                51\n  frameReaders.voiceInit,           // SVC_VOICEINIT               52\n  frameReaders.voiceData,           // SVC_VOICEDATA               53\n  frameReaders.sendExtraInfo,       // SVC_SENDEXTRAINFO           54\n  frameReaders.timeScale,           // SVC_TIMESCALE               55\n  frameReaders.resourceLocation,    // SVC_RESOURCELOCATION        56\n  frameReaders.sendCvarValue,       // SVC_SENDCVARVALUE           57\n  frameReaders.sendCvarValue2       // SVC_SENDCVARVALUE2          58\n] as FrameDataHandler[]\n\nexport function readFrame(r: Reader, type: number, deltaDecoders: DeltaDecoderTable) {\n  if (type === 0) {\n    // SVC_BAD shouldn't happen\n    return null\n  }\n\n  const handler = frameReadHandlers[type]\n  if (handler) {\n    return handler(r, deltaDecoders)\n  }\n\n  return null\n}\n\nexport enum SVC {\n  BAD = 0,\n  NOP = 1,\n  DISCONNECT = 2,\n  EVENT = 3,\n  VERSION = 4,\n  SETVIEW = 5,\n  SOUND = 6,\n  TIME = 7,\n  PRINT = 8,\n  STUFFTEXT = 9,\n  SETANGLE = 10,\n  SERVERINFO = 11,\n  LIGHTSTYLE = 12,\n  UPDATEUSERINFO = 13,\n  DELTADESCRIPTION = 14,\n  CLIENTDATA = 15,\n  STOPSOUND = 16,\n  PINGS = 17,\n  PARTICLE = 18,\n  DAMAGE = 19,\n  SPAWN = 20,\n  EVENT_RELIABLE = 21,\n  SPAWNBASELINE = 22,\n  TEMPENTITY = 23,\n  SETPAUSE = 24,\n  SIGNONNUM = 25,\n  CENTERPRINT = 26,\n  KILLEDMONSTER = 27,\n  FOUNDSECRET = 28,\n  SPAWNSTATICSOUND = 29,\n  INTERMISSION = 30,\n  FINALE = 31,\n  CDTRACK = 32,\n  RESTORE = 33,\n  CUTSCENE = 34,\n  WEAPONANIM = 35,\n  DECALNAME = 36,\n  ROOMTYPE = 37,\n  ADDANGLE = 38,\n  NEWUSERMSG = 39,\n  PACKETENTITIES = 40,\n  DELTAPACKETENTITIES = 41,\n  CHOKE = 42,\n  RESOURCELIST = 43,\n  NEWMOVEVARS = 44,\n  RESOURCEREQUEST = 45,\n  CUSTOMIZATION = 46,\n  CROSSHAIRANGLE = 47,\n  SOUNDFADE = 48,\n  FILETXFERFAILED = 49,\n  HLTV = 50,\n  DIRECTOR = 51,\n  VOICEINIT = 52,\n  VOICEDATA = 53,\n  SENDEXTRAINFO = 54,\n  TIMESCALE = 55,\n  RESOURCELOCATION = 56,\n  SENDCVARVALUE = 57,\n  SENDCVARVALUE2 = 58\n}\n","import { ReplayMap } from './ReplayMap'\nimport { ReplayChunk } from './ReplayChunk'\nimport { ReplayState } from './ReplayState'\nimport * as FrameData from './FrameDataReader'\nimport { Reader, ReaderDataType } from '../Reader'\nimport { getInitialDeltaDecoders } from './readDelta'\n\nconst checkType = (r: Reader) => {\n  const magic = r.nstr(8)\n  return magic === 'HLDEMO'\n}\n\nconst readHeader = (r: Reader) => ({\n  demoProtocol: r.ui(),\n  netProtocol: r.ui(),\n  mapName: r.nstr(260),\n  modName: r.nstr(260),\n  mapCrc: r.i(),\n  dirOffset: r.ui()\n})\n\nconst readDirectories = (r: Reader, offset: number) => {\n  r.seek(offset)\n\n  const count = r.ui()\n  const directories = []\n  for (let i = 0; i < count; ++i) {\n    directories.push({\n      id: r.ui(),\n      name: r.nstr(64),\n      flags: r.ui(),\n      cdTrack: r.i(),\n      time: r.f(),\n      frames: r.ui(),\n      offset: r.ui(),\n      length: r.ui()\n    })\n  }\n\n  return directories\n}\n\nconst readFrameData = (r: Reader, deltaDecoders: any, customMessages: any) => {\n  const length = r.ui()\n  const limit = r.tell() + length\n  const data = []\n  while (r.tell() < limit) {\n    const type = r.ub()\n    if (type === 1) {\n      continue\n    }\n\n    if (type >= 64) {\n      if (customMessages[type] && customMessages[type].size > -1) {\n        r.skip(customMessages[type].size)\n      } else {\n        r.skip(r.ub())\n      }\n\n      continue\n    }\n\n    const message = FrameData.readFrame(r, type, deltaDecoders)\n    if (message) {\n      if (type === 39) {\n        customMessages[message.index] = message\n      }\n      data.push({\n        type,\n        data: message\n      })\n    } else {\n      r.seek(limit)\n    }\n  }\n\n  // just in case\n  r.seek(limit)\n\n  return data\n}\n\nconst readFrame = (r: Reader, deltaDecoders: any, customMessages: any) => {\n  const frame: any = {\n    type: r.ub(),\n    time: r.f(),\n    tick: r.ui()\n  }\n\n  switch (frame.type) {\n    case 0:\n    case 1: {\n      r.skip(4)\n      frame.camera = {\n        position: [r.f(), r.f(), r.f()],\n        orientation: [r.f(), r.f(), r.f()]\n      }\n      r.skip(436)\n      frame.data = readFrameData(r, deltaDecoders, customMessages)\n      break\n    }\n    case 2: {\n      break\n    }\n    case 3: {\n      frame.command = r.nstr(64)\n      break\n    }\n    case 4: {\n      r.skip(32)\n      break\n    }\n    case 5: {\n      break\n    }\n    case 6: {\n      r.skip(84)\n      break\n    }\n    case 7: {\n      r.skip(8)\n      break\n    }\n    case 8: {\n      frame.sound = {\n        channel: r.i(),\n        sample: r.nstr(r.ui()),\n        attenuation: r.f(),\n        volume: r.f(),\n        flags: r.ui(),\n        pitch: r.i()\n      }\n      break\n    }\n    case 9: {\n      r.skip(r.ui())\n      break\n    }\n    default: {\n      frame.error = true\n      break\n    }\n  }\n\n  return frame\n}\n\nexport class Replay {\n  header: any\n  mapName: string\n  directories: any\n\n  constructor(header: any, directories: any) {\n    this.header = header\n    this.mapName = this.header.mapName\n    this.directories = directories\n  }\n\n  static parseFromArrayBuffer(buffer: ArrayBuffer) {\n    const r = new Reader(buffer)\n    const magic = r.nstr(8)\n    if (magic !== 'HLDEMO') {\n      throw new Error('Invalid replay format')\n    }\n\n    const header: any = {}\n    header.demoProtocol = r.ui()\n    header.netProtocol = r.ui()\n    header.mapName = r.nstr(260)\n    header.modName = r.nstr(260)\n    header.mapCrc = r.i()\n    header.dirOffset = r.ui()\n\n    r.seek(header.dirOffset)\n    const directoryCount = r.ui()\n    const directories: any[] = []\n    for (let i = 0; i < directoryCount; ++i) {\n      directories.push({\n        id: r.ui(),\n        name: r.nstr(64),\n        flags: r.ui(),\n        cdTrack: r.i(),\n        time: r.f(),\n        frames: r.ui(),\n        offset: r.ui(),\n        length: r.ui(),\n        macros: []\n      })\n    }\n\n    for (let i = 0; i < directories.length; ++i) {\n      r.seek(directories[i].offset)\n\n      let isFinalMacroReached = false\n      while (!isFinalMacroReached) {\n        const macro: any = {\n          type: r.b(),\n          time: r.f(),\n          frame: r.ui()\n        }\n\n        switch (macro.type) {\n          case 0:\n          case 1: {\n            r.skip(4)\n            macro.camera = {\n              position: [r.f(), r.f(), r.f()],\n              orientation: [r.f(), r.f(), r.f()]\n            }\n            r.skip(436)\n            r.skip(r.ui())\n            break\n          }\n\n          case 2: {\n            // empty macro\n            // signals the beginning of directory entry\n            break\n          }\n\n          case 3: {\n            macro.command = r.nstr(64)\n            break\n          }\n\n          case 4: {\n            r.skip(32)\n            break\n          }\n\n          case 5: {\n            // empty macro that signals end of directory entry\n            isFinalMacroReached = true\n            break\n          }\n\n          case 6: {\n            r.skip(84)\n            break\n          }\n\n          case 7: {\n            r.skip(8)\n            break\n          }\n\n          case 8: {\n            r.skip(4)\n            r.skip(r.ui() + 16)\n            break\n          }\n\n          case 9: {\n            r.skip(r.ui())\n            break\n          }\n\n          default: {\n            const offset = Number(r.tell() - 9).toString(16)\n            const msg = [`Unexpected macro (${macro.type})`, ` at offset = ${offset}.`].join('')\n            throw new Error(msg)\n          }\n        }\n\n        directories[i].macros.push(macro)\n      }\n    }\n\n    return new Replay(header, directories)\n  }\n\n  static parseFullFromArrayBuffer(buffer: ArrayBuffer) {\n    const r = new Reader(buffer)\n    const magic = r.nstr(8)\n    if (magic !== 'HLDEMO') {\n      throw new Error('Invalid replay format')\n    }\n\n    const header: any = {}\n    header.demoProtocol = r.ui()\n    header.netProtocol = r.ui()\n    header.mapName = r.nstr(260)\n    header.modName = r.nstr(260)\n    header.mapCrc = r.i()\n    header.dirOffset = r.ui()\n\n    r.seek(header.dirOffset)\n    const directoryCount = r.ui()\n    const directories: any[] = []\n    for (let i = 0; i < directoryCount; ++i) {\n      directories.push({\n        id: r.ui(),\n        name: r.nstr(64),\n        flags: r.ui(),\n        cdTrack: r.i(),\n        time: r.f(),\n        frames: r.ui(),\n        offset: r.ui(),\n        length: r.ui(),\n        macros: []\n      })\n    }\n\n    const deltaDecoders = getInitialDeltaDecoders()\n\n    const customMessages = []\n\n    for (let i = 0; i < directories.length; ++i) {\n      r.seek(directories[i].offset)\n\n      let isFinalMacroReached = false\n      while (!isFinalMacroReached) {\n        const macro: any = {\n          type: r.b(),\n          time: r.f(),\n          frame: r.ui()\n        }\n        switch (macro.type) {\n          case 0:\n          case 1: {\n            r.skip(4)\n            macro.camera = {\n              position: [r.f(), r.f(), r.f()],\n              orientation: [r.f(), r.f(), r.f()],\n              forward: [r.f(), r.f(), r.f()],\n              right: [r.f(), r.f(), r.f()],\n              up: [r.f(), r.f(), r.f()]\n            }\n\n            macro.RefParams = {\n              frametime: r.f(),\n              time: r.f(),\n              intermission: r.i(),\n              paused: r.i(),\n              spectator: r.i(),\n              onground: r.i(),\n              waterlevel: r.i(),\n              velocity: [r.f(), r.f(), r.f()],\n              origin: [r.f(), r.f(), r.f()],\n              viewHeight: [r.f(), r.f(), r.f()],\n              idealPitch: r.f(),\n              viewAngles: [r.f(), r.f(), r.f()],\n              health: r.i(),\n              crosshairAngle: [r.f(), r.f(), r.f()],\n              viewSize: r.f(),\n              punchAngle: [r.f(), r.f(), r.f()],\n              maxClients: r.i(),\n              viewEntity: r.i(),\n              playerCount: r.i(),\n              maxEntities: r.i(),\n              demoPlayback: r.i(),\n              hardware: r.i(),\n              smoothing: r.i(),\n              ptr_cmd: r.i(),\n              ptr_movevars: r.i(),\n              viewport: [r.i(), r.i(), r.i(), r.i()],\n              nextView: r.i(),\n              onlyClientDraw: r.i()\n            }\n\n            macro.UserCmd = {\n              lerp_msec: r.s(),\n              msec: r.ub(),\n              UNUSED1: r.ub(),\n              viewAngles: [r.f(), r.f(), r.f()],\n              forwardMove: r.f(),\n              sideMove: r.f(),\n              upMove: r.f(),\n              lightLevel: r.b(),\n              UNUSED2: r.ub(),\n              buttons: r.us(),\n              impulse: r.b(),\n              weaponSelect: r.b(),\n              UNUSED: r.s(),\n              impactIndex: r.i(),\n              impactPosition: [r.f(), r.f(), r.f()]\n            }\n\n            macro.MoveVars = {\n              gravity: r.f(),\n              stopSpeed: r.f(),\n              maxSpeed: r.f(),\n              spectatorMaxSpeed: r.f(),\n              acceleration: r.f(),\n              airAcceleration: r.f(),\n              waterAcceleration: r.f(),\n              friction: r.f(),\n              edgeFriction: r.f(),\n              waterFriction: r.f(),\n              entityGravity: r.f(),\n              bounce: r.f(),\n              stepSize: r.f(),\n              maxVelocity: r.f(),\n              zMax: r.f(),\n              waveHeight: r.f(),\n              footsteps: r.i(),\n              skyName: r.nstr(32),\n              rollAngle: r.f(),\n              rollSpeed: r.f(),\n              skyColor: [r.f(), r.f(), r.f()],\n              skyVec: [r.f(), r.f(), r.f()]\n            }\n\n            macro.view = [r.f(), r.f(), r.f()]\n            macro.viewModel = r.i()\n\n            macro.incoming_sequence = r.i()\n            macro.incoming_acknowledged = r.i()\n            macro.incoming_reliable_acknowledged = r.i()\n            macro.incoming_reliable_sequence = r.i()\n            macro.outgoing_sequence = r.i()\n            macro.reliable_sequence = r.i()\n            macro.last_reliable_sequence = r.i()\n\n            const frameDataLength = r.ui()\n            const frameDataEnd = frameDataLength + r.tell()\n            macro.frameData = []\n            while (r.tell() < frameDataEnd) {\n              const type = r.ub()\n              if (type === 1) {\n                continue // skip SVC_NOP\n              }\n\n              if (type >= 64) {\n                // TODO: parse custom message\n                if (customMessages[type] && customMessages[type].size > -1) {\n                  r.skip(customMessages[type].size)\n                } else {\n                  r.skip(r.ub())\n                }\n\n                continue\n              }\n\n              const frameData = FrameData.readFrame(r, type, deltaDecoders)\n              if (frameData) {\n                if (type === 39) {\n                  customMessages[frameData.index] = frameData\n                }\n                macro.frameData.push({ type, frameData })\n              } else {\n                r.seek(frameDataEnd)\n              }\n            }\n\n            // if r.tell() > frameDataEnd something wrong happened\n            r.seek(frameDataEnd)\n            break\n          }\n\n          case 2: {\n            // empty macro\n            // signals the beginning of directory entry\n            break\n          }\n\n          case 3: {\n            macro.command = r.nstr(64)\n            break\n          }\n\n          case 4: {\n            macro.clientData = {\n              position: [r.f(), r.f(), r.f()],\n              rotation: [r.f(), r.f(), r.f()],\n              weaponFlags: r.ui(),\n              fov: r.f()\n            }\n            break\n          }\n\n          case 5: {\n            // empty macro that signals end of directory entry\n            isFinalMacroReached = true\n            break\n          }\n\n          case 6: {\n            macro.event = {\n              flags: r.ui(),\n              index: r.ui(),\n              delay: r.f(),\n              args: {\n                flags: r.ui(),\n                entityIndex: r.ui(),\n                position: [r.f(), r.f(), r.f()],\n                rotation: [r.f(), r.f(), r.f()],\n                velocity: [r.f(), r.f(), r.f()],\n                ducking: r.ui(),\n                fparam1: r.f(),\n                fparam2: r.f(),\n                iparam1: r.i(),\n                iparam2: r.i(),\n                bparam1: r.i(),\n                bparam2: r.i()\n              }\n            }\n            break\n          }\n\n          case 7: {\n            macro.weaponAnimation = {\n              animation: r.i(),\n              body: r.i()\n            }\n            break\n          }\n\n          case 8: {\n            macro.sound = {\n              channel: r.i(),\n              sample: r.nstr(r.ui()),\n              attenuation: r.f(),\n              volume: r.f(),\n              flags: r.ui(),\n              pitch: r.i()\n            }\n            break\n          }\n\n          case 9: {\n            r.skip(r.ui())\n            break\n          }\n\n          default: {\n            const offset = Number(r.tell() - 9).toString(16)\n            const msg = `Unexpected macro (${macro.type}) at offset = ${offset}`\n\n            throw new Error(msg)\n          }\n        }\n\n        directories[i].macros.push(macro)\n      }\n    }\n\n    return new Replay(header, directories)\n  }\n\n  static parseIntoChunks(buffer: ArrayBuffer) {\n    const r = new Reader(buffer)\n\n    if (!checkType(r)) {\n      throw new Error('Invalid replay file format')\n    }\n\n    const maps = []\n    const deltaDecoders = getInitialDeltaDecoders()\n    const customMessages: any[] = []\n\n    const header = readHeader(r)\n    const directories = readDirectories(r, header.dirOffset)\n\n    let currentMap: ReplayMap | undefined\n    let currentChunk: ReplayChunk\n    let lastFrame: any\n    let lastFrameOffset: number\n    const state = new ReplayState()\n\n    // read loading segment\n    let directoryEndOffset = directories[0].offset + directories[0].length\n    r.seek(directories[0].offset)\n    while (r.tell() < directoryEndOffset) {\n      const frame = readFrame(r, deltaDecoders, customMessages)\n      state.feedFrame(frame)\n\n      if (frame.error) {\n        throw new Error('Encountered error while reading replay')\n      }\n\n      if (frame.type < 2 /* 0 or 1 */) {\n        const serverInfo = frame.data.find((msg: any) => msg.type === FrameData.SVC.SERVERINFO)\n        if (serverInfo) {\n          currentMap = new ReplayMap(serverInfo.data.mapFileName)\n          maps.push(currentMap)\n        }\n\n        const resourceList = frame.data.find((msg: any) => msg.type === FrameData.SVC.RESOURCELIST)\n        if (resourceList && currentMap) {\n          currentMap.setResources(resourceList.data)\n        }\n      }\n    }\n\n    if (!(currentMap instanceof ReplayMap)) {\n      throw new Error('Error while parsing replay.')\n    }\n\n    lastFrameOffset = r.tell()\n    currentChunk = new ReplayChunk(state, 0)\n    currentMap.addChunk(currentChunk)\n\n    // read playback segment\n    directoryEndOffset = directories[1].offset + directories[1].length\n    r.seek(directories[1].offset)\n    while (true) {\n      const offset = r.tell()\n      if (offset >= directoryEndOffset) {\n        // set last and final chunks data\n        const timeLength = lastFrame.time - currentChunk.startTime\n        currentChunk.timeLength = timeLength\n        const lastFrameLength = offset - lastFrameOffset\n        r.seek(lastFrameOffset)\n        currentChunk.setData(r.arrx(lastFrameLength, ReaderDataType.UByte))\n        r.seek(offset)\n\n        break\n      }\n\n      const frame = readFrame(r, deltaDecoders, customMessages)\n      state.feedFrame(frame)\n      lastFrame = frame\n\n      if (frame.error) {\n        throw new Error('Encountered error while reading replay')\n      }\n\n      if (frame.type < 2) {\n        const serverInfo = frame.data.find((msg: any) => msg.type === FrameData.SVC.SERVERINFO)\n        if (serverInfo) {\n          // create new map\n          currentMap = new ReplayMap(serverInfo.data.mapFileName)\n          maps.push(currentMap)\n\n          // set last chunks data\n          const timeLength = lastFrame.time - currentChunk.startTime\n          currentChunk.timeLength = timeLength\n          const lastFrameLength = offset - lastFrameOffset\n          const tempOffset = r.tell()\n          r.seek(lastFrameOffset)\n          currentChunk.setData(r.arrx(lastFrameLength, ReaderDataType.UByte))\n          r.seek(tempOffset)\n\n          // create new chunk\n          lastFrameOffset = offset\n          currentChunk = new ReplayChunk(state, frame.time)\n          currentMap.addChunk(currentChunk)\n        }\n\n        const resourceList = frame.data.find((msg: any) => msg.type === FrameData.SVC.RESOURCELIST)\n        if (resourceList) {\n          currentMap.setResources(resourceList.data)\n        }\n\n        if (serverInfo) {\n          continue\n        }\n\n        for (let i = 0; i < frame.data.length; ++i) {\n          const message = frame.data[i]\n          if (message.type === FrameData.SVC.SOUND || message.type === FrameData.SVC.SPAWNSTATICSOUND) {\n            const sound = currentMap.resources.sounds.find((s: any) => s.index === message.data.soundIndex)\n            if (sound) {\n              sound.used = true\n            }\n          } else if (message.type === FrameData.SVC.STUFFTEXT) {\n            const sounds = currentMap.resources.sounds\n            const commands = message.data.commands\n\n            for (let i = 0; i < commands.length; ++i) {\n              const command = commands[i]\n\n              const func = command.func\n              if ((func === 'speak' || func === 'spk') && command.params.length === 1) {\n                const soundName = `${command.params[0]}.wav`\n                const sound = sounds.find((s: any) => s.name === soundName)\n                if (sound) {\n                  sound.used = true\n                }\n              }\n            }\n          }\n        }\n      } else if (frame.type === 8) {\n        const sound = currentMap.resources.sounds.find((s: any) => s.name === frame.sound.sample)\n        if (sound) {\n          sound.used = true\n        }\n      }\n\n      if (currentChunk.startTime + 10 < frame.time) {\n        // set last chunks data\n        const lastFrameLength = offset - lastFrameOffset\n        const tempOffset = r.tell()\n        r.seek(lastFrameOffset)\n        currentChunk.setData(r.arrx(lastFrameLength, ReaderDataType.UByte))\n        r.seek(tempOffset)\n\n        // create new chunk\n        lastFrameOffset = offset\n        currentChunk = new ReplayChunk(state, frame.time)\n        currentMap.addChunk(currentChunk)\n      }\n    }\n\n    return {\n      length: directories[1].time,\n      maps,\n      deltaDecoders,\n      customMessages\n    }\n  }\n\n  static readHeader(r: Reader) {\n    return readHeader(r)\n  }\n\n  static readDirectories(r: Reader, offset: number) {\n    return readDirectories(r, offset)\n  }\n\n  static readFrame(r: Reader, deltaDecoders: any, customMessages: any) {\n    return readFrame(r, deltaDecoders, customMessages)\n  }\n\n  static readFrameData(r: Reader, deltaDecoders: any, customMessages: any) {\n    return readFrame(r, deltaDecoders, customMessages)\n  }\n}\n","import { Reader, ReaderDataType } from '../Reader'\nimport { paletteWithLastTransToRGBA, paletteToRGBA } from './Util'\n\ninterface SpriteHeader {\n  version: number\n  type: SpriteType\n  alphaType: SpriteAlphaType\n  radius: number\n  width: number\n  height: number\n  frameCount: number\n  beamLength: number\n  syncType: SpriteSyncType\n}\n\ninterface SpriteFrame {\n  group: number\n  position: number[]\n  width: number\n  height: number\n  data: Uint8Array\n}\n\nexport enum SpriteType {\n  VP_PARALLEL_UPRIGHT = 0,\n  FACING_UPRIGHT = 1,\n  VP_PARALLEL = 2,\n  ORIENTED = 3,\n  VP_PARALLEL_ORIENTED = 4\n}\n\nexport enum SpriteAlphaType {\n  SPR_NORMAL = 0,\n  SPR_ADDITIVE = 1,\n  SPR_INDEXALPHA = 2,\n  SPR_ALPHTEST = 3\n}\n\nexport enum SpriteSyncType {\n  SYNCHRONIZED = 0,\n  RANDOM = 1\n}\n\nexport class Sprite {\n  header: SpriteHeader\n  frames: SpriteFrame[]\n\n  constructor(header: SpriteHeader, frames: SpriteFrame[]) {\n    this.header = header\n    this.frames = frames\n  }\n\n  static parse(buffer: ArrayBuffer) {\n    const r = new Reader(buffer)\n\n    const magic = r.nstr(4)\n    if (magic !== 'IDSP') {\n      throw new Error('Invalid sprite file format')\n    }\n\n    const header: SpriteHeader = {\n      version: r.i(), // must be 2 (1 = Quake, 2 = Half-Life)\n      type: r.i(),\n      alphaType: r.i(),\n      radius: r.f(),\n      width: r.i(),\n      height: r.i(),\n      frameCount: r.i(),\n      beamLength: r.f(),\n      syncType: r.i()\n    }\n\n    const paletteSize = r.s()\n    const palette = r.arrx(paletteSize * 3, ReaderDataType.UByte)\n\n    const frames: SpriteFrame[] = []\n    for (let i = 0; i < header.frameCount; ++i) {\n      const frame = {\n        group: r.i(),\n        position: [r.i(), r.i()],\n        width: r.i(),\n        height: r.i(),\n        data: new Uint8Array(header.width * header.height * 4)\n      }\n\n      const pixels = r.arrx(header.width * header.height, ReaderDataType.UByte)\n\n      if (header.alphaType === SpriteAlphaType.SPR_ALPHTEST) {\n        frame.data = paletteWithLastTransToRGBA(pixels, palette)\n      } else {\n        frame.data = paletteToRGBA(pixels, palette)\n      }\n\n      frames.push(frame)\n    }\n\n    return new Sprite(header, frames)\n  }\n}\n","export type ProgressCallback = (request: XMLHttpRequest, progress: number) => void\r\n\r\nexport interface XhrParams {\r\n  method: string\r\n  isBinary: boolean\r\n  progressCallback: ProgressCallback\r\n}\r\n\r\nexport function xhr(url: string, params: XhrParams) {\r\n  const method = params.method || 'GET'\r\n  const isBinary = params.isBinary\r\n  const progressCallback = params.progressCallback\r\n\r\n  if (!url) {\r\n    throw new Error('Url parameter missing')\r\n  }\r\n\r\n  return new Promise<any>((resolve, reject) => {\r\n    const request = new XMLHttpRequest()\r\n\r\n    if (isBinary) {\r\n      request.responseType = 'arraybuffer'\r\n    }\r\n\r\n    if (isBinary && progressCallback) {\r\n      request.addEventListener('progress', (event) => {\r\n        if (event.lengthComputable) {\r\n          progressCallback(request, event.loaded / event.total)\r\n        } else {\r\n          // HACK!\r\n          const totalStr = request.getResponseHeader('content-length')\r\n          let total = 0\r\n          if (totalStr) {\r\n            total = Number.parseFloat(totalStr)\r\n          }\r\n          const encoding = request.getResponseHeader('content-encoding')\r\n          if (total && encoding && encoding.indexOf('gzip') > -1) {\r\n            // assuming average gzip compression ratio to be 25%\r\n            total *= 4\r\n            const loadedPercent = Math.min(0.99, event.loaded / total)\r\n            progressCallback(request, loadedPercent)\r\n            // END OF HACK\r\n          } else {\r\n            progressCallback(request, 0)\r\n          }\r\n        }\r\n      })\r\n    }\r\n\r\n    request.addEventListener('readystatechange', () => {\r\n      if (request.readyState !== 4) {\r\n        return\r\n      }\r\n\r\n      if (request.status === 200) {\r\n        if (progressCallback) {\r\n          progressCallback(request, 1)\r\n        }\r\n\r\n        resolve(request.response)\r\n      } else {\r\n        reject({\r\n          status: request.status\r\n        })\r\n      }\r\n    })\r\n\r\n    request.open(method, url, true)\r\n    request.send()\r\n  })\r\n}\r\n","/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\n\nexport var perspective = perspectiveNO;\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\n\nexport var ortho = orthoNO;\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec3} out\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec3.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\n * 2 Dimensional Vector\n * @module vec2\n */\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {ReadonlyVec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\n\nexport function fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the source vector\n * @returns {vec2} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\n\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to ceil\n * @returns {vec2} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to floor\n * @returns {vec2} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to round\n * @returns {vec2} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\n * Calculates the length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to negate\n * @returns {vec2} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to invert\n * @returns {vec2} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to normalize\n * @returns {vec2} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec2} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2d} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat3} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\n * Rotate a 2D vector\n * @param {vec2} out The receiving vec2\n * @param {ReadonlyVec2} a The vec2 point to rotate\n * @param {ReadonlyVec2} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec2} out\n */\n\nexport function rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(rad),\n      cosC = Math.cos(rad); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\n * Get the angle between two 2D vectors\n * @param {ReadonlyVec2} a The first operand\n * @param {ReadonlyVec2} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1],\n      // mag is the product of the magnitudes of a and b\n  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),\n      // mag &&.. short circuits if mag == 0\n  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec2 to zero\n *\n * @param {vec2} out the receiving vector\n * @returns {vec2} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec2} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\n * Alias for {@link vec2.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();","export function vdf(input: string): { [name: string]: any }[] {\r\n  let state = 0\r\n  let key = ''\r\n  let val = ''\r\n  const objects: any[] = []\r\n\r\n  for (let i = 0; i < input.length; ++i) {\r\n    const c = input[i]\r\n\r\n    switch (state) {\r\n      case 0: {\r\n        // ROOT\r\n        if (/\\s/.test(c)) {\r\n          continue\r\n        }\r\n\r\n        if (c === '{') {\r\n          objects.push({})\r\n          state = 1\r\n        } else {\r\n          return []\r\n        }\r\n        break\r\n      }\r\n\r\n      case 1: {\r\n        // OBJECT\r\n        if (/\\s/.test(c)) {\r\n          continue\r\n        }\r\n\r\n        if (c === '}') {\r\n          state = 0\r\n        } else if (c === '\"') {\r\n          key = ''\r\n          state = 2\r\n        } else {\r\n          return []\r\n        }\r\n        break\r\n      }\r\n\r\n      case 2: {\r\n        // KEY\r\n        if (c === '\"') {\r\n          state = 3\r\n        } else {\r\n          key += c\r\n        }\r\n        break\r\n      }\r\n\r\n      case 3: {\r\n        // BETWEEN KEY AND VALUE\r\n        if (/\\s/.test(c)) {\r\n          continue\r\n        }\r\n\r\n        if (c === '\"') {\r\n          val = ''\r\n          state = 4\r\n        }\r\n        break\r\n      }\r\n\r\n      case 4: {\r\n        // VALUE\r\n        if (c === '\"') {\r\n          objects[objects.length - 1][key] = val\r\n          state = 1\r\n        } else {\r\n          val += c\r\n        }\r\n        break\r\n      }\r\n    }\r\n  }\r\n\r\n  return objects\r\n}\r\n","import type { vec3 } from 'gl-matrix'\nimport type { Tga } from './Parsers/Tga'\nimport type { Sprite } from './Parsers/Sprite'\nimport type { BspLightmap } from './BspLightmap'\n\nexport interface BspTexture {\n  name: string\n  width: number\n  height: number\n  data: Uint8Array\n  isExternal: boolean\n}\n\nexport interface BspModel {\n  origin: vec3\n  faces: {\n    buffer: Float32Array\n    textureIndex: number\n  }[]\n}\n\nexport class Bsp {\n  name: string\n  entities: any[]\n  textures: BspTexture[]\n  models: BspModel[]\n  lightmap: BspLightmap\n  skies: Tga[] = []\n  sprites: { [name: string]: Sprite } = {}\n\n  constructor(name: string, entities: any[], textures: BspTexture[], models: BspModel[], lightmap: BspLightmap) {\n    this.name = name\n    this.entities = entities\n    this.textures = textures\n    this.models = models\n    this.lightmap = lightmap\n  }\n}\n","export interface BspLightmapNode {\n  children: BspLightmapNode[]\n  isFilled: boolean\n  x: number\n  y: number\n  width: number\n  height: number\n}\n\nexport class BspLightmapParser {\n  static TEXTURE_SIZE = 1024\n\n  static init(lightmap: Uint8Array) {\n    return new BspLightmapParser(lightmap)\n  }\n\n  private lightmap: Uint8Array // entire lightmap of the bsp map\n  private texture: Uint8Array\n  private block = new Uint16Array(BspLightmapParser.TEXTURE_SIZE)\n\n  private constructor(lightmap: Uint8Array) {\n    this.lightmap = lightmap\n\n    this.texture = new Uint8Array(BspLightmapParser.TEXTURE_SIZE * BspLightmapParser.TEXTURE_SIZE * 4)\n    this.texture[this.texture.length - 4] = 255\n    this.texture[this.texture.length - 3] = 255\n    this.texture[this.texture.length - 2] = 255\n    this.texture[this.texture.length - 1] = 255\n  }\n\n  getTexture() {\n    return this.texture\n  }\n\n  processFace(\n    faceData: Float32Array,\n    texinfo: {\n      // TODO: MapTexInfo interface\n      s: number[]\n      sShift: number\n      t: number[]\n      tShift: number\n      textureIndex: number\n      flags: number\n    },\n    offset: number\n  ) {\n    const size = this.getDimensions(faceData)\n    const rect = this.readLightmap(offset, size.width, size.height)\n    if (rect) {\n      // Determine the correct TexCoords for the lightmap (I think this bit is bugged too)\n      for (let i = 0; i < faceData.length / 7; ++i) {\n        let lu =\n          faceData[i * 7] * texinfo.s[0] +\n          faceData[i * 7 + 1] * texinfo.s[1] +\n          faceData[i * 7 + 2] * texinfo.s[2] +\n          texinfo.sShift -\n          size.minU\n        lu += rect.x * 16 + 8\n        lu /= BspLightmapParser.TEXTURE_SIZE * 16\n\n        let lv =\n          faceData[i * 7] * texinfo.t[0] +\n          faceData[i * 7 + 1] * texinfo.t[1] +\n          faceData[i * 7 + 2] * texinfo.t[2] +\n          texinfo.tShift -\n          size.minV\n        lv += rect.y * 16 + 8\n        lv /= BspLightmapParser.TEXTURE_SIZE * 16\n\n        faceData[i * 7 + 5] = lu\n        faceData[i * 7 + 6] = lv\n      }\n    }\n  }\n\n  private getDimensions(faceData: Float32Array) {\n    // find the min and max UV's for a face\n    let minU = Math.floor(faceData[3])\n    let minV = Math.floor(faceData[4])\n    let maxU = Math.floor(faceData[3])\n    let maxV = Math.floor(faceData[4])\n\n    for (let i = 1; i < faceData.length / 7; ++i) {\n      if (Math.floor(faceData[i * 7 + 3]) < minU) {\n        minU = Math.floor(faceData[i * 7 + 3])\n      }\n      if (Math.floor(faceData[i * 7 + 4]) < minV) {\n        minV = Math.floor(faceData[i * 7 + 4])\n      }\n      if (Math.floor(faceData[i * 7 + 3]) > maxU) {\n        maxU = Math.floor(faceData[i * 7 + 3])\n      }\n      if (Math.floor(faceData[i * 7 + 4]) > maxV) {\n        maxV = Math.floor(faceData[i * 7 + 4])\n      }\n    }\n\n    // calculate the lightmap dimensions\n    return {\n      width: Math.ceil(maxU / 16) - Math.floor(minU / 16) + 1,\n      height: Math.ceil(maxV / 16) - Math.floor(minV / 16) + 1,\n      minU: Math.floor(minU),\n      minV: Math.floor(minV)\n    }\n  }\n\n  private readLightmap(offset: number, width: number, height: number): { x: number; y: number } | null {\n    if (height <= 0 || width <= 0) {\n      return null\n    }\n\n    const block = this.findFreeSpace(width, height)\n\n    if (block) {\n      const o = [block.x, block.y]\n      const s = [width, height]\n      const d = [BspLightmapParser.TEXTURE_SIZE, BspLightmapParser.TEXTURE_SIZE]\n      const count = width * height\n      for (let i = 0; i < count; ++i) {\n        const p = o[1] * d[0] + o[0] + d[0] * Math.floor(i / s[0]) + (i % s[0])\n        this.texture[p * 4] = Math.min(255, this.lightmap[offset + i * 3] * 2)\n        this.texture[p * 4 + 1] = Math.min(255, this.lightmap[offset + i * 3 + 1] * 2)\n        this.texture[p * 4 + 2] = Math.min(255, this.lightmap[offset + i * 3 + 2] * 2)\n        this.texture[p * 4 + 3] = 255\n      }\n    }\n\n    return block\n  }\n\n  private findFreeSpace(w: number, h: number): { x: number; y: number } | null {\n    let x = 0\n    let y = 0\n\n    let bestHeight = BspLightmapParser.TEXTURE_SIZE\n    for (let i = 0; i < this.block.length - w; ++i) {\n      let tentativeHeight = 0\n\n      let j = 0\n      for (; j < w; ++j) {\n        if (this.block[i + j] >= bestHeight) {\n          break\n        }\n        if (this.block[i + j] > tentativeHeight) {\n          tentativeHeight = this.block[i + j]\n        }\n      }\n\n      if (j === w) {\n        x = i\n        y = bestHeight = tentativeHeight\n      }\n    }\n\n    if (bestHeight + h > BspLightmapParser.TEXTURE_SIZE) {\n      return null\n    }\n\n    for (let i = 0; i < w; ++i) {\n      this.block[x + i] = bestHeight + h\n    }\n\n    return { x, y }\n  }\n}\n","import { vec3 } from 'gl-matrix'\nimport { basename } from '../Util'\nimport { vdf } from '../Parsers/Vdf'\nimport { Bsp, type BspTexture } from '../Bsp'\nimport { Reader, ReaderDataType } from '../Reader'\nimport { BspLightmapParser } from '../Parsers/BspLightmapParser'\nimport { paletteWithLastTransToRGBA, paletteToRGBA } from './Util'\n\nexport function parseModels(\n  models: BspLumpModel[],\n  faces: BspLumpFace[],\n  edges: BspLumpEdge[],\n  surfEdges: BspLumpSurfedge[],\n  vertices: BspLumpVertex[],\n  texinfo: BspLumpTexInfo[],\n  textures: BspTexture[],\n  lightmap: BspLightmapParser\n) {\n  const parsedModels = []\n\n  for (let i = 0; i < models.length; ++i) {\n    const model = models[i]\n\n    const _faces: {\n      buffer: Float32Array\n      textureIndex: number\n    }[] = []\n\n    const v0 = new Float32Array(3)\n    const v1 = new Float32Array(3)\n    const v2 = new Float32Array(3)\n    const uv0 = new Float32Array(2)\n    const uv1 = new Float32Array(2)\n    const uv2 = new Float32Array(2)\n    const luv0 = new Float32Array(2)\n    const luv1 = new Float32Array(2)\n    const luv2 = new Float32Array(2)\n\n    const _origin = i === 0 ? [0, 0, 0] : [0, 0, 0].map((_, i) => (model.maxs[i] - model.mins[i]) / 2 + model.mins[i])\n    const origin = vec3.fromValues(_origin[0], _origin[1], _origin[2])\n\n    for (let i = model.firstFace; i < model.firstFace + model.faceCount; ++i) {\n      const faceData = {\n        // 3 floats vertices | 2 floats uvs | 2 floats luvs\n        buffer: new Float32Array((faces[i].edgeCount - 2) * 21),\n        textureIndex: -1\n      }\n\n      const faceTexInfo = texinfo[faces[i].textureInfo]\n      const faceTexture = textures[faceTexInfo.textureIndex]\n      const faceSurfEdges = surfEdges.slice(faces[i].firstEdge, faces[i].firstEdge + faces[i].edgeCount)\n\n      const v0idx = edges[Math.abs(faceSurfEdges[0])][faceSurfEdges[0] > 0 ? 0 : 1]\n      v0[0] = vertices[v0idx][0]\n      v0[1] = vertices[v0idx][1]\n      v0[2] = vertices[v0idx][2]\n\n      uv0[0] = v0[0] * faceTexInfo.s[0] + v0[1] * faceTexInfo.s[1] + v0[2] * faceTexInfo.s[2] + faceTexInfo.sShift\n      uv0[1] = v0[0] * faceTexInfo.t[0] + v0[1] * faceTexInfo.t[1] + v0[2] * faceTexInfo.t[2] + faceTexInfo.tShift\n\n      luv0[0] = 0\n      luv0[1] = 0\n\n      const v1idx = edges[Math.abs(faceSurfEdges[1])][faceSurfEdges[1] > 0 ? 0 : 1]\n      v1[0] = vertices[v1idx][0]\n      v1[1] = vertices[v1idx][1]\n      v1[2] = vertices[v1idx][2]\n\n      uv1[0] = v1[0] * faceTexInfo.s[0] + v1[1] * faceTexInfo.s[1] + v1[2] * faceTexInfo.s[2] + faceTexInfo.sShift\n      uv1[1] = v1[0] * faceTexInfo.t[0] + v1[1] * faceTexInfo.t[1] + v1[2] * faceTexInfo.t[2] + faceTexInfo.tShift\n      luv1[0] = 0\n      luv1[1] = 0.999\n\n      let compIndex = 0\n      for (let j = 2; j < faces[i].edgeCount; ++j) {\n        const v2idx = edges[Math.abs(faceSurfEdges[j])][faceSurfEdges[j] > 0 ? 0 : 1]\n        v2[0] = vertices[v2idx][0]\n        v2[1] = vertices[v2idx][1]\n        v2[2] = vertices[v2idx][2]\n        uv2[0] = v2[0] * faceTexInfo.s[0] + v2[1] * faceTexInfo.s[1] + v2[2] * faceTexInfo.s[2] + faceTexInfo.sShift\n        uv2[1] = v2[0] * faceTexInfo.t[0] + v2[1] * faceTexInfo.t[1] + v2[2] * faceTexInfo.t[2] + faceTexInfo.tShift\n        luv2[0] = 0.999\n        luv2[1] = 0.999\n\n        // vert1: coord, uv and luv\n        faceData.buffer[compIndex++] = v0[0]\n        faceData.buffer[compIndex++] = v0[1]\n        faceData.buffer[compIndex++] = v0[2]\n        faceData.buffer[compIndex++] = uv0[0]\n        faceData.buffer[compIndex++] = uv0[1]\n        faceData.buffer[compIndex++] = luv0[0]\n        faceData.buffer[compIndex++] = luv0[1]\n\n        // vert2\n        faceData.buffer[compIndex++] = v1[0]\n        faceData.buffer[compIndex++] = v1[1]\n        faceData.buffer[compIndex++] = v1[2]\n        faceData.buffer[compIndex++] = uv1[0]\n        faceData.buffer[compIndex++] = uv1[1]\n        faceData.buffer[compIndex++] = luv1[0]\n        faceData.buffer[compIndex++] = luv1[1]\n\n        // vert2\n        faceData.buffer[compIndex++] = v2[0]\n        faceData.buffer[compIndex++] = v2[1]\n        faceData.buffer[compIndex++] = v2[2]\n        faceData.buffer[compIndex++] = uv2[0]\n        faceData.buffer[compIndex++] = uv2[1]\n        faceData.buffer[compIndex++] = luv2[0]\n        faceData.buffer[compIndex++] = luv2[1]\n\n        v1[0] = v2[0]\n        v1[1] = v2[1]\n        v1[2] = v2[2]\n        uv1[0] = uv2[0]\n        uv1[1] = uv2[1]\n        luv1[0] = luv2[0]\n        luv1[1] = luv2[1]\n      }\n\n      // face has a lightmap if flag is equal to 0\n      if (faceTexInfo.flags === 0 || faceTexInfo.flags === -65536) {\n        lightmap.processFace(faceData.buffer, faceTexInfo, faces[i].lightmapOffset)\n      }\n\n      faceData.textureIndex = faceTexInfo.textureIndex\n\n      for (let j = 0; j < faceData.buffer.length / 7; ++j) {\n        faceData.buffer[j * 7] -= origin[0]\n        faceData.buffer[j * 7 + 1] -= origin[1]\n        faceData.buffer[j * 7 + 2] -= origin[2]\n        faceData.buffer[j * 7 + 3] /= faceTexture.width\n        faceData.buffer[j * 7 + 4] /= faceTexture.height\n      }\n\n      _faces.push(faceData)\n    }\n\n    parsedModels.push({\n      origin,\n      faces: _faces\n    })\n  }\n\n  return parsedModels\n}\n\nexport enum BspLumpIndex {\n  Entities = 0,\n  Planes = 1,\n  Textures = 2,\n  Vertices = 3,\n  Visibility = 4,\n  Nodes = 5,\n  TexInfo = 6,\n  Faces = 7,\n  Lighting = 8,\n  ClipNodes = 9,\n  Leaves = 10,\n  MarkSurfaces = 11,\n  Edges = 12,\n  SurfEdges = 13,\n  Models = 14\n}\n\nexport interface BspLump {\n  offset: number\n  length: number\n}\n\nexport interface BspLumpFace {\n  plane: number\n  planeSide: number\n  firstEdge: number\n  edgeCount: number\n  textureInfo: number\n  styles: number[]\n  lightmapOffset: number\n}\n\nexport interface BspLumpModel {\n  mins: number[]\n  maxs: number[]\n  origin: vec3\n  headNodes: number[]\n  visLeaves: number\n  firstFace: number\n  faceCount: number\n}\n\nexport type BspLumpEdge = number[]\n\nexport type BspLumpSurfedge = number\n\nexport type BspLumpVertex = number[]\n\nexport interface BspLumpTexInfo {\n  s: number[]\n  sShift: number\n  t: number[]\n  tShift: number\n  textureIndex: number\n  flags: number\n}\n\nexport type BspLumpLightmap = Uint8Array\n\nexport const BspParser = {\n  parse(name: string, buffer: ArrayBuffer) {\n    const r = new Reader(buffer)\n    const version = r.ui()\n    if (version !== 30) {\n      throw new Error('Invalid map version')\n    }\n\n    const lumps: BspLump[] = []\n    for (let i = 0; i < 15; ++i) {\n      lumps.push({\n        offset: r.ui(),\n        length: r.ui()\n      })\n    }\n\n    const entities = this.loadEntities(r, lumps[BspLumpIndex.Entities].offset, lumps[BspLumpIndex.Entities].length)\n\n    const textures = this.loadTextures(r, lumps[BspLumpIndex.Textures].offset)\n\n    const models = this.loadModels(r, lumps[BspLumpIndex.Models].offset, lumps[BspLumpIndex.Models].length)\n\n    const faces = this.loadFaces(r, lumps[BspLumpIndex.Faces].offset, lumps[BspLumpIndex.Faces].length)\n\n    const edges = this.loadEdges(r, lumps[BspLumpIndex.Edges].offset, lumps[BspLumpIndex.Edges].length)\n\n    const surfEdges = this.loadSurfEdges(r, lumps[BspLumpIndex.SurfEdges].offset, lumps[BspLumpIndex.SurfEdges].length)\n\n    const vertices = this.loadVertices(r, lumps[BspLumpIndex.Vertices].offset, lumps[BspLumpIndex.Vertices].length)\n\n    const texinfo = this.loadTexInfo(r, lumps[BspLumpIndex.TexInfo].offset, lumps[BspLumpIndex.TexInfo].length)\n\n    const lightmap = this.loadLightmap(r, lumps[BspLumpIndex.Lighting].offset, lumps[BspLumpIndex.Lighting].length)\n\n    const parsedLightmap = BspLightmapParser.init(lightmap)\n\n    const parsedModels = parseModels(models, faces, edges, surfEdges, vertices, texinfo, textures, parsedLightmap)\n\n    return new Bsp(name, entities, textures, parsedModels, {\n      width: BspLightmapParser.TEXTURE_SIZE,\n      height: BspLightmapParser.TEXTURE_SIZE,\n      data: parsedLightmap.getTexture()\n    })\n  },\n  loadFaces(r: Reader, offset: number, length: number): BspLumpFace[] {\n    r.seek(offset)\n\n    const faces = []\n    for (let i = 0; i < length / 20; ++i) {\n      faces.push({\n        plane: r.us(),\n        planeSide: r.us(),\n        firstEdge: r.ui(),\n        edgeCount: r.us(),\n        textureInfo: r.us(),\n        styles: [r.ub(), r.ub(), r.ub(), r.ub()],\n        lightmapOffset: r.ui()\n      })\n    }\n    return faces\n  },\n  loadModels(r: Reader, offset: number, length: number): BspLumpModel[] {\n    r.seek(offset)\n\n    const models = []\n    for (let i = 0; i < length / 64; ++i) {\n      models.push({\n        mins: [r.f(), r.f(), r.f()],\n        maxs: [r.f(), r.f(), r.f()],\n        origin: vec3.fromValues(r.f(), r.f(), r.f()),\n        headNodes: [r.i(), r.i(), r.i(), r.i()],\n        visLeaves: r.i(),\n        firstFace: r.i(),\n        faceCount: r.i()\n      })\n    }\n    return models\n  },\n  loadEdges(r: Reader, offset: number, length: number): BspLumpEdge[] {\n    r.seek(offset)\n\n    const edges = []\n    for (let i = 0; i < length / 4; ++i) {\n      edges.push([r.us(), r.us()])\n    }\n    return edges\n  },\n  loadSurfEdges(r: Reader, offset: number, length: number): BspLumpSurfedge[] {\n    r.seek(offset)\n\n    const surfEdges = []\n    for (let i = 0; i < length / 4; ++i) {\n      surfEdges.push(r.i())\n    }\n    return surfEdges\n  },\n  loadVertices(r: Reader, offset: number, length: number): BspLumpVertex[] {\n    r.seek(offset)\n\n    const vertices = []\n    for (let i = 0; i < length / 12; ++i) {\n      vertices.push([r.f(), r.f(), r.f()])\n    }\n    return vertices\n  },\n  loadTexInfo(r: Reader, offset: number, length: number): BspLumpTexInfo[] {\n    r.seek(offset)\n\n    const texinfo: BspLumpTexInfo[] = []\n    for (let i = 0; i < length / 40; ++i) {\n      texinfo.push({\n        s: [r.f(), r.f(), r.f()],\n        sShift: r.f(),\n        t: [r.f(), r.f(), r.f()],\n        tShift: r.f(),\n        textureIndex: r.i(),\n        flags: r.i()\n      })\n    }\n    return texinfo\n  },\n  loadLightmap(r: Reader, offset: number, length: number): BspLumpLightmap {\n    r.seek(offset)\n    return r.arrx(length, ReaderDataType.UByte)\n  },\n  loadTextureData(r: Reader) {\n    const name = r.nstr(16)\n    const width = r.ui()\n    const height = r.ui()\n\n    const isExternal = !r.ui() // if mipmap offset == 0\n    if (isExternal) {\n      const data = new Uint8Array(4)\n      data[0] = data[1] = data[2] = data[3] = 255\n\n      return { name, width, height, data, isExternal }\n    }\n\n    r.skip(3 * 4) // skip mipmap offsets\n\n    // read largest mipmap data\n    const pixelCount = width * height\n    const pixels = r.arrx(pixelCount, ReaderDataType.UByte)\n\n    // skip other 3 mipmaps\n    r.skip(21 * (pixelCount / 64))\n\n    r.skip(2) // skip padding bytes\n\n    const palette = r.arrx(768, ReaderDataType.UByte)\n\n    const data = name[0] === '{' ? paletteWithLastTransToRGBA(pixels, palette) : paletteToRGBA(pixels, palette)\n\n    return { name, width, height, data, isExternal }\n  },\n  loadTextures(r: Reader, offset: number) {\n    r.seek(offset)\n\n    const count = r.ui()\n    const offsets = []\n    for (let i = 0; i < count; ++i) {\n      offsets.push(r.ui())\n    }\n\n    const textures: BspTexture[] = []\n    for (let i = 0; i < count; ++i) {\n      if (offsets[i] === 0xffffffff) {\n        textures.push({\n          name: 'ERROR404',\n          width: 1,\n          height: 1,\n          data: new Uint8Array([0, 255, 0, 255]),\n          isExternal: false\n        })\n      } else {\n        r.seek(offset + offsets[i])\n        textures.push(this.loadTextureData(r))\n      }\n    }\n\n    return textures\n  },\n  loadEntities(r: Reader, offset: number, length: number) {\n    r.seek(offset)\n    const entities = vdf(r.nstr(length))\n\n    const VECTOR_ATTRS = ['origin', 'angles', '_diffuse_light', '_light', 'rendercolor', 'avelocity']\n    const NUMBER_ATTRS = ['renderamt', 'rendermode', 'scale']\n\n    const worldSpawn = entities[0]\n    if (worldSpawn.classname === 'worldspawn') {\n      worldSpawn.model = '*0'\n      worldSpawn.wad = worldSpawn.wad || ''\n      worldSpawn.wad = worldSpawn.wad\n        .split(';')\n        .filter((w: string) => w.length)\n        .map((w: string) => w.replace(/\\\\/g, '/'))\n        .map((w: string) => basename(w))\n    }\n\n    for (const e of entities) {\n      if (e.model) {\n        if (typeof e.renderamt === 'undefined') {\n          e.renderamt = 0\n        }\n\n        if (typeof e.rendermode === 'undefined') {\n          e.rendermode = 0\n        }\n\n        if (typeof e.renderfx === 'undefined') {\n          e.renderfx = 0\n        }\n\n        if (typeof e.rendercolor === 'undefined') {\n          e.rendercolor = '0 0 0'\n        }\n      }\n\n      for (const attr of VECTOR_ATTRS) {\n        if (e[attr]) {\n          e[attr] = e[attr].split(' ').map((v: string) => Number.parseFloat(v))\n        }\n      }\n\n      for (const attr of NUMBER_ATTRS) {\n        if (e[attr]) {\n          e[attr] = Number.parseFloat(e[attr])\n        }\n      }\n    }\n\n    return entities\n  }\n}\n","import { createNanoEvents, type Emitter as EventEmitter } from 'nanoevents'\nimport type { Bsp } from './Bsp'\nimport { Sound } from './Sound'\nimport { extname } from './Util'\nimport type { Config } from './Config'\nimport { Tga } from './Parsers/Tga'\nimport { Wad } from './Parsers/Wad'\nimport { Replay } from './Replay/Replay'\nimport { Sprite } from './Parsers/Sprite'\nimport { xhr, type ProgressCallback } from './Xhr'\nimport { BspParser } from './Parsers/BspParser'\n\nenum LoadItemStatus {\n  Loading = 1,\n  Skipped = 2,\n  Error = 3,\n  Done = 4\n}\n\nclass LoadItemBase<T> {\n  name: string\n  progress: number\n  status: LoadItemStatus\n  data: T | null\n\n  constructor(name: string) {\n    this.name = name\n    this.progress = 0\n    this.status = LoadItemStatus.Loading\n    this.data = null\n  }\n\n  isLoading() {\n    return this.status === LoadItemStatus.Loading\n  }\n\n  skip() {\n    this.status = LoadItemStatus.Skipped\n  }\n\n  isSkipped() {\n    return this.status === LoadItemStatus.Skipped\n  }\n\n  // TODO: Add error reason\n  error() {\n    this.status = LoadItemStatus.Error\n  }\n\n  isError() {\n    return this.status === LoadItemStatus.Error\n  }\n\n  done(data: T) {\n    this.status = LoadItemStatus.Done\n    this.data = data\n  }\n\n  isDone() {\n    return this.status === LoadItemStatus.Done\n  }\n}\n\nclass LoadItemReplay extends LoadItemBase<any> {\n  type = 'replay' as const\n}\n\nclass LoadItemBsp extends LoadItemBase<Bsp> {\n  type = 'bsp' as const\n}\n\nclass LoadItemSky extends LoadItemBase<Tga> {\n  type = 'sky' as const\n}\n\nclass LoadItemWad extends LoadItemBase<Wad> {\n  type = 'wad' as const\n}\n\nclass LoadItemSound extends LoadItemBase<Sound> {\n  type = 'sound' as const\n}\n\nclass LoadItemSprite extends LoadItemBase<Sprite> {\n  type = 'sprite' as const\n}\n\nexport type LoadItem = LoadItemReplay | LoadItemBsp | LoadItemSky | LoadItemWad | LoadItemSound | LoadItemSprite\n\nexport class Loader {\n  config: Config\n\n  replay?: LoadItemReplay\n  map?: LoadItemBsp\n  skies: LoadItemSky[]\n  wads: LoadItemWad[]\n  sounds: LoadItemSound[]\n  sprites: { [name: string]: LoadItemSprite } = {}\n  events: EventEmitter\n\n  constructor(config: Config) {\n    this.config = config\n\n    this.replay = undefined\n    this.map = undefined\n    this.skies = []\n    this.wads = []\n    this.sounds = []\n\n    this.events = createNanoEvents()\n    this.events.on('error', (err: any) => {\n      console.error(err)\n    })\n  }\n\n  clear() {\n    this.replay = undefined\n    this.map = undefined\n    this.skies.length = 0\n    this.wads.length = 0\n    this.sounds.length = 0\n    this.sprites = {}\n  }\n\n  checkStatus() {\n    if (this.replay && !this.replay.isDone()) {\n      return\n    }\n\n    if (this.map && !this.map.isDone()) {\n      return\n    }\n\n    for (let i = 0; i < this.skies.length; ++i) {\n      if (this.skies[i].isLoading()) {\n        return\n      }\n    }\n\n    for (let i = 0; i < this.wads.length; ++i) {\n      if (this.wads[i].isLoading()) {\n        return\n      }\n    }\n\n    for (let i = 0; i < this.sounds.length; ++i) {\n      if (this.sounds[i].isLoading()) {\n        return\n      }\n    }\n\n    const sprites = Object.entries(this.sprites)\n    for (let i = 0; i < sprites.length; ++i) {\n      if (sprites[i][1].isLoading()) {\n        return\n      }\n    }\n\n    this.events.emit('loadall', this)\n  }\n\n  load(name: string) {\n    const extension = extname(name)\n    if (extension === '.dem') {\n      this.loadReplay(name)\n    } else if (extension === '.bsp') {\n      this.loadMap(name)\n    } else {\n      this.events.emit('error', 'Invalid file extension', name)\n    }\n  }\n\n  async loadReplay(name: string) {\n    this.replay = new LoadItemReplay(name)\n    this.events.emit('loadstart', this.replay)\n\n    const progressCallback: ProgressCallback = (_1, progress) => {\n      if (this.replay) {\n        this.replay.progress = progress\n      }\n\n      this.events.emit('progress', this.replay)\n    }\n\n    const replayPath = this.config.getReplaysPath()\n    const buffer = await xhr(`${replayPath}/${name}`, {\n      method: 'GET',\n      isBinary: true,\n      progressCallback\n    }).catch((err: any) => {\n      if (this.replay) {\n        this.replay.error()\n      }\n      this.events.emit('error', err, this.replay)\n    })\n\n    if (this.replay.isError()) {\n      return\n    }\n\n    const replay = Replay.parseIntoChunks(buffer)\n    this.replay.done(replay)\n\n    this.loadMap(`${replay.maps[0].name}.bsp`)\n\n    const sounds = replay.maps[0].resources.sounds\n    for (const sound of sounds) {\n      if (sound.used) {\n        this.loadSound(sound.name, sound.index)\n      }\n    }\n\n    this.events.emit('load', this.replay)\n    this.checkStatus()\n  }\n\n  async loadMap(name: string) {\n    this.map = new LoadItemBsp(name)\n    this.events.emit('loadstart', this.map)\n\n    const progressCallback: ProgressCallback = (_1, progress) => {\n      if (this.map) {\n        this.map.progress = progress\n      }\n\n      this.events.emit('progress', this.map)\n    }\n\n    const mapsPath = this.config.getMapsPath()\n    const buffer = await xhr(`${mapsPath}/${name}`, {\n      method: 'GET',\n      isBinary: true,\n      progressCallback\n    }).catch((err) => {\n      if (this.map) {\n        this.map.error()\n      }\n\n      this.events.emit('error', err, this.map)\n    })\n\n    if (this.map.isError()) {\n      return\n    }\n\n    const map = BspParser.parse(name, buffer)\n    this.map.done(map)\n\n    map.entities\n      .map((e: any) => {\n        if (typeof e.model === 'string' && e.model.indexOf('.spr') > -1) {\n          return e.model as string\n        }\n        return undefined\n      })\n      .filter((a: string | undefined, pos: number, arr: (string | undefined)[]) => a && arr.indexOf(a) === pos)\n      .map((a) => a && this.loadSprite(a))\n\n    const skyname = map.entities[0].skyname\n    if (skyname) {\n      const sides = ['bk', 'dn', 'ft', 'lf', 'rt', 'up']\n      sides.map((a) => `${skyname}${a}`).map((a) => this.loadSky(a))\n    }\n\n    // check if there is at least one missing texture\n    // if yes then load wad files (textures should be there)\n    if (map.textures.find((a) => a.isExternal)) {\n      const wads = map.entities[0].wad\n      const wadPromises = wads.map((w: string) => this.loadWad(w))\n      await Promise.all(wadPromises)\n    }\n\n    this.events.emit('load', this.map)\n    this.checkStatus()\n  }\n\n  async loadSprite(name: string) {\n    const item = new LoadItemSprite(name)\n    this.sprites[name] = item\n    this.events.emit('loadstart', item)\n\n    const progressCallback: ProgressCallback = (_1, progress) => {\n      item.progress = progress\n      this.events.emit('progress', item)\n    }\n\n    const buffer = await xhr(`${this.config.getBasePath()}/${name}`, {\n      method: 'GET',\n      isBinary: true,\n      progressCallback\n    }).catch((err: any) => {\n      item.error()\n      this.events.emit('error', err, item)\n      this.checkStatus()\n    })\n\n    if (item.isError()) {\n      return\n    }\n\n    const sprite = Sprite.parse(buffer)\n    item.done(sprite)\n    this.events.emit('load', item)\n    this.checkStatus()\n  }\n\n  async loadSky(name: string) {\n    const item = new LoadItemSky(name)\n    this.skies.push(item)\n    this.events.emit('loadstart', item)\n\n    const progressCallback: ProgressCallback = (_1, progress) => {\n      item.progress = progress\n      this.events.emit('progress', item)\n    }\n\n    const skiesPath = this.config.getSkiesPath()\n    const buffer = await xhr(`${skiesPath}/${name}.tga`, {\n      method: 'GET',\n      isBinary: true,\n      progressCallback\n    }).catch((err: any) => {\n      item.error()\n      this.events.emit('error', err, item)\n      this.checkStatus()\n    })\n\n    if (item.isError()) {\n      return\n    }\n\n    const skyImage = Tga.parse(buffer, name)\n    item.done(skyImage)\n    this.events.emit('load', item)\n    this.checkStatus()\n  }\n\n  async loadWad(name: string) {\n    const wadItem = new LoadItemWad(name)\n    this.wads.push(wadItem)\n    this.events.emit('loadstart', wadItem)\n\n    const progressCallback: ProgressCallback = (_1, progress) => {\n      wadItem.progress = progress\n      this.events.emit('progress', wadItem)\n    }\n\n    const wadsPath = this.config.getWadsPath()\n    const buffer = await xhr(`${wadsPath}/${name}`, {\n      method: 'GET',\n      isBinary: true,\n      progressCallback\n    }).catch((err: any) => {\n      wadItem.error()\n      this.events.emit('error', err, wadItem)\n      this.checkStatus()\n    })\n\n    if (wadItem.isError()) {\n      return\n    }\n\n    const wad = Wad.parse(buffer)\n    wadItem.done(wad)\n\n    if (!this.map || !this.map.data) {\n      return\n    }\n\n    const map = this.map.data\n    const cmp = (a: any, b: any) => a.toLowerCase() === b.toLowerCase()\n    for (const entry of wad.entries) {\n      if (entry.type !== 'texture') {\n        return\n      }\n\n      for (const texture of map.textures) {\n        if (cmp(entry.name, texture.name)) {\n          texture.width = entry.width\n          texture.height = entry.height\n          texture.data = entry.data\n        }\n      }\n    }\n\n    this.events.emit('load', wadItem)\n    this.checkStatus()\n  }\n\n  async loadSound(name: string, index: number) {\n    const sound = new LoadItemSound(name)\n    this.sounds.push(sound)\n    this.events.emit('loadstart', sound)\n\n    const progressCallback: ProgressCallback = (_1, progress) => {\n      sound.progress = progress\n      this.events.emit('progress', sound)\n    }\n\n    const soundsPath = this.config.getSoundsPath()\n    const buffer = await xhr(`${soundsPath}/${name}`, {\n      method: 'GET',\n      isBinary: true,\n      progressCallback\n    }).catch((err: any) => {\n      sound.error()\n      this.events.emit('error', err, sound)\n      this.checkStatus()\n    })\n\n    if (sound.isError()) {\n      return\n    }\n\n    const data = await Sound.create(buffer).catch((err: any) => {\n      sound.error()\n      this.events.emit('error', err, sound)\n      this.checkStatus()\n    })\n\n    if (!data || sound.isError()) {\n      return\n    }\n\n    data.index = index\n    data.name = name\n    sound.done(data)\n    this.events.emit('load', sound)\n    this.checkStatus()\n  }\n}\n","import { vec2 } from 'gl-matrix'\n\nexport class Mouse {\n  click = false\n  leftClick = false\n  rightClick = false\n  position = vec2.create()\n  delta = vec2.create()\n}\n","import { vec2 } from 'gl-matrix'\n\nexport class Touch {\n  pressed = false\n  position = vec2.create()\n  delta = vec2.create()\n}\n","import { glMatrix, vec3, mat4 } from 'gl-matrix'\n\nexport class Camera {\n  static init(aspect: number) {\n    return new Camera(aspect)\n  }\n\n  projectionMatrix: mat4 = mat4.create()\n  aspect: number\n  fov: number = glMatrix.toRadian(60)\n  near = 1.0\n  far = 8192.0\n\n  viewMatrix: mat4 = mat4.create()\n  position = vec3.create()\n  rotation = vec3.create()\n\n  private constructor(aspect: number) {\n    this.aspect = aspect\n    this.updateProjectionMatrix()\n  }\n\n  updateProjectionMatrix() {\n    mat4.perspective(\n      this.projectionMatrix,\n      this.fov,\n      this.aspect,\n      this.near,\n      this.far\n    )\n  }\n\n  updateViewMatrix() {\n    mat4.identity(this.viewMatrix)\n    mat4.rotateX(\n      this.viewMatrix,\n      this.viewMatrix,\n      this.rotation[0] - Math.PI / 2\n    )\n    mat4.rotateZ(\n      this.viewMatrix,\n      this.viewMatrix,\n      Math.PI / 2 - this.rotation[1]\n    )\n    mat4.translate(this.viewMatrix, this.viewMatrix, [\n      -this.position[0],\n      -this.position[1],\n      -this.position[2]\n    ])\n  }\n}\n","export class Keyboard {\n  keys: Uint8Array\n\n  constructor() {\n    this.keys = new Uint8Array(256)\n    for (let i = 0; i < 256; ++i) {\n      this.keys[0] = 0\n    }\n  }\n}\n\nexport namespace Keyboard {\n  export enum KEYS {\n    A = 65,\n    B = 66,\n    C = 67,\n    D = 68,\n    E = 69,\n    F = 70,\n    G = 71,\n    H = 72,\n    I = 73,\n    J = 74,\n    K = 75,\n    L = 76,\n    M = 77,\n    N = 78,\n    O = 79,\n    P = 80,\n    Q = 81,\n    R = 82,\n    S = 83,\n    T = 84,\n    U = 85,\n    V = 86,\n    W = 87,\n    X = 88,\n    Y = 89,\n    Z = 90,\n    CTRL = 17,\n    ALT = 18,\n    SPACE = 32\n  }\n}\n","export interface Program {\n  handle: WebGLProgram\n  attributes: { [name: string]: number }\n  uniforms: { [name: string]: WebGLUniformLocation }\n}\n\nexport enum ShaderType {\n  VERTEX = 0,\n  FRAGMENT = 1\n}\n\nexport class Context {\n  public static init(canvas: HTMLCanvasElement) {\n    const gl = canvas.getContext('webgl', {\n      alpha: false\n    })\n    if (!gl) {\n      console.error('Failed to get WebGL context')\n      return null\n    }\n    return new Context(gl)\n  }\n\n  public static checkWebGLSupport() {\n    const MESSAGES = {\n      BAD_BROWSER: 'Your browser does not seem to support WebGL',\n      BAD_GPU: 'Your graphics card does not seem to support WebGL'\n    }\n\n    if (!window.WebGLRenderingContext) {\n      return {\n        hasSupport: false,\n        message: MESSAGES.BAD_BROWSER\n      }\n    }\n\n    const c = document.createElement('canvas')\n    try {\n      const ctx = c.getContext('webgl') || c.getContext('experimental-webgl')\n      if (ctx) {\n        return {\n          hasSupport: true,\n          message: ''\n        }\n      }\n      return {\n        hasSupport: false,\n        message: MESSAGES.BAD_GPU\n      }\n    } catch (e) {\n      return {\n        hasSupport: false,\n        message: MESSAGES.BAD_GPU\n      }\n    }\n  }\n\n  readonly gl: WebGLRenderingContext\n\n  private constructor(gl: WebGLRenderingContext) {\n    this.gl = gl\n  }\n\n  createProgram(params: {\n    vertexShaderSrc: string\n    fragmentShaderSrc: string\n    attributeNames: string[]\n    uniformNames: string[]\n  }): Program | null {\n    const gl = this.gl\n    const program = gl.createProgram()\n    if (!program) {\n      console.error('Failed to create WebGL program')\n      return null\n    }\n\n    const vertexShader = this.createShader({\n      source: params.vertexShaderSrc,\n      type: ShaderType.VERTEX\n    })\n    if (!vertexShader) {\n      console.error('Failed to compile vertex shader')\n      return null\n    }\n    const fragmentShader = this.createShader({\n      source: params.fragmentShaderSrc,\n      type: ShaderType.FRAGMENT\n    })\n    if (!fragmentShader) {\n      console.error('Failed to compile fragment shader')\n      return null\n    }\n\n    gl.attachShader(program, vertexShader)\n    gl.attachShader(program, fragmentShader)\n    gl.linkProgram(program)\n    gl.validateProgram(program)\n\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      gl.deleteProgram(program)\n      gl.deleteShader(vertexShader)\n      gl.deleteShader(fragmentShader)\n\n      const reason = gl.getProgramInfoLog(program)\n      console.error(`Could not initialize shader: ${reason}`)\n      return null\n    }\n\n    if (!gl.getProgramParameter(program, gl.VALIDATE_STATUS)) {\n      gl.deleteProgram(program)\n      gl.deleteShader(vertexShader)\n      gl.deleteShader(fragmentShader)\n\n      const reason = gl.getProgramInfoLog(program)\n      console.error(`Could not initialize shader: ${reason}`)\n      return null\n    }\n\n    gl.useProgram(program)\n\n    const attributes: { [name: string]: number } = {}\n    for (let i = 0; i < params.attributeNames.length; ++i) {\n      const name = params.attributeNames[i]\n      const attr = gl.getAttribLocation(program, name)\n      if (attr === -1) {\n        console.error(`gl.getAttribLocation failed for attrib named \"${name}\"`)\n        gl.deleteProgram(program)\n        return null\n      }\n      attributes[name] = attr\n    }\n\n    const uniforms: { [name: string]: WebGLUniformLocation } = {}\n    for (let i = 0; i < params.uniformNames.length; ++i) {\n      const name = params.uniformNames[i]\n      const uniform = gl.getUniformLocation(program, name)\n      if (uniform === null) {\n        console.error(`gl.getUniformLocation failed for uniform named \"${name}\"`)\n        gl.deleteProgram(program)\n        return null\n      }\n      uniforms[name] = uniform\n    }\n\n    return {\n      handle: program,\n      attributes,\n      uniforms\n    }\n  }\n\n  createShader(params: { source: string; type: ShaderType }) {\n    const gl = this.gl\n    const shader =\n      params.type === ShaderType.VERTEX ? gl.createShader(gl.VERTEX_SHADER) : gl.createShader(gl.FRAGMENT_SHADER)\n    if (!shader) {\n      console.error('Failed to create shader program')\n      return null\n    }\n    gl.shaderSource(shader, params.source)\n    gl.compileShader(shader)\n\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n      console.error(gl.getShaderInfoLog(shader))\n      gl.deleteShader(shader)\n      return null\n    }\n\n    return shader\n  }\n\n  getAnisotropyExtension(): EXT_texture_filter_anisotropic | null {\n    return (\n      this.gl.getExtension('EXT_texture_filter_anisotropic') ||\n      this.gl.getExtension('MOZ_EXT_texture_filter_anisotropic') ||\n      this.gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic')\n    )\n  }\n\n  getMaxAnisotropy(extension: EXT_texture_filter_anisotropic) {\n    return this.gl.getParameter(extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT)\n  }\n}\n","import { glMatrix } from 'gl-matrix'\r\nimport { createNanoEvents, type Emitter as EventEmitter } from 'nanoevents'\r\nimport type { Game } from './Game'\r\nimport { Replay } from './Replay/Replay'\r\nimport { ReplayState } from './Replay/ReplayState'\r\n\r\nconst updateGame = (game: Game, state: ReplayState) => {\r\n  game.camera.position[0] = state.cameraPos[0]\r\n  game.camera.position[1] = state.cameraPos[1]\r\n  game.camera.position[2] = state.cameraPos[2]\r\n  game.camera.rotation[0] = glMatrix.toRadian(state.cameraRot[0])\r\n  game.camera.rotation[1] = glMatrix.toRadian(state.cameraRot[1])\r\n  game.camera.rotation[2] = glMatrix.toRadian(state.cameraRot[2])\r\n}\r\n\r\nexport class ReplayPlayer {\r\n  game: Game\r\n  state: ReplayState\r\n  replay: any\r\n  events: EventEmitter\r\n\r\n  currentMap = 0\r\n  currentChunk = 0\r\n  currentTime = 0\r\n  currentTick = 0\r\n  isPlaying = false\r\n  isPaused = false\r\n  speed = 1\r\n\r\n  constructor(game: Game) {\r\n    this.reset()\r\n    this.game = game\r\n    this.state = new ReplayState()\r\n    this.replay = null\r\n    this.events = createNanoEvents()\r\n  }\r\n\r\n  reset() {\r\n    this.currentMap = 0\r\n    this.currentChunk = 0\r\n    this.currentTime = 0\r\n    this.currentTick = 0\r\n\r\n    this.isPlaying = false\r\n    this.isPaused = false\r\n    this.speed = 1\r\n\r\n    if (this.replay) {\r\n      const firstChunk = this.replay.maps[0].chunks[0]\r\n      firstChunk.reader.seek(0)\r\n      this.state = firstChunk.state.clone()\r\n    }\r\n  }\r\n\r\n  changeReplay(replay: Replay) {\r\n    this.replay = replay\r\n    this.reset()\r\n  }\r\n\r\n  play() {\r\n    if (!this.isPlaying) {\r\n      this.isPlaying = true\r\n    } else if (this.isPaused) {\r\n      this.isPaused = false\r\n    }\r\n\r\n    this.events.emit('play', this.currentTime)\r\n  }\r\n\r\n  pause() {\r\n    if (this.isPlaying) {\r\n      this.isPaused = true\r\n    }\r\n\r\n    this.events.emit('pause', this.currentTime)\r\n  }\r\n\r\n  stop() {\r\n    this.reset()\r\n    this.events.emit('stop', 0)\r\n  }\r\n\r\n  speedUp() {\r\n    this.speed = Math.min(this.speed * 2, 4)\r\n  }\r\n\r\n  speedDown() {\r\n    this.speed = Math.max(this.speed / 2, 0.25)\r\n  }\r\n\r\n  seek(value: number) {\r\n    const t = Math.max(0, Math.min(this.replay.length, value))\r\n\r\n    const maps = this.replay.maps\r\n    for (let i = 0; i < maps.length; ++i) {\r\n      const chunks = maps[i].chunks\r\n      for (let j = 0; j < chunks.length; ++j) {\r\n        const chunk = chunks[j]\r\n        const startTime = chunk.startTime\r\n        const timeLimit = startTime + chunk.timeLength\r\n        if (t >= startTime && t < timeLimit) {\r\n          this.currentMap = i\r\n          this.currentChunk = j\r\n          this.currentTime = t\r\n\r\n          this.state = chunk.state.clone()\r\n          const deltaDecoders = this.replay.deltaDecoders\r\n          const customMessages = this.replay.customMessages\r\n          const r = chunk.reader\r\n          r.seek(0)\r\n          while (true) {\r\n            const offset = r.tell()\r\n            const frame = Replay.readFrame(r, deltaDecoders, customMessages)\r\n            if (frame.time <= t) {\r\n              this.state.feedFrame(frame)\r\n              this.currentTick = frame.tick\r\n            } else {\r\n              r.seek(offset)\r\n              break\r\n            }\r\n          }\r\n\r\n          this.events.emit('seek', t)\r\n          updateGame(this.game, this.state)\r\n\r\n          return\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  seekByPercent(value: number) {\r\n    this.seek((Math.max(0, Math.min(value, 100)) / 100) * this.replay.length)\r\n  }\r\n\r\n  update(dt: number) {\r\n    if (!this.isPlaying || this.isPaused) {\r\n      return;\r\n    }\r\n\r\n    const deltaDecoders = this.replay.deltaDecoders\r\n    const customMessages = this.replay.customMessages\r\n\r\n    let map = this.replay.maps[this.currentMap]\r\n    let chunk = map.chunks[this.currentChunk]\r\n    let r = chunk.reader\r\n\r\n    const endTime = this.currentTime + dt * this.speed\r\n\r\n    let hitStop = false\r\n\r\n    while (true) {\r\n      let offset = r.tell()\r\n      if (offset >= chunk.data.length) {\r\n        if (this.currentChunk === map.chunks.length - 1) {\r\n          if (this.currentMap === this.replay.maps.length - 1) {\r\n            hitStop = true\r\n            break\r\n          }\r\n          this.currentChunk = 0\r\n          this.currentMap++\r\n          map = this.replay.maps[this.currentMap]\r\n          chunk = map.chunks[this.currentChunk]\r\n        } else {\r\n          this.currentChunk++\r\n          chunk = map.chunks[this.currentChunk]\r\n        }\r\n\r\n        r = chunk.reader\r\n        r.seek(0)\r\n        offset = 0\r\n\r\n        continue\r\n      }\r\n\r\n      const frame = Replay.readFrame(r, deltaDecoders, customMessages)\r\n      if (frame.time <= endTime) {\r\n        this.state.feedFrame(frame)\r\n        this.currentTick = frame.tick\r\n        if (frame.type === 0 || frame.type === 1) {\r\n          const pos = frame.camera.position\r\n          const time = frame.time\r\n          if (this.state.prevCameraPos) {\r\n            const dt = time - this.state.prevTime\r\n            if (dt > 0) {\r\n              this.state.velocity = [\r\n                (pos[0] - this.state.prevCameraPos[0]) / dt,\r\n                (pos[1] - this.state.prevCameraPos[1]) / dt,\r\n                (pos[2] - this.state.prevCameraPos[2]) / dt\r\n              ]\r\n              this.state.speed = Math.sqrt(\r\n                this.state.velocity[0] * this.state.velocity[0] +\r\n                this.state.velocity[1] * this.state.velocity[1] \r\n              )\r\n            }\r\n          }\r\n          this.state.prevCameraPos = [pos[0], pos[1], pos[2]]\r\n          this.state.prevTime = time\r\n        }\r\n      } else {\r\n        r.seek(offset)\r\n        break\r\n      }\r\n    }\r\n\r\n    updateGame(this.game, this.state)\r\n    this.currentTime = endTime\r\n\r\n    if (hitStop) {\r\n      this.stop()\r\n    }\r\n  }\r\n}\r\n","import type { Context } from './Context'\n\nexport class Renderer {\n  static init(context: Context): Renderer | null {\n    const gl = context.gl\n\n    gl.clearColor(0.0, 0.0, 0.0, 1.0)\n    gl.clearDepth(1.0)\n    gl.enable(gl.DEPTH_TEST)\n    gl.depthFunc(gl.LEQUAL)\n\n    gl.enable(gl.BLEND)\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA)\n\n    gl.enable(gl.CULL_FACE)\n    gl.cullFace(gl.FRONT)\n\n    return new Renderer({ context })\n  }\n\n  private context: Context\n\n  private constructor(params: { context: Context }) {\n    this.context = params.context\n  }\n\n  draw = () => {\n    const gl = this.context.gl\n\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT)\n  }\n}\n","import type { mat4 } from 'gl-matrix'\nimport type { Context, Program } from '../Context'\n\nconst fragmentSrc = `#ifdef GL_ES\nprecision highp float;\n#endif\n\nuniform sampler2D diffuse;\n\nvarying vec2 vTexCoord;\n\nvoid main(void) {\n  vec4 diffuseColor = texture2D(diffuse, vTexCoord);\n  gl_FragColor = vec4(diffuseColor.rgb, 1.0);\n}`\n\nconst vertexSrc = `#ifdef GL_ES\nprecision highp float;\n#endif\n\nattribute vec3 position;\nattribute vec2 texCoord;\n\nvarying vec2 vTexCoord;\n\nuniform mat4 viewMatrix;\nuniform mat4 projectionMatrix;\n\nvoid main(void) {\n  vTexCoord = texCoord;\n  gl_Position = projectionMatrix * viewMatrix * vec4(position, 1);\n}`\n\nexport class SkyShader {\n  static init(context: Context): SkyShader | null {\n    const attributeNames = ['position', 'texCoord']\n    const uniformNames: string[] = ['viewMatrix', 'projectionMatrix', 'diffuse']\n    const program = context.createProgram({\n      vertexShaderSrc: vertexSrc,\n      fragmentShaderSrc: fragmentSrc,\n      attributeNames,\n      uniformNames\n    })\n    if (!program) {\n      console.error('Failed to create sky shader program')\n      return null\n    }\n\n    return new SkyShader(program)\n  }\n\n  private program: WebGLProgram\n  private aPosition: number\n  private aTexCoord: number\n  private uViewMx: WebGLUniformLocation\n  private uProjectionMx: WebGLUniformLocation\n  private uDiffuse: WebGLUniformLocation\n\n  private constructor(program: Program) {\n    this.program = program.handle\n    this.aPosition = program.attributes.position\n    this.aTexCoord = program.attributes.texCoord\n    this.uViewMx = program.uniforms.viewMatrix\n    this.uProjectionMx = program.uniforms.projectionMatrix\n    this.uDiffuse = program.uniforms.diffuse\n  }\n\n  useProgram(gl: WebGLRenderingContext) {\n    gl.useProgram(this.program)\n  }\n\n  setViewMatrix(gl: WebGLRenderingContext, matrix: mat4) {\n    gl.uniformMatrix4fv(this.uViewMx, false, matrix)\n  }\n\n  setProjectionMatrix(gl: WebGLRenderingContext, matrix: mat4) {\n    gl.uniformMatrix4fv(this.uProjectionMx, false, matrix)\n  }\n\n  setDiffuse(gl: WebGLRenderingContext, value: number) {\n    gl.uniform1i(this.uDiffuse, value)\n  }\n\n  enableVertexAttribs(gl: WebGLRenderingContext) {\n    gl.enableVertexAttribArray(this.aPosition)\n    gl.enableVertexAttribArray(this.aTexCoord)\n  }\n\n  setVertexAttribPointers(gl: WebGLRenderingContext) {\n    gl.vertexAttribPointer(this.aPosition, 3, gl.FLOAT, false, 5 * 4, 0)\n    gl.vertexAttribPointer(this.aTexCoord, 2, gl.FLOAT, false, 5 * 4, 3 * 4)\n  }\n}\n","import type { Bsp } from '../Bsp'\nimport type { Camera } from './Camera'\nimport type { Context } from './Context'\nimport { SkyShader } from './SkyShader/SkyShader'\n\nexport class SkyScene {\n  static init(context: Context): SkyScene | null {\n    const shader = SkyShader.init(context)\n    if (!shader) {\n      console.error(\"skyscenen't\")\n      return null\n    }\n\n    return new SkyScene({ context, shader })\n  }\n\n  private context: Context\n  private shader: SkyShader\n  private vertexBuffer: WebGLBuffer | null = null\n  private indexBuffer: WebGLBuffer | null = null\n  private texture: WebGLTexture | null = null\n  private isReady = false\n\n  private constructor(params: { context: Context; shader: SkyShader }) {\n    this.context = params.context\n    this.shader = params.shader\n  }\n\n  changeMap(bsp: Bsp) {\n    if (bsp.skies.length !== 6) {\n      this.isReady = false\n      return\n    }\n\n    const gl = this.context.gl\n    const vertexBuffer = gl.createBuffer()\n    const indexBuffer = gl.createBuffer()\n    const texture = gl.createTexture()\n    if (!vertexBuffer || !indexBuffer || !texture) {\n      // TODO\n      throw new Error('shouldnt happen')\n    }\n\n    // prettier-ignore\n    const indices = new Uint8Array([\n      0,  1,  2,      0,  2,  3,    // front\n      4,  5,  6,      4,  6,  7,    // back\n      8,  9,  10,     8,  10, 11,   // top\n      12, 13, 14,     12, 14, 15,   // bottom\n      16, 17, 18,     16, 18, 19,   // right\n      20, 21, 22,     20, 22, 23,   // left\n    ])\n    // prettier-ignore\n    const vertices = new Float32Array([\n      // Top face\n      -1.0, -1.0,  1.0, 0.499, 0.001,\n       1.0, -1.0,  1.0, 0.499, 0.249,\n       1.0,  1.0,  1.0, 0.001, 0.249,\n      -1.0,  1.0,  1.0, 0.001, 0.001,\n\n      // Bottom face\n      -1.0, -1.0, -1.0, 0.499, 0.749,\n      -1.0,  1.0, -1.0, 0.001, 0.749,\n       1.0,  1.0, -1.0, 0.001, 0.501,\n       1.0, -1.0, -1.0, 0.499, 0.501,\n\n      // Front face\n      -1.0,  1.0, -1.0, 0.501, 0.749,\n      -1.0,  1.0,  1.0, 0.501, 0.501,\n       1.0,  1.0,  1.0, 0.999, 0.501,\n       1.0,  1.0, -1.0, 0.999, 0.749,\n\n      // Back face\n      -1.0, -1.0, -1.0, 0.999, 0.249,\n       1.0, -1.0, -1.0, 0.501, 0.249,\n       1.0, -1.0,  1.0, 0.501, 0.001,\n      -1.0, -1.0,  1.0, 0.999, 0.001,\n\n      // Right face\n       1.0, -1.0, -1.0, 0.499, 0.499,\n       1.0,  1.0, -1.0, 0.001, 0.499,\n       1.0,  1.0,  1.0, 0.001, 0.251,\n       1.0, -1.0,  1.0, 0.499, 0.251,\n\n      // Left face\n      -1.0, -1.0, -1.0, 0.501, 0.499,\n      -1.0, -1.0,  1.0, 0.501, 0.251,\n      -1.0,  1.0,  1.0, 0.999, 0.251,\n      -1.0,  1.0, -1.0, 0.999, 0.499\n    ].map((a, i) => ((i % 5) < 3) ? a * 4096 : a))\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer)\n    gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW)\n    gl.enableVertexAttribArray(0)\n\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer)\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indices, gl.STATIC_DRAW)\n\n    const canvas = document.createElement('canvas')\n    canvas.width = 512\n    canvas.height = 1024\n    const ctx = canvas.getContext('2d')\n    if (!ctx) {\n      throw new Error('sky ctx fail')\n    }\n\n    const coords: { [name: string]: number[] } = {\n      up: [0, 0],\n      rt: [0, 256],\n      dn: [0, 512],\n      ft: [256, 0],\n      lf: [256, 256],\n      bk: [256, 512]\n    }\n\n    for (const sky of bsp.skies) {\n      const smc = document.createElement('canvas')\n      const smctx = smc.getContext('2d')\n      if (!smctx) {\n        throw new Error('Runtime error.')\n      }\n      smc.width = sky.width\n      smc.height = sky.height\n      const imageData = smctx.getImageData(0, 0, smc.width, smc.height)\n      for (let i = 0; i < sky.data.length; ++i) {\n        imageData.data[i] = sky.data[i]\n      }\n      smctx.putImageData(imageData, 0, 0)\n\n      const side = sky.name.slice(-2)\n      const c = coords[side] ? coords[side] : []\n\n      // TODO: remove this check\n      if (!ctx) {\n        throw new Error('Runtime error.')\n      }\n      ctx.drawImage(smc, c[0], c[1])\n    }\n\n    const pixelData = ctx.getImageData(0, 0, 512, 1024).data\n    gl.bindTexture(gl.TEXTURE_2D, texture)\n    gl.texImage2D(\n      gl.TEXTURE_2D,\n      0,\n      gl.RGBA,\n      512,\n      1024,\n      0,\n      gl.RGBA,\n      gl.UNSIGNED_BYTE,\n      new Uint8Array(pixelData)\n    )\n    gl.generateMipmap(gl.TEXTURE_2D)\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT)\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT)\n    gl.texParameteri(\n      gl.TEXTURE_2D,\n      gl.TEXTURE_MIN_FILTER,\n      gl.LINEAR_MIPMAP_LINEAR\n    )\n    gl.texParameterf(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR)\n    const anisotropy = this.context.getAnisotropyExtension()\n    if (anisotropy) {\n      gl.texParameteri(\n        gl.TEXTURE_2D,\n        anisotropy.TEXTURE_MAX_ANISOTROPY_EXT,\n        this.context.getMaxAnisotropy(anisotropy)\n      )\n    }\n\n    this.vertexBuffer = vertexBuffer\n    this.indexBuffer = indexBuffer\n    this.texture = texture\n    this.isReady = true\n  }\n\n  draw(camera: Camera) {\n    if (!this.isReady) {\n      return\n    }\n\n    const gl = this.context.gl\n    const shader = this.shader\n\n    shader.useProgram(gl)\n    gl.bindTexture(gl.TEXTURE_2D, this.texture)\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer)\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer)\n    shader.enableVertexAttribs(gl)\n    shader.setVertexAttribPointers(gl)\n    shader.setDiffuse(gl, 0)\n\n    const x = camera.position[0]\n    const y = camera.position[1]\n    const z = camera.position[2]\n    camera.position[0] = 0\n    camera.position[1] = 0\n    camera.position[2] = 0\n    camera.updateViewMatrix()\n    camera.position[0] = x\n    camera.position[1] = y\n    camera.position[2] = z\n\n    shader.setViewMatrix(gl, camera.viewMatrix)\n    shader.setProjectionMatrix(gl, camera.projectionMatrix)\n\n    gl.drawElements(gl.TRIANGLES, 36, gl.UNSIGNED_BYTE, 0)\n    gl.clear(gl.DEPTH_BUFFER_BIT)\n  }\n}\n","import type { mat4 } from 'gl-matrix'\nimport type { Context, Program } from '../Context'\n\nconst fragmentSrc = `#ifdef GL_ES\nprecision highp float;\n#endif\n\nuniform sampler2D diffuse;\nuniform sampler2D lightmap;\nuniform float opacity;\n\nvarying vec2 vTexCoord;\nvarying vec2 vLightmapCoord;\n\nvoid main(void) {\n  vec4 diffuseColor = texture2D(diffuse, vTexCoord);\n  vec4 lightColor = texture2D(lightmap, vLightmapCoord);\n\n  gl_FragColor = vec4(diffuseColor.rgb * lightColor.rgb, diffuseColor.a * opacity);\n}`\n\nconst vertexSrc = `#ifdef GL_ES\nprecision highp float;\n#endif\n\nattribute vec3 position;\nattribute vec2 texCoord;\nattribute vec2 texCoord2;\n\nvarying vec2 vTexCoord;\nvarying vec2 vLightmapCoord;\n\nuniform mat4 modelMatrix;\nuniform mat4 viewMatrix;\nuniform mat4 projectionMatrix;\n\nvoid main(void) {\n  vTexCoord = texCoord;\n  vLightmapCoord = texCoord2;\n\n  gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position, 1);\n}`\n\nexport class MainShader {\n  static init(context: Context): MainShader | null {\n    const attributeNames = ['position', 'texCoord', 'texCoord2']\n    const uniformNames: string[] = [\n      'modelMatrix',\n      'viewMatrix',\n      'projectionMatrix',\n      'diffuse',\n      'lightmap',\n      'opacity'\n    ]\n    const program = context.createProgram({\n      vertexShaderSrc: vertexSrc,\n      fragmentShaderSrc: fragmentSrc,\n      attributeNames,\n      uniformNames\n    })\n    if (!program) {\n      console.error('Failed to create MainShader program')\n      return null\n    }\n\n    return new MainShader(program)\n  }\n\n  private program: WebGLProgram\n  private aPosition: number\n  private aTexCoord: number\n  private aTexCoord2: number\n  private uModelMx: WebGLUniformLocation\n  private uViewMx: WebGLUniformLocation\n  private uProjectionMx: WebGLUniformLocation\n  private uDiffuse: WebGLUniformLocation\n  private uLightmap: WebGLUniformLocation\n  private uOpacity: WebGLUniformLocation\n\n  private constructor(program: Program) {\n    this.program = program.handle\n    this.aPosition = program.attributes.position\n    this.aTexCoord = program.attributes.texCoord\n    this.aTexCoord2 = program.attributes.texCoord2\n    this.uModelMx = program.uniforms.modelMatrix\n    this.uViewMx = program.uniforms.viewMatrix\n    this.uProjectionMx = program.uniforms.projectionMatrix\n    this.uDiffuse = program.uniforms.diffuse\n    this.uLightmap = program.uniforms.lightmap\n    this.uOpacity = program.uniforms.opacity\n  }\n\n  useProgram(gl: WebGLRenderingContext) {\n    gl.useProgram(this.program)\n  }\n\n  setModelMatrix(gl: WebGLRenderingContext, matrix: mat4) {\n    gl.uniformMatrix4fv(this.uModelMx, false, matrix)\n  }\n\n  setViewMatrix(gl: WebGLRenderingContext, matrix: mat4) {\n    gl.uniformMatrix4fv(this.uViewMx, false, matrix)\n  }\n\n  setProjectionMatrix(gl: WebGLRenderingContext, matrix: mat4) {\n    gl.uniformMatrix4fv(this.uProjectionMx, false, matrix)\n  }\n\n  setDiffuse(gl: WebGLRenderingContext, value: number) {\n    gl.uniform1i(this.uDiffuse, value)\n  }\n\n  setLightmap(gl: WebGLRenderingContext, val: number) {\n    gl.uniform1i(this.uLightmap, val)\n  }\n\n  setOpacity(gl: WebGLRenderingContext, val: number) {\n    gl.uniform1f(this.uOpacity, val)\n  }\n\n  enableVertexAttribs(gl: WebGLRenderingContext) {\n    gl.enableVertexAttribArray(this.aPosition)\n    gl.enableVertexAttribArray(this.aTexCoord)\n    gl.enableVertexAttribArray(this.aTexCoord2)\n  }\n\n  setVertexAttribPointers(gl: WebGLRenderingContext) {\n    gl.vertexAttribPointer(this.aPosition, 3, gl.FLOAT, false, 7 * 4, 0)\n    gl.vertexAttribPointer(this.aTexCoord, 2, gl.FLOAT, false, 7 * 4, 3 * 4)\n    gl.vertexAttribPointer(this.aTexCoord2, 2, gl.FLOAT, false, 7 * 4, 5 * 4)\n  }\n}\n","export interface WorldSpawn {\n  classname: 'worldspawn'\n  wad: string[]\n  mapversion: number\n  skyname: string\n  maxRange: number\n  message: string\n  sounds: number\n  light: number\n  waveHeight: number\n  startDark: WorldSpawnStartDark\n  newUnit: WorldSpawnNewUnit\n  gameTitle: WorldSpawnGameTitle\n  defaultTeam: WorldSpawnDefaultTeam\n}\nexport enum WorldSpawnStartDark {\n  No = 0,\n  Yes = 1 // the level will start black with fade in\n}\nexport enum WorldSpawnGameTitle {\n  No = 0,\n  Yes = 1 // \"Half-Life\" will be displayed after the map loads\n}\nexport enum WorldSpawnNewUnit {\n  No = 0,\n  Yes = 1 // All previous global triggers will be removed\n}\nexport enum WorldSpawnDefaultTeam {\n  FewestPlayers = 0,\n  FirstTeam = 1\n}\n\nexport interface AiScriptedSequence {\n  classname: 'aiscripted_sequence'\n  m_iszEntity: string\n  m_iszPlay: string\n  m_flRadius: number\n  m_flRepeat: number\n  m_fMoveTo: AiScriptedSequenceMoveTo\n  m_iFinishSchedule: AiScriptedSequenceFinishSchedule\n  spawnflags: AiScriptedSequenceSpawnflags\n}\nexport enum AiScriptedSequenceMoveTo {\n  No = 0,\n  Walk = 1,\n  Run = 2,\n  Instantaneous = 4,\n  No_TurnToFace = 5\n}\nexport enum AiScriptedSequenceFinishSchedule {\n  DefaultAI = 0,\n  Ambush = 1\n}\nexport enum AiScriptedSequenceSpawnflags {\n  Repeatable = 4,\n  LeaveCorpse = 8\n}\n\nexport interface AmbientGeneric {\n  classname: 'ambient_generic'\n  origin: number[]\n  targetName: string\n  message: string\n  health: number\n  preset: AmbientGenericPreset\n  startVolume: number\n  fadeIn: number\n  fadeOut: number\n  pitch: number\n  pitchStart: number\n  spinUp: number\n  spinDown: number\n  lfoType: number\n  lfoRate: number\n  lfoModPitch: number\n  lfoModVolume: number\n  cSpinUp: number\n  spawnFlags: AmbientGenericSpawnFlags\n}\nexport enum AmbientGenericPreset {\n  None = 0,\n  HugeMachine = 1,\n  BigMachine = 2,\n  Machine = 3,\n  SlowFadeIn = 4,\n  FadeIn = 5,\n  QuickFadeIn = 6,\n  SlowPulse = 7,\n  Pulse = 8,\n  QuickPulse = 9,\n  SlowOscillator = 10,\n  Oscillator = 11,\n  QuickOscillator = 12,\n  GrungePitch = 13,\n  VeryLowPitch = 14,\n  LowPitch = 15,\n  HighPitch = 16,\n  VeryHighPitch = 17,\n  ScreamingPitch = 18,\n  OscillateSpinUpDown = 19,\n  PulseSpinUpDown = 20,\n  RandomPitch = 21,\n  RandomPitchFast = 22,\n  IncrementalSpinup = 23,\n  Alien = 24,\n  Bizzare = 25,\n  PlanetX = 26,\n  Haunted = 27\n}\nexport enum AmbientGenericSpawnFlags {\n  PlayEverywhere = 1,\n  SmallRadius = 2,\n  MediumRadius = 4,\n  LargeRadius = 8,\n  StartSilent = 16,\n  NotToggled = 32\n}\n\nexport interface Ammo357 {\n  classname: 'ammo_357'\n  origin: number[]\n  angles: number[]\n  target: string\n  targetName: string\n  delay: number\n  killTarget: string\n  spawnFlags: number\n}\n\nexport interface Ammo9mmAR {\n  classname: 'ammo_9mmAR'\n  origin: number[]\n  angles: number[]\n  target: string\n  targetName: string\n  delay: number\n  killTarget: string\n  spawnFlags: number\n}\n\nexport interface Ammo9mmBox {\n  classname: 'ammo_9mmbox'\n  origin: number[]\n  angles: number[]\n  target: string\n  targetName: string\n  delay: number\n  killTarget: string\n  spawnFlags: number\n}\n\nexport interface Ammo9mmClip {\n  classname: 'ammo_9mmclip'\n  origin: number[]\n  angles: number[]\n  target: string\n  targetName: string\n  delay: number\n  killTarget: string\n  spawnFlags: number\n}\n\nexport interface AmmoARGrenades {\n  classname: 'ammo_ARgrenades'\n  origin: number[]\n  angles: number[]\n  target: string\n  targetName: string\n  delay: number\n  killTarget: string\n  spawnFlags: number\n}\n\nexport interface AmmoBuckShot {\n  classname: 'ammo_buckshot'\n  origin: number[]\n  angles: number[]\n  target: string\n  targetName: string\n  delay: number\n  killTarget: string\n  spawnFlags: number\n}\n\nexport interface AmmoCrossBox {\n  classname: 'ammo_crossbow'\n  origin: number[]\n  angles: number[]\n  target: string\n  targetName: string\n  delay: number\n  killTarget: string\n  spawnFlags: number\n}\n\nexport interface AmmoGaussClip {\n  classname: 'ammo_gaussclip'\n  origin: number[]\n  angles: number[]\n  target: string\n  targetName: string\n  delay: number\n  killTarget: string\n  spawnFlags: number\n}\n\nexport interface AmmoRPGClip {\n  classname: 'ammo_rpgclip'\n  origin: number[]\n  angles: number[]\n  target: string\n  targetName: string\n  delay: number\n  killTarget: string\n  spawnFlags: number\n}\n\nexport interface ButtonTarget {\n  classname: 'button_target'\n  target: string\n  master: string\n  renderEffect: RenderEffect\n  renderMode: RenderMode\n  renderAmmount: number\n  renderColor: number[]\n  zhltLightFlags: ZHLTLightFlags\n  lightOrigin: string\n  spawnFlags: ButtonTargetSpawnFlags\n}\nexport enum ButtonTargetSpawnFlags {\n  UseActivates = 1,\n  StartOn = 2\n}\n\nexport interface Cycler {\n  classname: 'cycler'\n  origin: number[]\n  angles: number[]\n  targetName: string\n  model: string\n  sequence: string\n  renderEffect: RenderEffect\n  renderMode: RenderMode\n  renderAmmount: number\n  renderColor: number[]\n}\n\nexport interface CyclerSprite {\n  classname: 'cycler_sprite'\n  origin: number[]\n  angles: number[]\n  targetName: string\n  model: string\n  framerate: number\n  renderEffect: RenderEffect\n  renderMode: RenderMode\n  renderAmmount: number\n  renderColor: number[]\n}\n\nexport interface CyclerWeapon {\n  classname: 'cycler_weapon'\n  origin: number[]\n  angles: number[]\n  target: string\n  targetName: string\n  triggerTarget: string\n  triggerCondition: CyclerWeaponTriggerCondition\n  model: string\n  sequence: string\n  renderEffect: RenderEffect\n  renderMode: RenderMode\n  renderAmmount: number\n  renderColor: number[]\n}\n\nexport enum CyclerWeaponTriggerCondition {\n  NoTrigger = 0,\n  SeePlayerMadAtPlayer = 1,\n  TakeDamage = 2,\n  HalfHealthRemaining = 3,\n  Death = 4,\n  HearWorld = 7,\n  HearPlayer = 8,\n  HearCombat = 9,\n  SeePlayerUnconditional = 10,\n  SeePlayerNotInCombat = 11\n}\n\nexport interface CyclerWreckage {\n  classname: 'cycler_wreckage'\n  origin: number[]\n  angles: number[]\n  targetName: string\n  model: string\n  framerate: number\n  scale: number\n  renderEffect: RenderEffect\n  renderMode: RenderMode\n  renderAmmount: number\n  renderColor: number[]\n}\n\nexport interface EnvBeam {\n  classname: 'env_beam'\n  renderEffect: RenderEffect\n  renderMode: RenderMode\n  renderAmmount: number\n  renderColor: number[]\n  radius: number\n  life: number\n  boltWidth: number\n  noiseAmplitude: number\n  texture: string\n  textureScroll: number\n  frameRate: number\n  frameStart: number\n  strikeTime: number\n  damage: number\n  spawnFlags: EnvBeamSpawnFlags\n}\n\nexport enum EnvBeamSpawnFlags {\n  StartOn = 1,\n  Toggle = 2,\n  RandomStrike = 4,\n  Ring = 8,\n  StartSparks = 16,\n  EndSparks = 32,\n  DecalEnd = 64,\n  FadeStart = 128,\n  FadeEnd = 256\n}\n\nexport enum ZHLTLightFlags {\n  Normal = 0,\n  EmbeddedFix = 1,\n  OpaqueBlockLight = 2,\n  OpaqueEmbeddedFix = 3,\n  OpaqueConcaveFix = 6\n}\n\nexport enum RenderEffect {\n  Normal = 0,\n  SlowPulse = 1, //* Additive or Texture mode only.\n  FastPulse = 2, //* Additive or Texture mode only.\n  SlowWidePulse = 3, //* Additive or Texture mode only.\n  FastWidePulse = 4, //* Additive or Texture mode only.\n  SlowFadeAway = 5,\n  FastFadeAway = 6,\n  SlowBecomeSolid = 7,\n  FastBecomeSolid = 8,\n  SlowStrobe = 9,\n  FastStrobe = 10,\n  FasterStrobe = 11,\n  SlowFlicker = 12,\n  FastFlicker = 13,\n  //* Constant Glow only affects the Glow rendermode. With this setting, Glow mode behaves\n  //* exactly like Additive mode - except that (as is usual for Glow mode) the sprite isn't\n  //* obscured by intervening sprites or models.\n  ConstantGlow = 14,\n  DistortModels = 15,\n  HologramDistort = 16\n}\n\nexport enum RenderMode {\n  Normal = 0,\n  Color = 1,\n  Texture = 2,\n  Glow = 3,\n  Solid = 4,\n  Additive = 5\n}\n\nconst parseNumberArray = (a: string) => a.split(' ').map((b) => Number.parseFloat(b))\n\nconst parsers: {\n  worldspawn: (entityData: { [name: string]: any }) => WorldSpawn\n  aiscripted_sequence: (entityData: { [name: string]: any }) => AiScriptedSequence\n  ambient_generic: (entityData: { [name: string]: any }) => AmbientGeneric\n  ammo_357: (entityData: { [name: string]: any }) => Ammo357\n  ammo_9mmAR: (entityData: { [name: string]: any }) => Ammo9mmAR\n  ammo_9mmbox: (entityData: { [name: string]: any }) => Ammo9mmBox\n  ammo_9mmclip: (entityData: { [name: string]: any }) => Ammo9mmClip\n  ammo_ARgrenades: (entityData: { [name: string]: any }) => AmmoARGrenades\n  ammo_buckshot: (entityData: { [name: string]: any }) => AmmoBuckShot\n  ammo_crossbow: (entityData: { [name: string]: any }) => AmmoCrossBox\n  ammo_gaussclip: (entityData: { [name: string]: any }) => AmmoGaussClip\n  ammo_rpgclip: (entityData: { [name: string]: any }) => AmmoRPGClip\n  button_target: (entityData: { [name: string]: any }) => ButtonTarget\n  cycler: (entityData: { [name: string]: any }) => Cycler\n  cycler_sprite: (entityData: { [name: string]: any }) => CyclerSprite\n  cyclear_weapon: (entityData: { [name: string]: any }) => CyclerWeapon\n  cyclear_wreckage: (entityData: { [name: string]: any }) => CyclerWreckage\n  env_beam: (entityData: { [name: string]: any }) => EnvBeam\n} = {\n  worldspawn: (e) => ({\n    classname: 'worldspawn',\n    wad: e.wad\n      .split(';')\n      .filter((a: string) => a.length)\n      .map((w: string) => w.replace(/\\\\/g, '/')),\n    mapversion: Number.parseInt(e.mapversion),\n    skyname: e.skyname,\n    maxRange: Number.parseFloat(e.MaxRange) || 8192,\n    message: e.message || '',\n    sounds: Number.parseInt(e.sounds) || 0,\n    light: Number.parseInt(e.light) || 0,\n    waveHeight: Number.parseFloat(e.WaveHeight) || 0,\n    startDark: Number.parseInt(e.startdark) || 0,\n    newUnit: Number.parseInt(e.newunit) || 0,\n    defaultTeam: Number.parseInt(e.defaultteam) || 0,\n    gameTitle: Number.parseInt(e.gametitle) || 0\n  }),\n  aiscripted_sequence: (e) => ({\n    classname: 'aiscripted_sequence',\n    spawnflags: Number.parseInt(e.spawnflags),\n    m_iszEntity: e.m_iszEntity,\n    m_iszPlay: e.m_iszPlay || '',\n    m_flRadius: Number.parseInt(e.m_flRadius) || 512,\n    m_flRepeat: Number.parseInt(e.m_flRepeat) || 0,\n    m_fMoveTo: Number.parseInt(e.m_fMoveTo) || 0,\n    m_iFinishSchedule: Number.parseInt(e.m_iFinishSchedule) || 0\n  }),\n  ambient_generic: (e) => ({\n    classname: 'ambient_generic',\n    origin: parseNumberArray(e.origin),\n    targetName: e.targetname,\n    message: e.message,\n    health: Number.parseInt(e.health) || 10,\n    preset: Number.parseInt(e.preset) || 0,\n    startVolume: Number.parseInt(e.volstart) || 0,\n    fadeIn: Number.parseInt(e.fadein),\n    fadeOut: Number.parseInt(e.fadeout),\n    pitch: Number.parseInt(e.pitch),\n    pitchStart: Number.parseInt(e.pitchstart),\n    spinUp: Number.parseInt(e.spinup),\n    spinDown: Number.parseInt(e.spindown),\n    lfoType: Number.parseInt(e.lfotype),\n    lfoRate: Number.parseInt(e.lforate),\n    lfoModPitch: Number.parseInt(e.lfomodpitch),\n    lfoModVolume: Number.parseInt(e.lfomodvolume),\n    cSpinUp: Number.parseInt(e.cspinup),\n    spawnFlags: Number.parseInt(e.spawnflags)\n  }),\n  ammo_357: (e) => ({\n    classname: 'ammo_357',\n    origin: parseNumberArray(e.origin),\n    angles: parseNumberArray(e.angles),\n    target: e.target,\n    targetName: e.targetname || '',\n    delay: Number.parseInt(e.delay) || 0,\n    killTarget: e.killtarget || '',\n    spawnFlags: e.spawnflags || 0\n  }),\n  ammo_9mmAR: (e) => ({\n    classname: 'ammo_9mmAR',\n    origin: parseNumberArray(e.origin),\n    angles: parseNumberArray(e.angles),\n    target: e.target,\n    targetName: e.targetname || '',\n    delay: Number.parseInt(e.delay) || 0,\n    killTarget: e.killtarget || '',\n    spawnFlags: e.spawnflags || 0\n  }),\n  ammo_9mmbox: (e) => ({\n    classname: 'ammo_9mmbox',\n    origin: parseNumberArray(e.origin),\n    angles: parseNumberArray(e.angles),\n    target: e.target,\n    targetName: e.targetname || '',\n    delay: Number.parseInt(e.delay) || 0,\n    killTarget: e.killtarget || '',\n    spawnFlags: e.spawnflags || 0\n  }),\n  ammo_9mmclip: (e) => ({\n    classname: 'ammo_9mmclip',\n    origin: parseNumberArray(e.origin),\n    angles: parseNumberArray(e.angles),\n    target: e.target,\n    targetName: e.targetname || '',\n    delay: Number.parseInt(e.delay) || 0,\n    killTarget: e.killtarget || '',\n    spawnFlags: e.spawnflags || 0\n  }),\n  ammo_ARgrenades: (e) => ({\n    classname: 'ammo_ARgrenades',\n    origin: parseNumberArray(e.origin),\n    angles: parseNumberArray(e.angles),\n    target: e.target,\n    targetName: e.targetname || '',\n    delay: Number.parseInt(e.delay) || 0,\n    killTarget: e.killtarget || '',\n    spawnFlags: e.spawnflags || 0\n  }),\n  ammo_buckshot: (e) => ({\n    classname: 'ammo_buckshot',\n    origin: parseNumberArray(e.origin),\n    angles: parseNumberArray(e.angles),\n    target: e.target,\n    targetName: e.targetname || '',\n    delay: Number.parseInt(e.delay) || 0,\n    killTarget: e.killtarget || '',\n    spawnFlags: e.spawnflags || 0\n  }),\n  ammo_crossbow: (e) => ({\n    classname: 'ammo_crossbow',\n    origin: parseNumberArray(e.origin),\n    angles: parseNumberArray(e.angles),\n    target: e.target,\n    targetName: e.targetname || '',\n    delay: Number.parseInt(e.delay) || 0,\n    killTarget: e.killtarget || '',\n    spawnFlags: e.spawnflags || 0\n  }),\n  ammo_gaussclip: (e) => ({\n    classname: 'ammo_gaussclip',\n    origin: parseNumberArray(e.origin),\n    angles: parseNumberArray(e.angles),\n    target: e.target,\n    targetName: e.targetname || '',\n    delay: Number.parseInt(e.delay) || 0,\n    killTarget: e.killtarget || '',\n    spawnFlags: e.spawnflags || 0\n  }),\n  ammo_rpgclip: (e) => ({\n    classname: 'ammo_rpgclip',\n    origin: parseNumberArray(e.origin),\n    angles: parseNumberArray(e.angles),\n    target: e.target,\n    targetName: e.targetname || '',\n    delay: Number.parseInt(e.delay) || 0,\n    killTarget: e.killtarget || '',\n    spawnFlags: e.spawnflags || 0\n  }),\n  button_target: (e) => ({\n    classname: 'button_target',\n    target: e.target,\n    master: e.master,\n    renderEffect: Number.parseInt(e.renderfx) || 0,\n    renderMode: Number.parseInt(e.rendermode) || 0,\n    renderAmmount: Number.parseInt(e.renderamt) || 255,\n    renderColor: parseNumberArray(e.rendercolor || '0 0 0'),\n    zhltLightFlags: Number.parseInt(e.zhlt_lightflags) || 0,\n    lightOrigin: e.light_origin,\n    spawnFlags: Number.parseInt(e.spawnflags) || 1\n  }),\n  cycler: (e) => ({\n    classname: 'cycler',\n    origin: parseNumberArray(e.origin),\n    angles: parseNumberArray(e.angles),\n    targetName: e.targetname,\n    model: e.model,\n    sequence: e.sequence || '',\n    renderEffect: Number.parseInt(e.renderfx) || 0,\n    renderMode: Number.parseInt(e.rendermode) || 0,\n    renderAmmount: Number.parseInt(e.renderamt) || 255,\n    renderColor: parseNumberArray(e.rendercolor || '0 0 0')\n  }),\n  cycler_sprite: (e) => ({\n    classname: 'cycler_sprite',\n    origin: parseNumberArray(e.origin),\n    angles: parseNumberArray(e.angles),\n    targetName: e.targetname,\n    model: e.model,\n    framerate: Number.parseInt(e.framerate || '10'),\n    renderEffect: Number.parseInt(e.renderfx) || 0,\n    renderMode: Number.parseInt(e.rendermode) || 0,\n    renderAmmount: Number.parseInt(e.renderamt) || 255,\n    renderColor: parseNumberArray(e.rendercolor || '0 0 0')\n  }),\n  cyclear_weapon: (e) => ({\n    classname: 'cycler_weapon',\n    origin: parseNumberArray(e.origin),\n    angles: parseNumberArray(e.angles),\n    target: e.target,\n    targetName: e.targetname,\n    triggerTarget: e.TriggerTarget || '',\n    triggerCondition: Number.parseInt(e.TriggerCondition) || 0,\n    model: e.model,\n    sequence: e.sequence,\n    renderEffect: Number.parseInt(e.renderfx) || 0,\n    renderMode: Number.parseInt(e.rendermode) || 0,\n    renderAmmount: Number.parseInt(e.renderamt) || 255,\n    renderColor: parseNumberArray(e.rendercolor || '0 0 0')\n  }),\n  cyclear_wreckage: (e) => ({\n    classname: 'cycler_wreckage',\n    origin: parseNumberArray(e.origin),\n    angles: parseNumberArray(e.angles),\n    targetName: e.targetname,\n    model: e.model,\n    framerate: Number.parseInt(e.framerate) || 10,\n    scale: Number.parseFloat(e.scale) || 1.0,\n    renderEffect: Number.parseInt(e.renderfx) || 0,\n    renderMode: Number.parseInt(e.rendermode) || 0,\n    renderAmmount: Number.parseInt(e.renderamt) || 255,\n    renderColor: parseNumberArray(e.rendercolor || '0 0 0')\n  }),\n  env_beam: (e) => ({\n    classname: 'env_beam',\n    renderEffect: Number.parseInt(e.renderfx) || 0,\n    renderMode: Number.parseInt(e.rendermode) || 0,\n    renderAmmount: Number.parseInt(e.renderamt) || 255,\n    renderColor: parseNumberArray(e.rendercolor || '0 0 0'),\n    radius: Number.parseFloat(e.Radius) || 256,\n    life: Number.parseInt(e.life) || 1,\n    boltWidth: Number.parseInt(e.BoltWidth) || 20,\n    noiseAmplitude: Number.parseInt(e.NoiseAmplitude) || 0,\n    texture: e.texture || 'sprites/laserbeam.spr',\n    textureScroll: Number.parseInt(e.TextureScroll) || 35,\n    frameRate: Number.parseInt(e.framerate) || 0,\n    frameStart: Number.parseInt(e.framestart) || 0,\n    strikeTime: Number.parseInt(e.StrikeTime) || 1,\n    damage: Number.parseInt(e.damage) || 1,\n    spawnFlags: Number.parseInt(e.spawnflags)\n  })\n}\n\n// env_beverage (Half-Life)\n// env_blood (Half-Life)\n// env_bubbles (Half-Life)\n// env_explosion (Half-Life)\n// env_fade (Half-Life)\n// env_funnel (Half-Life)\n// env_global (Half-Life)\n// env_glow (Half-Life)\n// env_laser (Half-Life)\n// env_message (Half-Life)\n// env_render (Half-Life)\n// env_shake (Half-Life)\n// env_shooter (Half-Life)\n// env_sound (Half-Life)\n// env_spark (Half-Life)\n// env_sprite (Half-Life)\n// func_breakable (Half-Life)\n// func_button (Half-Life)\n// func_conveyor (Half-Life)\n// func_door (Half-Life)\n// func_door_rotating (Half-Life)\n// func_friction (Half-Life)\n// func_guntarget (Half-Life)\n// func_healthcharge (Half-Life)\n// func_illusionary (Half-Life)\n// func_ladder (Half-Life)\n// func_minicompo (Half-Life)\n// func_monsterclip (Half-Life)\n// func_mortar_field (Half-Life)\n// func_pendulum (Half-Life)\n// func_plat (Half-Life)\n// func_platrot (Half-Life)\n// func_pushable (Half-Life)\n// func_recharge (Half-Life)\n// func_rot_button (Half-Life)\n// func_rotating (Half-Life)\n// func_tank (Half-Life)\n// func_tankcontrols (Half-Life)\n// func_tanklaser (Half-Life)\n// func_tankmortar (Half-Life)\n// func_tankrocket (Half-Life)\n// func_trackautochange (Half-Life)\n// func_trackchange (Half-Life)\n// func_tracktrain (Half-Life)\n// func_train (Half-Life)\n// func_traincontrols (Half-Life)\n// func_wall (Half-Life)\n// func_wall_toggle (Half-Life)\n// func_water (Half-Life)\n// game_counter (Half-Life)\n// game_counter_set (Half-Life)\n// game_end (Half-Life)\n// game_player_equip (Half-Life)\n// game_player_hurt (Half-Life)\n// game_player_team (Half-Life)\n// game_score (Half-Life)\n// game_team_master (Half-Life)\n// game_team_set (Half-Life)\n// game_text (Half-Life)\n// game_zone_player (Half-Life)\n// gibshooter (Half-Life)\n// info_bigmomma (Half-Life)\n// info_intermission (Half-Life)\n// info_landmark (Half-Life)\n// info_node (Half-Life)\n// info_node_air (Half-Life)\n// info_null (Half-Life)\n// info_player_coop (Half-Life)\n// info_player_deathmatch (Half-Life)\n// info_player_start (Half-Life)\n// info_target (Half-Life)\n// info_teleport_destination (Half-Life)\n// info_texlights (Half-Life)\n// infodecal (Half-Life)\n// item_airtank (Half-Life)\n// item_antidote (Half-Life)\n// item_battery (Half-Life)\n// item_healthkit (Half-Life)\n// item_longjump (Half-Life)\n// item_security (Half-Life)\n// item_sodacan (Half-Life)\n// item_suit (Half-Life)\n// light (Half-Life)\n// light_environment (Half-Life)\n// light_spot (Half-Life)\n// momentary_door (Half-Life)\n// momentary_rot_button (Half-Life)\n// monster_alien_controller (Half-Life)\n// monster_alien_grunt (Half-Life)\n// monster_alien_slave (Half-Life)\n// monster_apache (Half-Life)\n// monster_babycrab (Half-Life)\n// monster_barnacle (Half-Life)\n// monster_barney (Half-Life)\n// monster_barney_dead (Half-Life)\n// monster_bigmomma (Half-Life)\n// monster_bloater (Half-Life)\n// monster_bullchicken (Half-Life)\n// monster_cockroach (Half-Life)\n// monster_flyer_flock (Half-Life)\n// monster_furniture (Half-Life)\n// monster_gargantua (Half-Life)\n// monster_generic (Half-Life)\n// monster_gman (Half-Life)\n// monster_grunt_repel (Half-Life)\n// monster_handgrenade (Half-Life)\n// monster_headcrab (Half-Life)\n// monster_hevsuit_dead (Half-Life)\n// monster_hgrunt_dead (Half-Life)\n// monster_houndeye (Half-Life)\n// monster_human_assassin (Half-Life)\n// monster_human_grunt (Half-Life)\n// monster_ichthyosaur (Half-Life)\n// monster_leech (Half-Life)\n// monster_miniturret (Half-Life)\n// monster_nihilanth (Half-Life)\n// monster_osprey (Half-Life)\n// monster_rat (Half-Life)\n// monster_satchelcharge (Half-Life)\n// monster_scientist (Half-Life)\n// monster_scientist_dead (Half-Life)\n// monster_sentry (Half-Life)\n// monster_sitting_scientist (Half-Life)\n// monster_snark (Half-Life)\n// monster_tentacle (Half-Life)\n// monster_tripmine (Half-Life)\n// monster_turret (Half-Life)\n// monster_zombie (Half-Life)\n// monstermaker (Half-Life)\n// multi_manager (Half-Life)\n// multisource (Half-Life)\n// path_corner (Half-Life)\n// path_track (Half-Life)\n// player_loadsaved (Half-Life)\n// player_weaponstrip (Half-Life)\n// scripted_sentence (Half-Life)\n// scripted_sequence (Half-Life)\n// speaker (Half-Life)\n// target_cdaudio (Half-Life)\n// trigger_auto (Half-Life)\n// trigger_autosave (Half-Life)\n// trigger_camera (Half-Life)\n// trigger_cdaudio (Half-Life)\n// trigger_changelevel (Half-Life)\n// trigger_changetarget (Half-Life)\n// trigger_counter (Half-Life)\n// trigger_endsection (Half-Life)\n// trigger_gravity (Half-Life)\n// trigger_hurt (Half-Life)\n// trigger_monsterjump (Half-Life)\n// trigger_multiple (Half-Life)\n// trigger_once (Half-Life)\n// trigger_push (Half-Life)\n// trigger_relay (Half-Life)\n// trigger_teleport (Half-Life)\n// trigger_transition (Half-Life)\n// weapon_357 (Half-Life)\n// weapon_9mmAR (Half-Life)\n// weapon_9mmhandgun (Half-Life)\n// weapon_crossbow (Half-Life)\n// weapon_crowbar (Half-Life)\n// weapon_egon (Half-Life)\n// weapon_gauss (Half-Life)\n// weapon_handgrenade (Half-Life)\n// weapon_hornetgun (Half-Life)\n// weapon_rpg (Half-Life)\n// weapon_satchel (Half-Life)\n// weapon_shotgun (Half-Life)\n// weapon_snark (Half-Life)\n// weapon_tripmine (Half-Life)\n// weaponbox (Half-Life)\n// world_items (Half-Life)\n// worldspawn (Half-Life)\n// xen_hair (Half-Life)\n// xen_plantlight (Half-Life)\n// xen_spore_large (Half-Life)\n// xen_spore_medium (Half-Life)\n// xen_spore_small (Half-Life)\n// xen_tree (Half-Life)\n\nexport interface FuncBreakable {\n  classname: 'func_breakable'\n}\n\nexport interface BadEntity {\n  classname: '!'\n  data: any\n}\n\nexport interface UnknownEntity {\n  classname: '?'\n  originalClassname: string\n  data: any\n}\n\nexport type Entity = WorldSpawn | FuncBreakable | BadEntity | UnknownEntity\n\nexport const BspEntityParser = {\n  parse(entities: any[]): Entity[] {\n    const arr: Entity[] = []\n\n    for (let i = 0; i < entities.length; ++i) {\n      const e = entities[i]\n\n      if (!e.classname) {\n        arr.push({\n          classname: '!',\n          data: e\n        })\n      }\n\n      if ((parsers as any)[e.classname]) {\n        arr.push((parsers as any)[e.classname](e))\n      } else {\n        arr.push({\n          classname: '?',\n          originalClassname: e.classname,\n          data: e\n        })\n      }\n    }\n\n    return arr\n  }\n}\n","export const resizeTexture = (\n  pixels: Uint8Array,\n  width: number,\n  height: number,\n  newWidth: number,\n  newHeight: number\n) => {\n  const canvas = document.createElement('canvas')\n  const ctx = canvas.getContext('2d')\n  if (!ctx) {\n    throw new Error('Runtime error.')\n  }\n  canvas.width = width\n  canvas.height = height\n\n  const nc = document.createElement('canvas')\n  const nctx = nc.getContext('2d')\n  if (!nctx) {\n    throw new Error('Runtime error.')\n  }\n  nc.width = newWidth\n  nc.height = newHeight\n\n  const cid = ctx.createImageData(width, height)\n  for (let i = 0, size = width * height * 4; i < size; i += 4) {\n    cid.data[i] = pixels[i]\n    cid.data[i + 1] = pixels[i + 1]\n    cid.data[i + 2] = pixels[i + 2]\n    cid.data[i + 3] = pixels[i + 3]\n  }\n  ctx.putImageData(cid, 0, 0)\n\n  nctx.drawImage(canvas, 0, 0, newWidth, newHeight)\n\n  return new Uint8Array(nctx.getImageData(0, 0, newWidth, newHeight).data)\n}\n\nexport const isPowerOfTwo = (n: number) => (n & (n - 1)) === 0\n\nexport const nextPowerOfTwo = (_n: number) => {\n  let n = _n\n  --n\n  for (let i = 1; i < 32; i <<= 1) {\n    n = n | (n >> i)\n  }\n  return n + 1\n}\n","import { mat4, vec3 } from 'gl-matrix'\nimport type { Bsp } from '../Bsp'\nimport type { Camera } from './Camera'\nimport type { Context } from './Context'\nimport { type Sprite, SpriteType } from '../Parsers/Sprite'\nimport { MainShader } from './WorldShader/WorldShader'\nimport { RenderMode } from '../Parsers/BspEntityParser'\nimport { isPowerOfTwo, nextPowerOfTwo, resizeTexture } from './Util'\n\ntype FaceInfo = {\n  offset: number\n  length: number\n  textureIndex: number\n}\ntype ModelInfo = {\n  origin: vec3\n  offset: number\n  length: number\n  isTransparent: boolean\n  faces: FaceInfo[]\n}\ntype SceneInfo = {\n  length: number\n  data: Float32Array\n  models: ModelInfo[]\n}\n\nexport class WorldScene {\n  static init(context: Context) {\n    const shader = MainShader.init(context)\n    if (!shader) {\n      console.error('Failed to init MainShader')\n      return null\n    }\n\n    shader.useProgram(context.gl)\n\n    const buffer = context.gl.createBuffer()\n    if (!buffer) {\n      console.error('Failed to create WebGL buffer')\n      return null\n    }\n\n    return new WorldScene({ buffer, context, shader })\n  }\n\n  private buffer: WebGLBuffer\n  private context: Context\n  private shader: MainShader\n  private modelMatrix: mat4 = mat4.create()\n\n  private sceneInfo: SceneInfo = {\n    length: 0,\n    data: new Float32Array(0),\n    models: []\n  }\n  private bsp: Bsp | null = null\n  private textures: {\n    name: string\n    width: number\n    height: number\n    data: Uint8Array\n    handle: WebGLTexture\n  }[] = []\n  private sprites: { [name: string]: Sprite } = {}\n  private lightmap: {\n    data: Uint8Array\n    handle: WebGLTexture\n  } | null = null\n  private constructor(params: { context: Context; buffer: WebGLBuffer; shader: MainShader }) {\n    this.buffer = params.buffer\n    this.context = params.context\n    this.shader = params.shader\n  }\n\n  changeMap(bsp: Bsp) {\n    this.fillBuffer(bsp)\n    this.loadTextures(bsp)\n    this.loadSpriteTextures(bsp)\n    this.loadLightmap(bsp)\n    this.bsp = bsp\n  }\n\n  private fillBuffer(bsp: Bsp) {\n    const gl = this.context.gl\n    const models = bsp.models\n\n    const INVISIBLE_TEXTURES = [\n      'aaatrigger',\n      'clip',\n      'null',\n      'hint',\n      'nodraw',\n      'invisible',\n      'skip',\n      'trigger',\n      'sky',\n      'fog'\n    ]\n\n    // get total buffer size\n    let size = 0\n    for (let i = 0; i < models.length; ++i) {\n      const model = models[i]\n      for (let j = 0; j < model.faces.length; ++j) {\n        const texture = bsp.textures[model.faces[j].textureIndex]\n        if (INVISIBLE_TEXTURES.indexOf(texture.name) > -1) {\n          continue\n        }\n\n        size += model.faces[j].buffer.length\n      }\n    }\n\n    // add 6 vertex for a single quad that will be used to render sprites\n    size += 7 * 6\n\n    // init scene info structure and buffer with the appropriate size\n    const sceneInfo: SceneInfo = {\n      length: size,\n      data: new Float32Array(size),\n      models: []\n    }\n\n    // fill the scene info structure\n    let currentVertex = 0\n    for (let i = 0; i < bsp.models.length; ++i) {\n      const model = bsp.models[i]\n      const modelInfo: ModelInfo = {\n        origin: model.origin,\n        offset: currentVertex,\n        length: 0,\n        isTransparent: false,\n        faces: []\n      }\n\n      for (let j = 0; j < model.faces.length; ++j) {\n        const texture = bsp.textures[model.faces[j].textureIndex]\n        if (INVISIBLE_TEXTURES.indexOf(texture.name) > -1) {\n          continue\n        }\n\n        const faceInfo: FaceInfo = {\n          offset: currentVertex,\n          length: 0,\n          textureIndex: -1\n        }\n\n        for (let k = 0; k < model.faces[j].buffer.length; ++k) {\n          sceneInfo.data[currentVertex++] = model.faces[j].buffer[k]\n        }\n\n        if (!modelInfo.isTransparent && bsp.textures[model.faces[j].textureIndex].name[0] === '{') {\n          modelInfo.isTransparent = true\n        }\n\n        faceInfo.textureIndex = model.faces[j].textureIndex\n        faceInfo.length = currentVertex - faceInfo.offset\n        modelInfo.faces.push(faceInfo)\n      }\n\n      modelInfo.length = currentVertex - modelInfo.offset\n      sceneInfo.models.push(modelInfo)\n    }\n\n    // set data of the last quad used for rendering sprites\n    sceneInfo.models.push({\n      origin: [0, 0, 0],\n      offset: currentVertex,\n      length: 4,\n      isTransparent: false, // unused\n      faces: [\n        {\n          offset: currentVertex,\n          length: 4,\n          textureIndex: 0 // unused\n        }\n      ]\n    })\n    sceneInfo.data[currentVertex++] = -0.5\n    sceneInfo.data[currentVertex++] = 0\n    sceneInfo.data[currentVertex++] = -0.5\n    sceneInfo.data[currentVertex++] = 1\n    sceneInfo.data[currentVertex++] = 1\n    sceneInfo.data[currentVertex++] = 0\n    sceneInfo.data[currentVertex++] = 0\n\n    sceneInfo.data[currentVertex++] = 0.5\n    sceneInfo.data[currentVertex++] = 0\n    sceneInfo.data[currentVertex++] = 0.5\n    sceneInfo.data[currentVertex++] = 0\n    sceneInfo.data[currentVertex++] = 0\n    sceneInfo.data[currentVertex++] = 0\n    sceneInfo.data[currentVertex++] = 0\n\n    sceneInfo.data[currentVertex++] = -0.5\n    sceneInfo.data[currentVertex++] = 0\n    sceneInfo.data[currentVertex++] = 0.5\n    sceneInfo.data[currentVertex++] = 1\n    sceneInfo.data[currentVertex++] = 0\n    sceneInfo.data[currentVertex++] = 0\n    sceneInfo.data[currentVertex++] = 0\n\n    sceneInfo.data[currentVertex++] = -0.5\n    sceneInfo.data[currentVertex++] = 0\n    sceneInfo.data[currentVertex++] = -0.5\n    sceneInfo.data[currentVertex++] = 1\n    sceneInfo.data[currentVertex++] = 1\n    sceneInfo.data[currentVertex++] = 0\n    sceneInfo.data[currentVertex++] = 0\n\n    sceneInfo.data[currentVertex++] = 0.5\n    sceneInfo.data[currentVertex++] = 0\n    sceneInfo.data[currentVertex++] = -0.5\n    sceneInfo.data[currentVertex++] = 0\n    sceneInfo.data[currentVertex++] = 1\n    sceneInfo.data[currentVertex++] = 0\n    sceneInfo.data[currentVertex++] = 0\n\n    sceneInfo.data[currentVertex++] = 0.5\n    sceneInfo.data[currentVertex++] = 0\n    sceneInfo.data[currentVertex++] = 0.5\n    sceneInfo.data[currentVertex++] = 0\n    sceneInfo.data[currentVertex++] = 0\n    sceneInfo.data[currentVertex++] = 0\n    sceneInfo.data[currentVertex++] = 0\n\n    // sort each model's face in scene info structure by texture index\n    // and merge faces with same texture to lower draw calls\n    currentVertex = 0\n    const sortedSceneInfo: SceneInfo = {\n      data: new Float32Array(sceneInfo.data),\n      length: sceneInfo.length,\n      models: sceneInfo.models.map((model) => ({\n        origin: vec3.clone(model.origin),\n        offset: model.offset,\n        length: model.length,\n        isTransparent: model.isTransparent,\n        faces: model.faces.map((face) => ({\n          offset: face.offset,\n          length: face.length,\n          textureIndex: face.textureIndex\n        }))\n      }))\n    }\n    for (let i = 0; i < sortedSceneInfo.models.length; ++i) {\n      const model = sortedSceneInfo.models[i]\n      model.faces.sort((a, b) => a.textureIndex - b.textureIndex)\n\n      for (let j = 0; j < model.faces.length; ++j) {\n        const face = model.faces[j]\n        const newOffset = currentVertex\n\n        for (let k = 0; k < face.length; ++k) {\n          sortedSceneInfo.data[currentVertex] = sceneInfo.data[face.offset + k]\n          currentVertex += 1\n        }\n\n        face.offset = newOffset\n      }\n\n      const newFaces: FaceInfo[] = []\n      let currentTextureIndex = -1\n      for (let j = 0; j < model.faces.length; ++j) {\n        const face = model.faces[j]\n\n        if (face.textureIndex === currentTextureIndex) {\n          newFaces[newFaces.length - 1].length += face.length\n        } else {\n          // merge\n          newFaces.push({\n            offset: face.offset,\n            length: face.length,\n            textureIndex: face.textureIndex\n          })\n          currentTextureIndex = face.textureIndex\n        }\n      }\n      model.faces = newFaces\n    }\n    this.sceneInfo = sortedSceneInfo\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer)\n    gl.bufferData(gl.ARRAY_BUFFER, this.sceneInfo.data, gl.STATIC_DRAW)\n  }\n\n  private loadTextures(bsp: Bsp) {\n    const gl = this.context.gl\n\n    for (let i = 0; i < bsp.textures.length; ++i) {\n      const glTexture = gl.createTexture()\n      if (!glTexture) {\n        // shouldnt happen\n        // TODO: handle better\n        throw new Error('fatal error')\n      }\n\n      const texture = bsp.textures[i]\n      if (!isPowerOfTwo(texture.width) || !isPowerOfTwo(texture.height)) {\n        const w = texture.width\n        const h = texture.height\n        const nw = nextPowerOfTwo(texture.width)\n        const nh = nextPowerOfTwo(texture.height)\n        texture.data = resizeTexture(texture.data, w, h, nw, nh)\n        texture.width = nw\n        texture.height = nh\n      }\n\n      gl.bindTexture(gl.TEXTURE_2D, glTexture)\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        0,\n        gl.RGBA,\n        texture.width,\n        texture.height,\n        0,\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        texture.data\n      )\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR)\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR)\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT)\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT)\n      gl.generateMipmap(gl.TEXTURE_2D)\n\n      const anisotropy = this.context.getAnisotropyExtension()\n      if (anisotropy) {\n        gl.texParameteri(\n          gl.TEXTURE_2D,\n          anisotropy.TEXTURE_MAX_ANISOTROPY_EXT,\n          this.context.getMaxAnisotropy(anisotropy)\n        )\n      }\n\n      this.textures.push({\n        name: texture.name,\n        width: texture.width,\n        height: texture.height,\n        data: texture.data,\n        handle: glTexture\n      })\n    }\n  }\n\n  private loadSpriteTextures(bsp: Bsp) {\n    const gl = this.context.gl\n\n    for (const [name, sprite] of Object.entries(bsp.sprites)) {\n      const glTexture = gl.createTexture()\n      if (!glTexture) {\n        // shouldnt happen\n        // TODO: handle better\n        throw new Error('fatal error')\n      }\n\n      const texture = sprite.frames[0]\n      if (!isPowerOfTwo(texture.width) || !isPowerOfTwo(texture.height)) {\n        const w = texture.width\n        const h = texture.height\n        const nw = nextPowerOfTwo(texture.width)\n        const nh = nextPowerOfTwo(texture.height)\n        texture.data = resizeTexture(texture.data, w, h, nw, nh)\n        texture.width = nw\n        texture.height = nh\n      }\n\n      gl.bindTexture(gl.TEXTURE_2D, glTexture)\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        0,\n        gl.RGBA,\n        texture.width,\n        texture.height,\n        0,\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        texture.data\n      )\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR)\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR)\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT)\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT)\n      gl.generateMipmap(gl.TEXTURE_2D)\n\n      const anisotropy = this.context.getAnisotropyExtension()\n      if (anisotropy) {\n        gl.texParameteri(\n          gl.TEXTURE_2D,\n          anisotropy.TEXTURE_MAX_ANISOTROPY_EXT,\n          this.context.getMaxAnisotropy(anisotropy)\n        )\n      }\n\n      this.textures.push({\n        name: name,\n        width: texture.width,\n        height: texture.height,\n        data: texture.data,\n        handle: glTexture\n      })\n      this.sprites[name] = sprite\n    }\n  }\n\n  private loadLightmap(bsp: Bsp) {\n    const gl = this.context.gl\n\n    const glLightmap = gl.createTexture()\n    if (!glLightmap) {\n      // shouldnt happen\n      // TODO: handle better\n      throw new Error('fatal error')\n    }\n\n    gl.bindTexture(gl.TEXTURE_2D, glLightmap)\n    gl.texImage2D(\n      gl.TEXTURE_2D,\n      0,\n      gl.RGBA,\n      bsp.lightmap.width,\n      bsp.lightmap.height,\n      0,\n      gl.RGBA,\n      gl.UNSIGNED_BYTE,\n      bsp.lightmap.data\n    )\n    gl.generateMipmap(gl.TEXTURE_2D)\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR)\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR)\n\n    this.lightmap = {\n      data: bsp.lightmap.data,\n      handle: glLightmap\n    }\n  }\n\n  draw(camera: Camera, entities: any[]) {\n    if (!this.bsp || !this.lightmap) {\n      return\n    }\n\n    const gl = this.context.gl\n    const shader = this.shader\n\n    shader.useProgram(gl)\n\n    camera.updateProjectionMatrix()\n    camera.updateViewMatrix()\n\n    shader.setViewMatrix(gl, camera.viewMatrix)\n    shader.setProjectionMatrix(gl, camera.projectionMatrix)\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer)\n    shader.enableVertexAttribs(gl)\n    shader.setVertexAttribPointers(gl)\n\n    shader.setDiffuse(gl, 0)\n    shader.setLightmap(gl, 1)\n\n    gl.activeTexture(gl.TEXTURE1)\n    gl.bindTexture(gl.TEXTURE_2D, this.lightmap.handle)\n\n    gl.activeTexture(gl.TEXTURE0)\n\n    const opaqueEntities = []\n    const transparentEntities = []\n    for (let i = 1; i < entities.length; ++i) {\n      const e = entities[i]\n      if (e.model) {\n        if (!e.rendermode || e.rendermode === RenderMode.Normal || e.rendermode === RenderMode.Solid) {\n          if (e.model[0] === '*') {\n            const model = this.sceneInfo.models[Number.parseInt(e.model.substr(1))]\n            if (model.isTransparent) {\n              transparentEntities.push(e)\n              continue\n            }\n          } else if (e.model.indexOf('.spr') > -1) {\n            transparentEntities.push(e)\n            continue\n          }\n\n          opaqueEntities.push(e)\n        } else if (e.rendermode === RenderMode.Additive) {\n          transparentEntities.push(e)\n        } else {\n          transparentEntities.push(e)\n        }\n      }\n    }\n\n    shader.setOpacity(gl, 1.0)\n    this.renderWorldSpawn()\n    this.renderOpaqueEntities(camera, opaqueEntities)\n\n    if (transparentEntities.length) {\n      gl.depthMask(false)\n      this.renderTransparentEntities(transparentEntities, camera)\n      gl.depthMask(true)\n    }\n  }\n\n  private renderWorldSpawn() {\n    const model = this.sceneInfo.models[0]\n    const gl = this.context.gl\n\n    mat4.identity(this.modelMatrix)\n    this.shader.setModelMatrix(gl, this.modelMatrix)\n\n    for (let j = 0; j < model.faces.length; ++j) {\n      const face = model.faces[j]\n      gl.bindTexture(gl.TEXTURE_2D, this.textures[face.textureIndex].handle)\n      gl.drawArrays(gl.TRIANGLES, face.offset / 7, face.length / 7)\n    }\n  }\n\n  private renderOpaqueEntities(camera: Camera, entities: any[]) {\n    const gl = this.context.gl\n    const shader = this.shader\n    const mmx = this.modelMatrix\n\n    for (let i = 0; i < entities.length; ++i) {\n      const entity = entities[i]\n      const modelIndex = Number.parseInt(entity.model.substr(1))\n      const model = this.sceneInfo.models[modelIndex]\n      if (model) {\n        const angles = entity.angles || [0, 0, 0]\n        const origin = entity.origin\n          ? vec3.fromValues(entity.origin[0], entity.origin[1], entity.origin[2])\n          : vec3.create()\n        vec3.add(origin, origin, model.origin)\n\n        // TODO: this seems to work, but needs further research\n        mat4.identity(mmx)\n        mat4.translate(mmx, mmx, origin)\n        // mat4.rotateY(mmx, mmx, (angles[0] * Math.PI) / 180) // dunno this\n        mat4.rotateZ(mmx, mmx, (angles[1] * Math.PI) / 180)\n        mat4.rotateX(this.modelMatrix, this.modelMatrix, (angles[2] * Math.PI) / 180)\n        shader.setModelMatrix(gl, this.modelMatrix)\n\n        for (let j = 0; j < model.faces.length; ++j) {\n          const face = model.faces[j]\n          gl.bindTexture(gl.TEXTURE_2D, this.textures[face.textureIndex].handle)\n          gl.drawArrays(gl.TRIANGLES, face.offset / 7, face.length / 7)\n        }\n      } else if (entity.model.indexOf('.spr') > -1) {\n        const texture = this.textures.find((a) => a.name === entity.model)\n        const sprite = this.sprites[entity.model]\n        if (texture && sprite) {\n          const origin = entity.origin\n            ? vec3.fromValues(entity.origin[0], entity.origin[1], entity.origin[2])\n            : vec3.create()\n          const scale = vec3.fromValues(texture.width, 1, texture.height)\n          const angles = entity.angles\n            ? vec3.fromValues(entity.angles[0], entity.angles[2], entity.angles[1])\n            : vec3.create()\n          vec3.scale(scale, scale, entity.scale || 1)\n\n          mat4.identity(mmx)\n          mat4.translate(mmx, mmx, origin)\n\n          switch (sprite.header.type) {\n            case SpriteType.VP_PARALLEL_UPRIGHT: {\n              // TODO: incorrect, but will do for now\n              mat4.rotateZ(mmx, mmx, camera.rotation[1] + Math.PI / 2)\n              break\n            }\n            case SpriteType.FACING_UPRIGHT: {\n              // TODO: fix incorrect\n              mat4.rotateZ(mmx, mmx, camera.rotation[1] + Math.PI / 2)\n              break\n            }\n            case SpriteType.VP_PARALLEL: {\n              mat4.rotateZ(\n                mmx,\n                mmx,\n                Math.atan2(origin[1] - camera.position[1], origin[0] - camera.position[0]) + Math.PI / 2\n              )\n              mat4.rotateX(\n                mmx,\n                mmx,\n                Math.atan2(\n                  camera.position[2] - origin[2],\n                  Math.sqrt((camera.position[0] - origin[0]) ** 2 + (camera.position[1] - origin[1]) ** 2)\n                )\n              )\n\n              break\n            }\n            case SpriteType.ORIENTED: {\n              mat4.rotateY(mmx, mmx, (angles[0] * Math.PI) / 180 + Math.PI)\n              mat4.rotateZ(mmx, mmx, (angles[1] * Math.PI) / 180 + Math.PI)\n              mat4.rotateX(mmx, mmx, (angles[2] * Math.PI) / 180 - Math.PI / 2)\n              break\n            }\n            case SpriteType.VP_PARALLEL_ORIENTED: {\n              mat4.rotateY(mmx, mmx, (angles[0] * Math.PI) / 180 + Math.PI)\n              mat4.rotateZ(mmx, mmx, (angles[1] * Math.PI) / 180 + Math.PI)\n              break\n            }\n            default: {\n              throw new Error('Invalid sprite type')\n            }\n          }\n\n          mat4.scale(mmx, mmx, scale)\n          shader.setModelMatrix(gl, mmx)\n          shader.setOpacity(gl, (entity.renderamt || 255) / 255)\n\n          const renderMode = entity.rendermode || RenderMode.Normal\n          switch (renderMode) {\n            case RenderMode.Normal: {\n              shader.setOpacity(gl, 1)\n              gl.bindTexture(gl.TEXTURE_2D, texture.handle)\n              gl.drawArrays(gl.TRIANGLES, this.sceneInfo.models[this.sceneInfo.models.length - 1].offset / 7, 6)\n              break\n            }\n            case RenderMode.Color: {\n              // TODO: not properly implemented\n              shader.setOpacity(gl, (entity.renderamt || 255) / 255)\n              gl.bindTexture(gl.TEXTURE_2D, texture.handle)\n              gl.drawArrays(gl.TRIANGLES, this.sceneInfo.models[this.sceneInfo.models.length - 1].offset / 7, 6)\n              break\n            }\n            case RenderMode.Texture: {\n              shader.setOpacity(gl, (entity.renderamt || 255) / 255)\n              gl.bindTexture(gl.TEXTURE_2D, texture.handle)\n              gl.drawArrays(gl.TRIANGLES, this.sceneInfo.models[this.sceneInfo.models.length - 1].offset / 7, 6)\n              break\n            }\n            case RenderMode.Glow: {\n              // TODO: not properly implemented\n              gl.blendFunc(gl.SRC_ALPHA, gl.DST_ALPHA)\n              shader.setOpacity(gl, (entity.renderamt || 255) / 255)\n              gl.bindTexture(gl.TEXTURE_2D, texture.handle)\n              gl.drawArrays(gl.TRIANGLES, this.sceneInfo.models[this.sceneInfo.models.length - 1].offset / 7, 6)\n              gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA)\n              break\n            }\n            case RenderMode.Solid: {\n              // TODO: not properly implemented\n              shader.setOpacity(gl, (entity.renderamt || 255) / 255)\n              gl.bindTexture(gl.TEXTURE_2D, texture.handle)\n              gl.drawArrays(gl.TRIANGLES, this.sceneInfo.models[this.sceneInfo.models.length - 1].offset / 7, 6)\n              break\n            }\n            case RenderMode.Additive: {\n              gl.blendFunc(gl.SRC_ALPHA, gl.DST_ALPHA)\n              shader.setOpacity(gl, (entity.renderamt || 255) / 255)\n              gl.bindTexture(gl.TEXTURE_2D, texture.handle)\n              gl.drawArrays(gl.TRIANGLES, this.sceneInfo.models[this.sceneInfo.models.length - 1].offset / 7, 6)\n              gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA)\n              break\n            }\n          }\n        }\n      }\n    }\n  }\n\n  private renderTransparentEntities(entities: any[], camera: Camera) {\n    const gl = this.context.gl\n    const shader = this.shader\n    const mmx = this.modelMatrix\n\n    // distances of all entities from the camera\n    const entityDistances: {\n      index: number\n      distance: number\n    }[] = entities\n      .map((e, i) => ({\n        index: i,\n        distance: vec3.dist(camera.position, e.origin || [0, 0, 0])\n      }))\n      .sort((a, b) => a.distance - b.distance)\n\n    for (let i = 0; i < entityDistances.length; ++i) {\n      const entity = entities[entityDistances[i].index]\n\n      const modelIndex = Number.parseInt(entity.model.substr(1))\n      const model = this.sceneInfo.models[modelIndex]\n      if (model) {\n        const angles = entity.angles || [0, 0, 0]\n        const origin = entity.origin || [0, 0, 0]\n        origin[0] += model.origin[0]\n        origin[1] += model.origin[1]\n        origin[2] += model.origin[2]\n\n        // TODO: this seems to work, but needs further research\n        mat4.identity(mmx)\n        mat4.translate(mmx, mmx, origin)\n        mat4.rotateZ(mmx, mmx, (angles[1] * Math.PI) / 180)\n        // mat4.rotateY(mmx, mmx, (angles[2] * Math.PI) / 180) // dunno this\n        mat4.rotateX(this.modelMatrix, this.modelMatrix, (angles[2] * Math.PI) / 180)\n        shader.setModelMatrix(gl, this.modelMatrix)\n\n        const renderMode = entity.rendermode || RenderMode.Normal\n        switch (renderMode) {\n          case RenderMode.Normal: {\n            shader.setOpacity(gl, 1)\n            for (let j = 0; j < model.faces.length; ++j) {\n              const face = model.faces[j]\n              gl.bindTexture(gl.TEXTURE_2D, this.textures[face.textureIndex].handle)\n              gl.drawArrays(gl.TRIANGLES, face.offset / 7, face.length / 7)\n            }\n            break\n          }\n          case RenderMode.Color: {\n            // TODO: not properly implemented\n            shader.setOpacity(gl, (entity.renderamt || 255) / 255)\n            for (let j = 0; j < model.faces.length; ++j) {\n              const face = model.faces[j]\n              gl.bindTexture(gl.TEXTURE_2D, this.textures[face.textureIndex].handle)\n              gl.drawArrays(gl.TRIANGLES, face.offset / 7, face.length / 7)\n            }\n            break\n          }\n          case RenderMode.Texture: {\n            shader.setOpacity(gl, (entity.renderamt || 255) / 255)\n            for (let j = 0; j < model.faces.length; ++j) {\n              const face = model.faces[j]\n              gl.bindTexture(gl.TEXTURE_2D, this.textures[face.textureIndex].handle)\n              gl.drawArrays(gl.TRIANGLES, face.offset / 7, face.length / 7)\n            }\n            break\n          }\n          case RenderMode.Glow: {\n            // TODO: not properly implemented\n            shader.setOpacity(gl, (entity.renderamt || 255) / 255)\n            for (let j = 0; j < model.faces.length; ++j) {\n              const face = model.faces[j]\n              gl.bindTexture(gl.TEXTURE_2D, this.textures[face.textureIndex].handle)\n              gl.drawArrays(gl.TRIANGLES, face.offset / 7, face.length / 7)\n            }\n            break\n          }\n          case RenderMode.Solid: {\n            // TODO: not properly implemented\n            shader.setOpacity(gl, (entity.renderamt || 255) / 255)\n            for (let j = 0; j < model.faces.length; ++j) {\n              const face = model.faces[j]\n              gl.bindTexture(gl.TEXTURE_2D, this.textures[face.textureIndex].handle)\n              gl.drawArrays(gl.TRIANGLES, face.offset / 7, face.length / 7)\n            }\n            break\n          }\n          case RenderMode.Additive: {\n            gl.blendFunc(gl.SRC_ALPHA, gl.DST_ALPHA)\n            shader.setOpacity(gl, (entity.renderamt || 255) / 255)\n            for (let j = 0; j < model.faces.length; ++j) {\n              const face = model.faces[j]\n              gl.bindTexture(gl.TEXTURE_2D, this.textures[face.textureIndex].handle)\n              gl.drawArrays(gl.TRIANGLES, face.offset / 7, face.length / 7)\n            }\n            gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA)\n            break\n          }\n        }\n      } else if (entity.model.indexOf('.spr') > -1) {\n        const texture = this.textures.find((a) => a.name === entity.model)\n        const sprite = this.sprites[entity.model]\n        if (texture && sprite) {\n          const origin = entity.origin\n            ? vec3.fromValues(entity.origin[0], entity.origin[1], entity.origin[2])\n            : vec3.create()\n          const scale = vec3.fromValues(texture.width, 1, texture.height)\n          const angles = entity.angles\n            ? vec3.fromValues(entity.angles[0], entity.angles[2], entity.angles[1])\n            : vec3.create()\n          vec3.scale(scale, scale, entity.scale || 1)\n\n          mat4.identity(mmx)\n          mat4.translate(mmx, mmx, origin)\n\n          switch (sprite.header.type) {\n            case SpriteType.VP_PARALLEL_UPRIGHT: {\n              // TODO: incorrect, but will do for now\n              mat4.rotateZ(mmx, mmx, camera.rotation[1] + Math.PI / 2)\n              break\n            }\n            case SpriteType.FACING_UPRIGHT: {\n              // TODO: fix incorrect\n              mat4.rotateZ(mmx, mmx, camera.rotation[1] + Math.PI / 2)\n              break\n            }\n            case SpriteType.VP_PARALLEL: {\n              mat4.rotateZ(\n                mmx,\n                mmx,\n                Math.atan2(origin[1] - camera.position[1], origin[0] - camera.position[0]) + Math.PI / 2\n              )\n              mat4.rotateX(\n                mmx,\n                mmx,\n                Math.atan2(\n                  camera.position[2] - origin[2],\n                  Math.sqrt((camera.position[0] - origin[0]) ** 2 + (camera.position[1] - origin[1]) ** 2)\n                )\n              )\n\n              break\n            }\n            case SpriteType.ORIENTED: {\n              mat4.rotateY(mmx, mmx, (angles[0] * Math.PI) / 180 + Math.PI)\n              mat4.rotateZ(mmx, mmx, (angles[1] * Math.PI) / 180 + Math.PI)\n              mat4.rotateX(mmx, mmx, (angles[2] * Math.PI) / 180 - Math.PI / 2)\n              break\n            }\n            case SpriteType.VP_PARALLEL_ORIENTED: {\n              mat4.rotateY(mmx, mmx, (angles[0] * Math.PI) / 180 + Math.PI)\n              mat4.rotateZ(mmx, mmx, (angles[1] * Math.PI) / 180 + Math.PI)\n              break\n            }\n            default: {\n              throw new Error('Invalid sprite type')\n            }\n          }\n\n          mat4.scale(mmx, mmx, scale)\n          shader.setModelMatrix(gl, mmx)\n          shader.setOpacity(gl, (entity.renderamt || 255) / 255)\n\n          const renderMode = entity.rendermode || RenderMode.Normal\n          switch (renderMode) {\n            case RenderMode.Normal: {\n              shader.setOpacity(gl, 1)\n              gl.bindTexture(gl.TEXTURE_2D, texture.handle)\n              gl.drawArrays(gl.TRIANGLES, this.sceneInfo.models[this.sceneInfo.models.length - 1].offset / 7, 6)\n              break\n            }\n            case RenderMode.Color: {\n              // TODO: not properly implemented\n              shader.setOpacity(gl, (entity.renderamt || 255) / 255)\n              gl.bindTexture(gl.TEXTURE_2D, texture.handle)\n              gl.drawArrays(gl.TRIANGLES, this.sceneInfo.models[this.sceneInfo.models.length - 1].offset / 7, 6)\n              break\n            }\n            case RenderMode.Texture: {\n              shader.setOpacity(gl, (entity.renderamt || 255) / 255)\n              gl.bindTexture(gl.TEXTURE_2D, texture.handle)\n              gl.drawArrays(gl.TRIANGLES, this.sceneInfo.models[this.sceneInfo.models.length - 1].offset / 7, 6)\n              break\n            }\n            case RenderMode.Glow: {\n              // TODO: not properly implemented\n              gl.blendFunc(gl.SRC_ALPHA, gl.DST_ALPHA)\n              shader.setOpacity(gl, (entity.renderamt || 255) / 255)\n              gl.bindTexture(gl.TEXTURE_2D, texture.handle)\n              gl.drawArrays(gl.TRIANGLES, this.sceneInfo.models[this.sceneInfo.models.length - 1].offset / 7, 6)\n              gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA)\n              break\n            }\n            case RenderMode.Solid: {\n              // TODO: not properly implemented\n              shader.setOpacity(gl, (entity.renderamt || 255) / 255)\n              gl.bindTexture(gl.TEXTURE_2D, texture.handle)\n              gl.drawArrays(gl.TRIANGLES, this.sceneInfo.models[this.sceneInfo.models.length - 1].offset / 7, 6)\n              break\n            }\n            case RenderMode.Additive: {\n              gl.blendFunc(gl.SRC_ALPHA, gl.DST_ALPHA)\n              shader.setOpacity(gl, (entity.renderamt || 255) / 255)\n              gl.bindTexture(gl.TEXTURE_2D, texture.handle)\n              gl.drawArrays(gl.TRIANGLES, this.sceneInfo.models[this.sceneInfo.models.length - 1].offset / 7, 6)\n              gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA)\n              break\n            }\n          }\n        }\n      }\n    }\n  }\n}\n","import { createNanoEvents, type Emitter as EventEmitter } from 'nanoevents'\r\nimport type { Bsp } from './Bsp'\r\nimport type { Sound } from './Sound'\r\nimport type { Config } from './Config'\r\nimport type { Replay } from './Replay/Replay'\r\nimport * as Time from './Time'\r\nimport { Loader } from './Loader'\r\nimport { Mouse } from './Input/Mouse'\r\nimport { Touch } from './Input/Touch'\r\nimport { Camera } from './Graphics/Camera'\r\nimport { Keyboard } from './Input/Keyboard'\r\nimport { SoundSystem } from './SoundSystem'\r\nimport { Context } from './Graphics/Context'\r\nimport { ReplayPlayer } from './ReplayPlayer'\r\nimport { Renderer } from './Graphics/Renderer'\r\nimport { SkyScene } from './Graphics/SkyScene'\r\nimport { WorldScene } from './Graphics/WorldScene'\r\n\r\nexport enum PlayerMode {\r\n  FREE = 0,\r\n  REPLAY = 1\r\n}\r\n\r\ntype GameInitSuccess = { status: 'success'; game: Game }\r\ntype GameInitError = { status: 'error'; message: string }\r\ntype GameInit = GameInitSuccess | GameInitError\r\n\r\nexport class Game {\r\n  public static init(config: Config): GameInit {\r\n    const status = Context.checkWebGLSupport()\r\n    if (!status.hasSupport) {\r\n      return {\r\n        status: 'error',\r\n        message: 'No WebGL support!'\r\n      }\r\n    }\r\n\r\n    const canvas = document.createElement('canvas')\r\n    if (!canvas) {\r\n      return {\r\n        status: 'error',\r\n        message: 'Failed to create <canvas> element!'\r\n      }\r\n    }\r\n\r\n    const context = Context.init(canvas)\r\n    if (!context) {\r\n      return {\r\n        status: 'error',\r\n        message: 'Failed to initialize WebGL context'\r\n      }\r\n    }\r\n\r\n    const renderer = Renderer.init(context)\r\n    if (!renderer) {\r\n      return {\r\n        status: 'error',\r\n        message: 'Failed to initialize renderer'\r\n      }\r\n    }\r\n\r\n    const worldScene = WorldScene.init(context)\r\n    if (!worldScene) {\r\n      return {\r\n        status: 'error',\r\n        message: 'Failed to initialize world scene'\r\n      }\r\n    }\r\n\r\n    const skyScene = SkyScene.init(context)\r\n    if (!skyScene) {\r\n      return {\r\n        status: 'error',\r\n        message: 'Failed to initialize sky scene'\r\n      }\r\n    }\r\n\r\n    const game = new Game({\r\n      canvas,\r\n      config,\r\n      context,\r\n      renderer,\r\n      worldScene,\r\n      skyScene\r\n    })\r\n\r\n    return {\r\n      status: 'success',\r\n      game\r\n    }\r\n  }\r\n\r\n  config: Config\r\n\r\n  pauseTime = 0\r\n  isPaused = false\r\n  lastTime = 0\r\n  accumTime = 0\r\n  readonly timeStep: number = 1 / 60\r\n\r\n  title = ''\r\n  mode: PlayerMode\r\n  pointerLocked = false\r\n\r\n  touch: Touch = new Touch()\r\n  mouse: Mouse = new Mouse()\r\n  keyboard: Keyboard = new Keyboard()\r\n\r\n  loader: Loader\r\n  entities: any[] = []\r\n  sounds: Sound[]\r\n  soundSystem: SoundSystem\r\n  events: EventEmitter\r\n  player: ReplayPlayer\r\n\r\n  canvas: HTMLCanvasElement\r\n  mapName: string\r\n  context: Context\r\n  camera: Camera\r\n  renderer: Renderer\r\n  worldScene: WorldScene\r\n  skyScene: SkyScene\r\n\r\n  constructor(params: {\r\n    config: Config\r\n    canvas: HTMLCanvasElement\r\n    context: Context\r\n    renderer: Renderer\r\n    worldScene: WorldScene\r\n    skyScene: SkyScene\r\n  }) {\r\n    this.sounds = []\r\n    this.soundSystem = new SoundSystem()\r\n\r\n    this.config = params.config\r\n    this.loader = new Loader(this.config)\r\n    this.loader.events.on('loadall', this.onLoadAll)\r\n\r\n    document.addEventListener('touchstart', this.onTouchStart, false)\r\n    document.addEventListener('touchend', this.onTouchEnd, false)\r\n    document.addEventListener('touchcancel', this.onTouchEnd, false)\r\n    document.addEventListener('touchmove', this.onTouchMove, false)\r\n    document.addEventListener('mousemove', this.onMouseMove, false)\r\n    window.addEventListener('keydown', this.keyDown)\r\n    window.addEventListener('keyup', this.keyUp)\r\n    window.addEventListener('visibilitychange', this.onVisibilityChange)\r\n\r\n    this.canvas = params.canvas\r\n    this.camera = Camera.init(this.canvas.width / this.canvas.height)\r\n\r\n    this.context = params.context\r\n    this.renderer = params.renderer\r\n    this.worldScene = params.worldScene\r\n    this.skyScene = params.skyScene\r\n\r\n    this.mode = PlayerMode.FREE\r\n\r\n    this.player = new ReplayPlayer(this)\r\n    this.events = createNanoEvents()\r\n\r\n    this.mapName = ''\r\n  }\r\n\r\n  getCanvas() {\r\n    return this.canvas\r\n  }\r\n\r\n  load(name: string) {\r\n    this.events.emit('loadstart')\r\n    this.loader.load(name)\r\n  }\r\n\r\n  changeMap(map: Bsp) {\r\n    if (this.mapName.toLowerCase() === map.name.toLowerCase()) {\r\n      return\r\n    }\r\n\r\n    this.mapName = map.name\r\n\r\n    this.worldScene.changeMap(map)\r\n    this.skyScene.changeMap(map)\r\n\r\n    this.entities = map.entities\r\n\r\n    const spawn = map.entities.find((e) => e.classname === 'info_player_start')\r\n\r\n    if (spawn) {\r\n      this.camera.position[0] = spawn.origin[0]\r\n      this.camera.position[1] = spawn.origin[1]\r\n      this.camera.position[2] = spawn.origin[2]\r\n    } else {\r\n      this.camera.position[0] = 0\r\n      this.camera.position[1] = 0\r\n      this.camera.position[2] = 0\r\n    }\r\n\r\n    this.camera.rotation[0] = 0 // Math.PI / 2\r\n    this.camera.rotation[1] = 0\r\n    this.camera.rotation[2] = 0\r\n  }\r\n\r\n  changeReplay(replay: Replay) {\r\n    this.events.emit('prereplaychange', this, replay)\r\n\r\n    this.player.changeReplay(replay)\r\n\r\n    this.events.emit('postreplaychange', this, replay)\r\n  }\r\n\r\n  changeMode(mode: PlayerMode) {\r\n    this.mode = mode\r\n    this.events.emit('modechange', mode)\r\n  }\r\n\r\n  setTitle(title: string) {\r\n    this.title = title\r\n    this.events.emit('titlechange', title)\r\n  }\r\n\r\n  getTitle() {\r\n    return this.title\r\n  }\r\n\r\n  onLoadAll = (loader: Loader) => {\r\n    if (loader?.replay) {\r\n      this.changeReplay(loader.replay.data)\r\n      this.changeMode(PlayerMode.REPLAY)\r\n    }\r\n\r\n    if (!loader.map || !loader.map.data) {\r\n      return\r\n    }\r\n\r\n    const map = loader.map.data\r\n    const skies = loader.skies\r\n    let skiesValid = true\r\n    for (const sky of skies) {\r\n      skiesValid = skiesValid && sky.isDone()\r\n    }\r\n    if (skiesValid) {\r\n      for (const sky of skies) {\r\n        if (sky.data) {\r\n          map.skies.push(sky.data)\r\n        }\r\n      }\r\n    }\r\n\r\n    // add sprites\r\n    for (const [name, item] of Object.entries(loader.sprites)) {\r\n      if (item.data) {\r\n        map.sprites[name] = item.data\r\n      }\r\n    }\r\n\r\n    if (loader.sounds.length > 0) {\r\n      for (const sound of loader.sounds) {\r\n        if (sound.data) {\r\n          this.sounds.push(sound.data)\r\n        }\r\n      }\r\n    }\r\n\r\n    this.changeMap(map)\r\n\r\n    this.events.emit('load', loader)\r\n  }\r\n\r\n  draw = () => {\r\n    requestAnimationFrame(this.draw)\r\n\r\n    const canvas = this.canvas\r\n    const parent = canvas.parentElement\r\n    if (parent) {\r\n      const pw = parent.clientWidth\r\n      const ph = parent.clientHeight\r\n      if (canvas.width !== pw || canvas.height !== ph) {\r\n        canvas.width = pw\r\n        canvas.height = ph\r\n        this.camera.aspect = canvas.clientWidth / canvas.clientHeight\r\n        this.camera.updateProjectionMatrix()\r\n        this.context.gl.viewport(0, 0, this.context.gl.drawingBufferWidth, this.context.gl.drawingBufferHeight)\r\n      }\r\n\r\n      if (canvas.clientWidth !== canvas.width || canvas.clientHeight !== canvas.height) {\r\n        canvas.width = canvas.clientWidth\r\n        canvas.height = canvas.clientHeight\r\n        this.camera.aspect = canvas.clientWidth / canvas.clientHeight\r\n        this.camera.updateProjectionMatrix()\r\n        this.context.gl.viewport(0, 0, this.context.gl.drawingBufferWidth, this.context.gl.drawingBufferHeight)\r\n      }\r\n    }\r\n\r\n    if (this.isPaused) {\r\n      return\r\n    }\r\n\r\n    const currTime = Time.now() / 1000\r\n    const dt = currTime - this.lastTime\r\n    this.accumTime += dt\r\n\r\n    while (this.accumTime > this.timeStep) {\r\n      this.update(this.timeStep)\r\n      this.accumTime -= this.timeStep\r\n    }\r\n\r\n    this.renderer.draw()\r\n    if (this.mapName !== '') {\r\n      this.skyScene.draw(this.camera)\r\n      this.worldScene.draw(this.camera, this.entities)\r\n    }\r\n\r\n    this.lastTime = currTime\r\n  }\r\n\r\n  update(dt: number) {\r\n    this.events.emit('preupdate', this)\r\n\r\n    const camera = this.camera\r\n    const keyboard = this.keyboard\r\n    const mouse = this.mouse\r\n    const touch = this.touch\r\n\r\n    if (this.mode === PlayerMode.REPLAY) {\r\n      this.player.update(dt)\r\n    } else if (this.mode === PlayerMode.FREE) {\r\n      if (this.touch.pressed) {\r\n        camera.rotation[0] = Math.min(Math.max(camera.rotation[0] + touch.delta[1] / 100, -Math.PI / 2), Math.PI / 2)\r\n        camera.rotation[1] -= touch.delta[0] / 100\r\n      } else {\r\n        camera.rotation[0] = Math.min(Math.max(camera.rotation[0] + mouse.delta[1] / 100, -Math.PI / 2), Math.PI / 2)\r\n        camera.rotation[1] -= mouse.delta[0] / 100\r\n      }\r\n\r\n      const speed = 500\r\n      const ds = speed * dt\r\n      const KEY_W = Keyboard.KEYS.W\r\n      const KEY_S = Keyboard.KEYS.S\r\n      const KEY_A = Keyboard.KEYS.A\r\n      const KEY_D = Keyboard.KEYS.D\r\n      const downKey = Keyboard.KEYS.C\r\n      const upKey = Keyboard.KEYS.SPACE\r\n      if (keyboard.keys[KEY_W] !== keyboard.keys[KEY_S]) {\r\n        if (keyboard.keys[KEY_W]) {\r\n          camera.position[1] -= Math.cos(camera.rotation[1] + Math.PI / 2) * ds\r\n          camera.position[0] += Math.sin(camera.rotation[1] + Math.PI / 2) * ds\r\n        } else if (keyboard.keys[KEY_S]) {\r\n          camera.position[1] -= Math.cos(camera.rotation[1] - Math.PI / 2) * ds\r\n          camera.position[0] += Math.sin(camera.rotation[1] - Math.PI / 2) * ds\r\n        }\r\n      }\r\n\r\n      if (keyboard.keys[KEY_A] !== keyboard.keys[KEY_D]) {\r\n        if (keyboard.keys[KEY_A]) {\r\n          camera.position[1] += Math.cos(camera.rotation[1]) * ds\r\n          camera.position[0] -= Math.sin(camera.rotation[1]) * ds\r\n        } else if (keyboard.keys[KEY_D]) {\r\n          camera.position[1] -= Math.cos(camera.rotation[1]) * ds\r\n          camera.position[0] += Math.sin(camera.rotation[1]) * ds\r\n        }\r\n      }\r\n\r\n      if (keyboard.keys[upKey] !== keyboard.keys[downKey]) {\r\n        if (keyboard.keys[upKey]) {\r\n          camera.position[2] += ds\r\n        } else if (keyboard.keys[downKey]) {\r\n          camera.position[2] -= ds\r\n        }\r\n      }\r\n    }\r\n\r\n    mouse.delta[0] = 0\r\n    mouse.delta[1] = 0\r\n\r\n    this.events.emit('postupdate', this)\r\n  }\r\n\r\n  onTouchStart = (e: TouchEvent) => {\r\n    const touch = e.touches.item(0)\r\n    if (touch) {\r\n      this.touch.pressed = true\r\n      this.touch.position[0] = touch.clientX\r\n      this.touch.position[1] = touch.clientY\r\n    }\r\n  }\r\n\r\n  onTouchEnd = () => {\r\n    this.touch.pressed = false\r\n    this.touch.delta[0] = 0\r\n    this.touch.delta[1] = 0\r\n  }\r\n\r\n  onTouchMove = (e: TouchEvent) => {\r\n    const touch = e.touches.item(0)\r\n    if (touch && this.touch.pressed) {\r\n      this.touch.delta[0]\r\n      this.touch.delta[0] = touch.clientX - this.touch.position[0]\r\n      this.touch.delta[1] = touch.clientY - this.touch.position[1]\r\n\r\n      this.touch.position[0] = touch.clientX\r\n      this.touch.position[1] = touch.clientY\r\n    }\r\n  }\r\n\r\n  onMouseMove = (e: MouseEvent) => {\r\n    if (this.pointerLocked) {\r\n      this.mouse.delta[0] = e.movementX * 0.5 // mul 0.5 to lower sensitivity\r\n      this.mouse.delta[1] = e.movementY * 0.5 //\r\n\r\n      this.mouse.position[0] = e.pageX\r\n      this.mouse.position[1] = e.pageY\r\n    }\r\n  }\r\n\r\n  keyDown = (e: KeyboardEvent) => {\r\n    this.keyboard.keys[e.which] = 1\r\n\r\n    if (this.pointerLocked) {\r\n      e.preventDefault()\r\n      return false\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  keyUp = (e: KeyboardEvent) => {\r\n    this.keyboard.keys[e.which] = 0\r\n\r\n    if (this.pointerLocked) {\r\n      e.preventDefault()\r\n      return false\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  onVisibilityChange = () => {\r\n    if (document.hidden) {\r\n      if (this.isPaused) {\r\n        return\r\n      }\r\n\r\n      this.pauseTime = Time.now() / 1000\r\n      this.isPaused = true\r\n    } else {\r\n      if (!this.isPaused) {\r\n        return\r\n      }\r\n\r\n      this.lastTime = Time.now() / 1000 - this.pauseTime + this.lastTime\r\n      this.isPaused = false\r\n    }\r\n  }\r\n}\r\n","type ConfigPaths = {\n  base: string\n  replays: string\n  maps: string\n  wads: string\n  skies: string\n  sounds: string\n}\n\nexport class Config {\n  public static init(params: any): Config {\n    if (typeof params === 'string') {\n      return new Config({\n        paths: {\n          base: params,\n          replays: `${params}/replays`,\n          maps: `${params}/maps`,\n          wads: `${params}/wads`,\n          skies: `${params}/skies`,\n          sounds: `${params}/sounds`\n        }\n      })\n    }\n\n    return new Config({\n      paths: {\n        base: (params?.paths?.base) || '',\n        replays: (params?.paths?.replays) || '/replays',\n        maps: (params?.paths?.maps) || '/maps',\n        wads: (params?.paths?.wads) || '/wads',\n        skies: (params?.paths?.skies) || '/skies',\n        sounds: (params?.paths?.sounds) || '/sounds'\n      }\n    })\n  }\n\n  private paths: ConfigPaths\n\n  constructor(params: { paths: ConfigPaths }) {\n    this.paths = { ...params.paths }\n  }\n\n  getBasePath() {\n    return this.paths.base\n  }\n  getReplaysPath() {\n    return this.paths.replays\n  }\n  getMapsPath() {\n    return this.paths.maps\n  }\n  getWadsPath() {\n    return this.paths.wads\n  }\n  getSkiesPath() {\n    return this.paths.skies\n  }\n  getSoundsPath() {\n    return this.paths.sounds\n  }\n}\n","let taskIdCounter = 1,\n  isCallbackScheduled = false,\n  isPerformingWork = false,\n  taskQueue = [],\n  currentTask = null,\n  shouldYieldToHost = null,\n  yieldInterval = 5,\n  deadline = 0,\n  maxYieldInterval = 300,\n  scheduleCallback = null,\n  scheduledCallback = null;\nconst maxSigned31BitInt = 1073741823;\nfunction setupScheduler() {\n  const channel = new MessageChannel(),\n    port = channel.port2;\n  scheduleCallback = () => port.postMessage(null);\n  channel.port1.onmessage = () => {\n    if (scheduledCallback !== null) {\n      const currentTime = performance.now();\n      deadline = currentTime + yieldInterval;\n      const hasTimeRemaining = true;\n      try {\n        const hasMoreWork = scheduledCallback(hasTimeRemaining, currentTime);\n        if (!hasMoreWork) {\n          scheduledCallback = null;\n        } else port.postMessage(null);\n      } catch (error) {\n        port.postMessage(null);\n        throw error;\n      }\n    }\n  };\n  if (navigator && navigator.scheduling && navigator.scheduling.isInputPending) {\n    const scheduling = navigator.scheduling;\n    shouldYieldToHost = () => {\n      const currentTime = performance.now();\n      if (currentTime >= deadline) {\n        if (scheduling.isInputPending()) {\n          return true;\n        }\n        return currentTime >= maxYieldInterval;\n      } else {\n        return false;\n      }\n    };\n  } else {\n    shouldYieldToHost = () => performance.now() >= deadline;\n  }\n}\nfunction enqueue(taskQueue, task) {\n  function findIndex() {\n    let m = 0;\n    let n = taskQueue.length - 1;\n    while (m <= n) {\n      const k = n + m >> 1;\n      const cmp = task.expirationTime - taskQueue[k].expirationTime;\n      if (cmp > 0) m = k + 1;else if (cmp < 0) n = k - 1;else return k;\n    }\n    return m;\n  }\n  taskQueue.splice(findIndex(), 0, task);\n}\nfunction requestCallback(fn, options) {\n  if (!scheduleCallback) setupScheduler();\n  let startTime = performance.now(),\n    timeout = maxSigned31BitInt;\n  if (options && options.timeout) timeout = options.timeout;\n  const newTask = {\n    id: taskIdCounter++,\n    fn,\n    startTime,\n    expirationTime: startTime + timeout\n  };\n  enqueue(taskQueue, newTask);\n  if (!isCallbackScheduled && !isPerformingWork) {\n    isCallbackScheduled = true;\n    scheduledCallback = flushWork;\n    scheduleCallback();\n  }\n  return newTask;\n}\nfunction cancelCallback(task) {\n  task.fn = null;\n}\nfunction flushWork(hasTimeRemaining, initialTime) {\n  isCallbackScheduled = false;\n  isPerformingWork = true;\n  try {\n    return workLoop(hasTimeRemaining, initialTime);\n  } finally {\n    currentTask = null;\n    isPerformingWork = false;\n  }\n}\nfunction workLoop(hasTimeRemaining, initialTime) {\n  let currentTime = initialTime;\n  currentTask = taskQueue[0] || null;\n  while (currentTask !== null) {\n    if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {\n      break;\n    }\n    const callback = currentTask.fn;\n    if (callback !== null) {\n      currentTask.fn = null;\n      const didUserCallbackTimeout = currentTask.expirationTime <= currentTime;\n      callback(didUserCallbackTimeout);\n      currentTime = performance.now();\n      if (currentTask === taskQueue[0]) {\n        taskQueue.shift();\n      }\n    } else taskQueue.shift();\n    currentTask = taskQueue[0] || null;\n  }\n  return currentTask !== null;\n}\n\nconst sharedConfig = {\n  context: undefined,\n  registry: undefined,\n  effects: undefined,\n  done: false,\n  getContextId() {\n    return getContextId(this.context.count);\n  },\n  getNextContextId() {\n    return getContextId(this.context.count++);\n  }\n};\nfunction getContextId(count) {\n  const num = String(count),\n    len = num.length - 1;\n  return sharedConfig.context.id + (len ? String.fromCharCode(96 + len) : \"\") + num;\n}\nfunction setHydrateContext(context) {\n  sharedConfig.context = context;\n}\nfunction nextHydrateContext() {\n  return {\n    ...sharedConfig.context,\n    id: sharedConfig.getNextContextId(),\n    count: 0\n  };\n}\n\nconst equalFn = (a, b) => a === b;\nconst $PROXY = Symbol(\"solid-proxy\");\nconst $TRACK = Symbol(\"solid-track\");\nconst $DEVCOMP = Symbol(\"solid-dev-component\");\nconst signalOptions = {\n  equals: equalFn\n};\nlet ERROR = null;\nlet runEffects = runQueue;\nconst STALE = 1;\nconst PENDING = 2;\nconst UNOWNED = {\n  owned: null,\n  cleanups: null,\n  context: null,\n  owner: null\n};\nconst NO_INIT = {};\nvar Owner = null;\nlet Transition = null;\nlet Scheduler = null;\nlet ExternalSourceConfig = null;\nlet Listener = null;\nlet Updates = null;\nlet Effects = null;\nlet ExecCount = 0;\nfunction createRoot(fn, detachedOwner) {\n  const listener = Listener,\n    owner = Owner,\n    unowned = fn.length === 0,\n    current = detachedOwner === undefined ? owner : detachedOwner,\n    root = unowned ? UNOWNED : {\n      owned: null,\n      cleanups: null,\n      context: current ? current.context : null,\n      owner: current\n    },\n    updateFn = unowned ? fn : () => fn(() => untrack(() => cleanNode(root)));\n  Owner = root;\n  Listener = null;\n  try {\n    return runUpdates(updateFn, true);\n  } finally {\n    Listener = listener;\n    Owner = owner;\n  }\n}\nfunction createSignal(value, options) {\n  options = options ? Object.assign({}, signalOptions, options) : signalOptions;\n  const s = {\n    value,\n    observers: null,\n    observerSlots: null,\n    comparator: options.equals || undefined\n  };\n  const setter = value => {\n    if (typeof value === \"function\") {\n      if (Transition && Transition.running && Transition.sources.has(s)) value = value(s.tValue);else value = value(s.value);\n    }\n    return writeSignal(s, value);\n  };\n  return [readSignal.bind(s), setter];\n}\nfunction createComputed(fn, value, options) {\n  const c = createComputation(fn, value, true, STALE);\n  if (Scheduler && Transition && Transition.running) Updates.push(c);else updateComputation(c);\n}\nfunction createRenderEffect(fn, value, options) {\n  const c = createComputation(fn, value, false, STALE);\n  if (Scheduler && Transition && Transition.running) Updates.push(c);else updateComputation(c);\n}\nfunction createEffect(fn, value, options) {\n  runEffects = runUserEffects;\n  const c = createComputation(fn, value, false, STALE),\n    s = SuspenseContext && useContext(SuspenseContext);\n  if (s) c.suspense = s;\n  if (!options || !options.render) c.user = true;\n  Effects ? Effects.push(c) : updateComputation(c);\n}\nfunction createReaction(onInvalidate, options) {\n  let fn;\n  const c = createComputation(() => {\n      fn ? fn() : untrack(onInvalidate);\n      fn = undefined;\n    }, undefined, false, 0),\n    s = SuspenseContext && useContext(SuspenseContext);\n  if (s) c.suspense = s;\n  c.user = true;\n  return tracking => {\n    fn = tracking;\n    updateComputation(c);\n  };\n}\nfunction createMemo(fn, value, options) {\n  options = options ? Object.assign({}, signalOptions, options) : signalOptions;\n  const c = createComputation(fn, value, true, 0);\n  c.observers = null;\n  c.observerSlots = null;\n  c.comparator = options.equals || undefined;\n  if (Scheduler && Transition && Transition.running) {\n    c.tState = STALE;\n    Updates.push(c);\n  } else updateComputation(c);\n  return readSignal.bind(c);\n}\nfunction isPromise(v) {\n  return v && typeof v === \"object\" && \"then\" in v;\n}\nfunction createResource(pSource, pFetcher, pOptions) {\n  let source;\n  let fetcher;\n  let options;\n  if (arguments.length === 2 && typeof pFetcher === \"object\" || arguments.length === 1) {\n    source = true;\n    fetcher = pSource;\n    options = pFetcher || {};\n  } else {\n    source = pSource;\n    fetcher = pFetcher;\n    options = pOptions || {};\n  }\n  let pr = null,\n    initP = NO_INIT,\n    id = null,\n    loadedUnderTransition = false,\n    scheduled = false,\n    resolved = (\"initialValue\" in options),\n    dynamic = typeof source === \"function\" && createMemo(source);\n  const contexts = new Set(),\n    [value, setValue] = (options.storage || createSignal)(options.initialValue),\n    [error, setError] = createSignal(undefined),\n    [track, trigger] = createSignal(undefined, {\n      equals: false\n    }),\n    [state, setState] = createSignal(resolved ? \"ready\" : \"unresolved\");\n  if (sharedConfig.context) {\n    id = sharedConfig.getNextContextId();\n    if (options.ssrLoadFrom === \"initial\") initP = options.initialValue;else if (sharedConfig.load && sharedConfig.has(id)) initP = sharedConfig.load(id);\n  }\n  function loadEnd(p, v, error, key) {\n    if (pr === p) {\n      pr = null;\n      key !== undefined && (resolved = true);\n      if ((p === initP || v === initP) && options.onHydrated) queueMicrotask(() => options.onHydrated(key, {\n        value: v\n      }));\n      initP = NO_INIT;\n      if (Transition && p && loadedUnderTransition) {\n        Transition.promises.delete(p);\n        loadedUnderTransition = false;\n        runUpdates(() => {\n          Transition.running = true;\n          completeLoad(v, error);\n        }, false);\n      } else completeLoad(v, error);\n    }\n    return v;\n  }\n  function completeLoad(v, err) {\n    runUpdates(() => {\n      if (err === undefined) setValue(() => v);\n      setState(err !== undefined ? \"errored\" : resolved ? \"ready\" : \"unresolved\");\n      setError(err);\n      for (const c of contexts.keys()) c.decrement();\n      contexts.clear();\n    }, false);\n  }\n  function read() {\n    const c = SuspenseContext && useContext(SuspenseContext),\n      v = value(),\n      err = error();\n    if (err !== undefined && !pr) throw err;\n    if (Listener && !Listener.user && c) {\n      createComputed(() => {\n        track();\n        if (pr) {\n          if (c.resolved && Transition && loadedUnderTransition) Transition.promises.add(pr);else if (!contexts.has(c)) {\n            c.increment();\n            contexts.add(c);\n          }\n        }\n      });\n    }\n    return v;\n  }\n  function load(refetching = true) {\n    if (refetching !== false && scheduled) return;\n    scheduled = false;\n    const lookup = dynamic ? dynamic() : source;\n    loadedUnderTransition = Transition && Transition.running;\n    if (lookup == null || lookup === false) {\n      loadEnd(pr, untrack(value));\n      return;\n    }\n    if (Transition && pr) Transition.promises.delete(pr);\n    const p = initP !== NO_INIT ? initP : untrack(() => fetcher(lookup, {\n      value: value(),\n      refetching\n    }));\n    if (!isPromise(p)) {\n      loadEnd(pr, p, undefined, lookup);\n      return p;\n    }\n    pr = p;\n    if (\"value\" in p) {\n      if (p.status === \"success\") loadEnd(pr, p.value, undefined, lookup);else loadEnd(pr, undefined, castError(p.value), lookup);\n      return p;\n    }\n    scheduled = true;\n    queueMicrotask(() => scheduled = false);\n    runUpdates(() => {\n      setState(resolved ? \"refreshing\" : \"pending\");\n      trigger();\n    }, false);\n    return p.then(v => loadEnd(p, v, undefined, lookup), e => loadEnd(p, undefined, castError(e), lookup));\n  }\n  Object.defineProperties(read, {\n    state: {\n      get: () => state()\n    },\n    error: {\n      get: () => error()\n    },\n    loading: {\n      get() {\n        const s = state();\n        return s === \"pending\" || s === \"refreshing\";\n      }\n    },\n    latest: {\n      get() {\n        if (!resolved) return read();\n        const err = error();\n        if (err && !pr) throw err;\n        return value();\n      }\n    }\n  });\n  if (dynamic) createComputed(() => load(false));else load(false);\n  return [read, {\n    refetch: load,\n    mutate: setValue\n  }];\n}\nfunction createDeferred(source, options) {\n  let t,\n    timeout = options ? options.timeoutMs : undefined;\n  const node = createComputation(() => {\n    if (!t || !t.fn) t = requestCallback(() => setDeferred(() => node.value), timeout !== undefined ? {\n      timeout\n    } : undefined);\n    return source();\n  }, undefined, true);\n  const [deferred, setDeferred] = createSignal(Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value, options);\n  updateComputation(node);\n  setDeferred(() => Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value);\n  return deferred;\n}\nfunction createSelector(source, fn = equalFn, options) {\n  const subs = new Map();\n  const node = createComputation(p => {\n    const v = source();\n    for (const [key, val] of subs.entries()) if (fn(key, v) !== fn(key, p)) {\n      for (const c of val.values()) {\n        c.state = STALE;\n        if (c.pure) Updates.push(c);else Effects.push(c);\n      }\n    }\n    return v;\n  }, undefined, true, STALE);\n  updateComputation(node);\n  return key => {\n    const listener = Listener;\n    if (listener) {\n      let l;\n      if (l = subs.get(key)) l.add(listener);else subs.set(key, l = new Set([listener]));\n      onCleanup(() => {\n        l.delete(listener);\n        !l.size && subs.delete(key);\n      });\n    }\n    return fn(key, Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value);\n  };\n}\nfunction batch(fn) {\n  return runUpdates(fn, false);\n}\nfunction untrack(fn) {\n  if (!ExternalSourceConfig && Listener === null) return fn();\n  const listener = Listener;\n  Listener = null;\n  try {\n    if (ExternalSourceConfig) return ExternalSourceConfig.untrack(fn);\n    return fn();\n  } finally {\n    Listener = listener;\n  }\n}\nfunction on(deps, fn, options) {\n  const isArray = Array.isArray(deps);\n  let prevInput;\n  let defer = options && options.defer;\n  return prevValue => {\n    let input;\n    if (isArray) {\n      input = Array(deps.length);\n      for (let i = 0; i < deps.length; i++) input[i] = deps[i]();\n    } else input = deps();\n    if (defer) {\n      defer = false;\n      return prevValue;\n    }\n    const result = untrack(() => fn(input, prevInput, prevValue));\n    prevInput = input;\n    return result;\n  };\n}\nfunction onMount(fn) {\n  createEffect(() => untrack(fn));\n}\nfunction onCleanup(fn) {\n  if (Owner === null) ;else if (Owner.cleanups === null) Owner.cleanups = [fn];else Owner.cleanups.push(fn);\n  return fn;\n}\nfunction catchError(fn, handler) {\n  ERROR || (ERROR = Symbol(\"error\"));\n  Owner = createComputation(undefined, undefined, true);\n  Owner.context = {\n    ...Owner.context,\n    [ERROR]: [handler]\n  };\n  if (Transition && Transition.running) Transition.sources.add(Owner);\n  try {\n    return fn();\n  } catch (err) {\n    handleError(err);\n  } finally {\n    Owner = Owner.owner;\n  }\n}\nfunction getListener() {\n  return Listener;\n}\nfunction getOwner() {\n  return Owner;\n}\nfunction runWithOwner(o, fn) {\n  const prev = Owner;\n  const prevListener = Listener;\n  Owner = o;\n  Listener = null;\n  try {\n    return runUpdates(fn, true);\n  } catch (err) {\n    handleError(err);\n  } finally {\n    Owner = prev;\n    Listener = prevListener;\n  }\n}\nfunction enableScheduling(scheduler = requestCallback) {\n  Scheduler = scheduler;\n}\nfunction startTransition(fn) {\n  if (Transition && Transition.running) {\n    fn();\n    return Transition.done;\n  }\n  const l = Listener;\n  const o = Owner;\n  return Promise.resolve().then(() => {\n    Listener = l;\n    Owner = o;\n    let t;\n    if (Scheduler || SuspenseContext) {\n      t = Transition || (Transition = {\n        sources: new Set(),\n        effects: [],\n        promises: new Set(),\n        disposed: new Set(),\n        queue: new Set(),\n        running: true\n      });\n      t.done || (t.done = new Promise(res => t.resolve = res));\n      t.running = true;\n    }\n    runUpdates(fn, false);\n    Listener = Owner = null;\n    return t ? t.done : undefined;\n  });\n}\nconst [transPending, setTransPending] = /*@__PURE__*/createSignal(false);\nfunction useTransition() {\n  return [transPending, startTransition];\n}\nfunction resumeEffects(e) {\n  Effects.push.apply(Effects, e);\n  e.length = 0;\n}\nfunction createContext(defaultValue, options) {\n  const id = Symbol(\"context\");\n  return {\n    id,\n    Provider: createProvider(id),\n    defaultValue\n  };\n}\nfunction useContext(context) {\n  let value;\n  return Owner && Owner.context && (value = Owner.context[context.id]) !== undefined ? value : context.defaultValue;\n}\nfunction children(fn) {\n  const children = createMemo(fn);\n  const memo = createMemo(() => resolveChildren(children()));\n  memo.toArray = () => {\n    const c = memo();\n    return Array.isArray(c) ? c : c != null ? [c] : [];\n  };\n  return memo;\n}\nlet SuspenseContext;\nfunction getSuspenseContext() {\n  return SuspenseContext || (SuspenseContext = createContext());\n}\nfunction enableExternalSource(factory, untrack = fn => fn()) {\n  if (ExternalSourceConfig) {\n    const {\n      factory: oldFactory,\n      untrack: oldUntrack\n    } = ExternalSourceConfig;\n    ExternalSourceConfig = {\n      factory: (fn, trigger) => {\n        const oldSource = oldFactory(fn, trigger);\n        const source = factory(x => oldSource.track(x), trigger);\n        return {\n          track: x => source.track(x),\n          dispose() {\n            source.dispose();\n            oldSource.dispose();\n          }\n        };\n      },\n      untrack: fn => oldUntrack(() => untrack(fn))\n    };\n  } else {\n    ExternalSourceConfig = {\n      factory,\n      untrack\n    };\n  }\n}\nfunction readSignal() {\n  const runningTransition = Transition && Transition.running;\n  if (this.sources && (runningTransition ? this.tState : this.state)) {\n    if ((runningTransition ? this.tState : this.state) === STALE) updateComputation(this);else {\n      const updates = Updates;\n      Updates = null;\n      runUpdates(() => lookUpstream(this), false);\n      Updates = updates;\n    }\n  }\n  if (Listener) {\n    const sSlot = this.observers ? this.observers.length : 0;\n    if (!Listener.sources) {\n      Listener.sources = [this];\n      Listener.sourceSlots = [sSlot];\n    } else {\n      Listener.sources.push(this);\n      Listener.sourceSlots.push(sSlot);\n    }\n    if (!this.observers) {\n      this.observers = [Listener];\n      this.observerSlots = [Listener.sources.length - 1];\n    } else {\n      this.observers.push(Listener);\n      this.observerSlots.push(Listener.sources.length - 1);\n    }\n  }\n  if (runningTransition && Transition.sources.has(this)) return this.tValue;\n  return this.value;\n}\nfunction writeSignal(node, value, isComp) {\n  let current = Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value;\n  if (!node.comparator || !node.comparator(current, value)) {\n    if (Transition) {\n      const TransitionRunning = Transition.running;\n      if (TransitionRunning || !isComp && Transition.sources.has(node)) {\n        Transition.sources.add(node);\n        node.tValue = value;\n      }\n      if (!TransitionRunning) node.value = value;\n    } else node.value = value;\n    if (node.observers && node.observers.length) {\n      runUpdates(() => {\n        for (let i = 0; i < node.observers.length; i += 1) {\n          const o = node.observers[i];\n          const TransitionRunning = Transition && Transition.running;\n          if (TransitionRunning && Transition.disposed.has(o)) continue;\n          if (TransitionRunning ? !o.tState : !o.state) {\n            if (o.pure) Updates.push(o);else Effects.push(o);\n            if (o.observers) markDownstream(o);\n          }\n          if (!TransitionRunning) o.state = STALE;else o.tState = STALE;\n        }\n        if (Updates.length > 10e5) {\n          Updates = [];\n          if (false) ;\n          throw new Error();\n        }\n      }, false);\n    }\n  }\n  return value;\n}\nfunction updateComputation(node) {\n  if (!node.fn) return;\n  cleanNode(node);\n  const time = ExecCount;\n  runComputation(node, Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value, time);\n  if (Transition && !Transition.running && Transition.sources.has(node)) {\n    queueMicrotask(() => {\n      runUpdates(() => {\n        Transition && (Transition.running = true);\n        Listener = Owner = node;\n        runComputation(node, node.tValue, time);\n        Listener = Owner = null;\n      }, false);\n    });\n  }\n}\nfunction runComputation(node, value, time) {\n  let nextValue;\n  const owner = Owner,\n    listener = Listener;\n  Listener = Owner = node;\n  try {\n    nextValue = node.fn(value);\n  } catch (err) {\n    if (node.pure) {\n      if (Transition && Transition.running) {\n        node.tState = STALE;\n        node.tOwned && node.tOwned.forEach(cleanNode);\n        node.tOwned = undefined;\n      } else {\n        node.state = STALE;\n        node.owned && node.owned.forEach(cleanNode);\n        node.owned = null;\n      }\n    }\n    node.updatedAt = time + 1;\n    return handleError(err);\n  } finally {\n    Listener = listener;\n    Owner = owner;\n  }\n  if (!node.updatedAt || node.updatedAt <= time) {\n    if (node.updatedAt != null && \"observers\" in node) {\n      writeSignal(node, nextValue, true);\n    } else if (Transition && Transition.running && node.pure) {\n      Transition.sources.add(node);\n      node.tValue = nextValue;\n    } else node.value = nextValue;\n    node.updatedAt = time;\n  }\n}\nfunction createComputation(fn, init, pure, state = STALE, options) {\n  const c = {\n    fn,\n    state: state,\n    updatedAt: null,\n    owned: null,\n    sources: null,\n    sourceSlots: null,\n    cleanups: null,\n    value: init,\n    owner: Owner,\n    context: Owner ? Owner.context : null,\n    pure\n  };\n  if (Transition && Transition.running) {\n    c.state = 0;\n    c.tState = state;\n  }\n  if (Owner === null) ;else if (Owner !== UNOWNED) {\n    if (Transition && Transition.running && Owner.pure) {\n      if (!Owner.tOwned) Owner.tOwned = [c];else Owner.tOwned.push(c);\n    } else {\n      if (!Owner.owned) Owner.owned = [c];else Owner.owned.push(c);\n    }\n  }\n  if (ExternalSourceConfig && c.fn) {\n    const [track, trigger] = createSignal(undefined, {\n      equals: false\n    });\n    const ordinary = ExternalSourceConfig.factory(c.fn, trigger);\n    onCleanup(() => ordinary.dispose());\n    const triggerInTransition = () => startTransition(trigger).then(() => inTransition.dispose());\n    const inTransition = ExternalSourceConfig.factory(c.fn, triggerInTransition);\n    c.fn = x => {\n      track();\n      return Transition && Transition.running ? inTransition.track(x) : ordinary.track(x);\n    };\n  }\n  return c;\n}\nfunction runTop(node) {\n  const runningTransition = Transition && Transition.running;\n  if ((runningTransition ? node.tState : node.state) === 0) return;\n  if ((runningTransition ? node.tState : node.state) === PENDING) return lookUpstream(node);\n  if (node.suspense && untrack(node.suspense.inFallback)) return node.suspense.effects.push(node);\n  const ancestors = [node];\n  while ((node = node.owner) && (!node.updatedAt || node.updatedAt < ExecCount)) {\n    if (runningTransition && Transition.disposed.has(node)) return;\n    if (runningTransition ? node.tState : node.state) ancestors.push(node);\n  }\n  for (let i = ancestors.length - 1; i >= 0; i--) {\n    node = ancestors[i];\n    if (runningTransition) {\n      let top = node,\n        prev = ancestors[i + 1];\n      while ((top = top.owner) && top !== prev) {\n        if (Transition.disposed.has(top)) return;\n      }\n    }\n    if ((runningTransition ? node.tState : node.state) === STALE) {\n      updateComputation(node);\n    } else if ((runningTransition ? node.tState : node.state) === PENDING) {\n      const updates = Updates;\n      Updates = null;\n      runUpdates(() => lookUpstream(node, ancestors[0]), false);\n      Updates = updates;\n    }\n  }\n}\nfunction runUpdates(fn, init) {\n  if (Updates) return fn();\n  let wait = false;\n  if (!init) Updates = [];\n  if (Effects) wait = true;else Effects = [];\n  ExecCount++;\n  try {\n    const res = fn();\n    completeUpdates(wait);\n    return res;\n  } catch (err) {\n    if (!wait) Effects = null;\n    Updates = null;\n    handleError(err);\n  }\n}\nfunction completeUpdates(wait) {\n  if (Updates) {\n    if (Scheduler && Transition && Transition.running) scheduleQueue(Updates);else runQueue(Updates);\n    Updates = null;\n  }\n  if (wait) return;\n  let res;\n  if (Transition) {\n    if (!Transition.promises.size && !Transition.queue.size) {\n      const sources = Transition.sources;\n      const disposed = Transition.disposed;\n      Effects.push.apply(Effects, Transition.effects);\n      res = Transition.resolve;\n      for (const e of Effects) {\n        \"tState\" in e && (e.state = e.tState);\n        delete e.tState;\n      }\n      Transition = null;\n      runUpdates(() => {\n        for (const d of disposed) cleanNode(d);\n        for (const v of sources) {\n          v.value = v.tValue;\n          if (v.owned) {\n            for (let i = 0, len = v.owned.length; i < len; i++) cleanNode(v.owned[i]);\n          }\n          if (v.tOwned) v.owned = v.tOwned;\n          delete v.tValue;\n          delete v.tOwned;\n          v.tState = 0;\n        }\n        setTransPending(false);\n      }, false);\n    } else if (Transition.running) {\n      Transition.running = false;\n      Transition.effects.push.apply(Transition.effects, Effects);\n      Effects = null;\n      setTransPending(true);\n      return;\n    }\n  }\n  const e = Effects;\n  Effects = null;\n  if (e.length) runUpdates(() => runEffects(e), false);\n  if (res) res();\n}\nfunction runQueue(queue) {\n  for (let i = 0; i < queue.length; i++) runTop(queue[i]);\n}\nfunction scheduleQueue(queue) {\n  for (let i = 0; i < queue.length; i++) {\n    const item = queue[i];\n    const tasks = Transition.queue;\n    if (!tasks.has(item)) {\n      tasks.add(item);\n      Scheduler(() => {\n        tasks.delete(item);\n        runUpdates(() => {\n          Transition.running = true;\n          runTop(item);\n        }, false);\n        Transition && (Transition.running = false);\n      });\n    }\n  }\n}\nfunction runUserEffects(queue) {\n  let i,\n    userLength = 0;\n  for (i = 0; i < queue.length; i++) {\n    const e = queue[i];\n    if (!e.user) runTop(e);else queue[userLength++] = e;\n  }\n  if (sharedConfig.context) {\n    if (sharedConfig.count) {\n      sharedConfig.effects || (sharedConfig.effects = []);\n      sharedConfig.effects.push(...queue.slice(0, userLength));\n      return;\n    }\n    setHydrateContext();\n  }\n  if (sharedConfig.effects && (sharedConfig.done || !sharedConfig.count)) {\n    queue = [...sharedConfig.effects, ...queue];\n    userLength += sharedConfig.effects.length;\n    delete sharedConfig.effects;\n  }\n  for (i = 0; i < userLength; i++) runTop(queue[i]);\n}\nfunction lookUpstream(node, ignore) {\n  const runningTransition = Transition && Transition.running;\n  if (runningTransition) node.tState = 0;else node.state = 0;\n  for (let i = 0; i < node.sources.length; i += 1) {\n    const source = node.sources[i];\n    if (source.sources) {\n      const state = runningTransition ? source.tState : source.state;\n      if (state === STALE) {\n        if (source !== ignore && (!source.updatedAt || source.updatedAt < ExecCount)) runTop(source);\n      } else if (state === PENDING) lookUpstream(source, ignore);\n    }\n  }\n}\nfunction markDownstream(node) {\n  const runningTransition = Transition && Transition.running;\n  for (let i = 0; i < node.observers.length; i += 1) {\n    const o = node.observers[i];\n    if (runningTransition ? !o.tState : !o.state) {\n      if (runningTransition) o.tState = PENDING;else o.state = PENDING;\n      if (o.pure) Updates.push(o);else Effects.push(o);\n      o.observers && markDownstream(o);\n    }\n  }\n}\nfunction cleanNode(node) {\n  let i;\n  if (node.sources) {\n    while (node.sources.length) {\n      const source = node.sources.pop(),\n        index = node.sourceSlots.pop(),\n        obs = source.observers;\n      if (obs && obs.length) {\n        const n = obs.pop(),\n          s = source.observerSlots.pop();\n        if (index < obs.length) {\n          n.sourceSlots[s] = index;\n          obs[index] = n;\n          source.observerSlots[index] = s;\n        }\n      }\n    }\n  }\n  if (Transition && Transition.running && node.pure) {\n    if (node.tOwned) {\n      for (i = node.tOwned.length - 1; i >= 0; i--) cleanNode(node.tOwned[i]);\n      delete node.tOwned;\n    }\n    reset(node, true);\n  } else if (node.owned) {\n    for (i = node.owned.length - 1; i >= 0; i--) cleanNode(node.owned[i]);\n    node.owned = null;\n  }\n  if (node.cleanups) {\n    for (i = node.cleanups.length - 1; i >= 0; i--) node.cleanups[i]();\n    node.cleanups = null;\n  }\n  if (Transition && Transition.running) node.tState = 0;else node.state = 0;\n}\nfunction reset(node, top) {\n  if (!top) {\n    node.tState = 0;\n    Transition.disposed.add(node);\n  }\n  if (node.owned) {\n    for (let i = 0; i < node.owned.length; i++) reset(node.owned[i]);\n  }\n}\nfunction castError(err) {\n  if (err instanceof Error) return err;\n  return new Error(typeof err === \"string\" ? err : \"Unknown error\", {\n    cause: err\n  });\n}\nfunction runErrors(err, fns, owner) {\n  try {\n    for (const f of fns) f(err);\n  } catch (e) {\n    handleError(e, owner && owner.owner || null);\n  }\n}\nfunction handleError(err, owner = Owner) {\n  const fns = ERROR && owner && owner.context && owner.context[ERROR];\n  const error = castError(err);\n  if (!fns) throw error;\n  if (Effects) Effects.push({\n    fn() {\n      runErrors(error, fns, owner);\n    },\n    state: STALE\n  });else runErrors(error, fns, owner);\n}\nfunction resolveChildren(children) {\n  if (typeof children === \"function\" && !children.length) return resolveChildren(children());\n  if (Array.isArray(children)) {\n    const results = [];\n    for (let i = 0; i < children.length; i++) {\n      const result = resolveChildren(children[i]);\n      Array.isArray(result) ? results.push.apply(results, result) : results.push(result);\n    }\n    return results;\n  }\n  return children;\n}\nfunction createProvider(id, options) {\n  return function provider(props) {\n    let res;\n    createRenderEffect(() => res = untrack(() => {\n      Owner.context = {\n        ...Owner.context,\n        [id]: props.value\n      };\n      return children(() => props.children);\n    }), undefined);\n    return res;\n  };\n}\nfunction onError(fn) {\n  ERROR || (ERROR = Symbol(\"error\"));\n  if (Owner === null) ;else if (Owner.context === null || !Owner.context[ERROR]) {\n    Owner.context = {\n      ...Owner.context,\n      [ERROR]: [fn]\n    };\n    mutateContext(Owner, ERROR, [fn]);\n  } else Owner.context[ERROR].push(fn);\n}\nfunction mutateContext(o, key, value) {\n  if (o.owned) {\n    for (let i = 0; i < o.owned.length; i++) {\n      if (o.owned[i].context === o.context) mutateContext(o.owned[i], key, value);\n      if (!o.owned[i].context) {\n        o.owned[i].context = o.context;\n        mutateContext(o.owned[i], key, value);\n      } else if (!o.owned[i].context[key]) {\n        o.owned[i].context[key] = value;\n        mutateContext(o.owned[i], key, value);\n      }\n    }\n  }\n}\n\nfunction observable(input) {\n  return {\n    subscribe(observer) {\n      if (!(observer instanceof Object) || observer == null) {\n        throw new TypeError(\"Expected the observer to be an object.\");\n      }\n      const handler = typeof observer === \"function\" ? observer : observer.next && observer.next.bind(observer);\n      if (!handler) {\n        return {\n          unsubscribe() {}\n        };\n      }\n      const dispose = createRoot(disposer => {\n        createEffect(() => {\n          const v = input();\n          untrack(() => handler(v));\n        });\n        return disposer;\n      });\n      if (getOwner()) onCleanup(dispose);\n      return {\n        unsubscribe() {\n          dispose();\n        }\n      };\n    },\n    [Symbol.observable || \"@@observable\"]() {\n      return this;\n    }\n  };\n}\nfunction from(producer) {\n  const [s, set] = createSignal(undefined, {\n    equals: false\n  });\n  if (\"subscribe\" in producer) {\n    const unsub = producer.subscribe(v => set(() => v));\n    onCleanup(() => \"unsubscribe\" in unsub ? unsub.unsubscribe() : unsub());\n  } else {\n    const clean = producer(set);\n    onCleanup(clean);\n  }\n  return s;\n}\n\nconst FALLBACK = Symbol(\"fallback\");\nfunction dispose(d) {\n  for (let i = 0; i < d.length; i++) d[i]();\n}\nfunction mapArray(list, mapFn, options = {}) {\n  let items = [],\n    mapped = [],\n    disposers = [],\n    len = 0,\n    indexes = mapFn.length > 1 ? [] : null;\n  onCleanup(() => dispose(disposers));\n  return () => {\n    let newItems = list() || [],\n      newLen = newItems.length,\n      i,\n      j;\n    newItems[$TRACK];\n    return untrack(() => {\n      let newIndices, newIndicesNext, temp, tempdisposers, tempIndexes, start, end, newEnd, item;\n      if (newLen === 0) {\n        if (len !== 0) {\n          dispose(disposers);\n          disposers = [];\n          items = [];\n          mapped = [];\n          len = 0;\n          indexes && (indexes = []);\n        }\n        if (options.fallback) {\n          items = [FALLBACK];\n          mapped[0] = createRoot(disposer => {\n            disposers[0] = disposer;\n            return options.fallback();\n          });\n          len = 1;\n        }\n      }\n      else if (len === 0) {\n        mapped = new Array(newLen);\n        for (j = 0; j < newLen; j++) {\n          items[j] = newItems[j];\n          mapped[j] = createRoot(mapper);\n        }\n        len = newLen;\n      } else {\n        temp = new Array(newLen);\n        tempdisposers = new Array(newLen);\n        indexes && (tempIndexes = new Array(newLen));\n        for (start = 0, end = Math.min(len, newLen); start < end && items[start] === newItems[start]; start++);\n        for (end = len - 1, newEnd = newLen - 1; end >= start && newEnd >= start && items[end] === newItems[newEnd]; end--, newEnd--) {\n          temp[newEnd] = mapped[end];\n          tempdisposers[newEnd] = disposers[end];\n          indexes && (tempIndexes[newEnd] = indexes[end]);\n        }\n        newIndices = new Map();\n        newIndicesNext = new Array(newEnd + 1);\n        for (j = newEnd; j >= start; j--) {\n          item = newItems[j];\n          i = newIndices.get(item);\n          newIndicesNext[j] = i === undefined ? -1 : i;\n          newIndices.set(item, j);\n        }\n        for (i = start; i <= end; i++) {\n          item = items[i];\n          j = newIndices.get(item);\n          if (j !== undefined && j !== -1) {\n            temp[j] = mapped[i];\n            tempdisposers[j] = disposers[i];\n            indexes && (tempIndexes[j] = indexes[i]);\n            j = newIndicesNext[j];\n            newIndices.set(item, j);\n          } else disposers[i]();\n        }\n        for (j = start; j < newLen; j++) {\n          if (j in temp) {\n            mapped[j] = temp[j];\n            disposers[j] = tempdisposers[j];\n            if (indexes) {\n              indexes[j] = tempIndexes[j];\n              indexes[j](j);\n            }\n          } else mapped[j] = createRoot(mapper);\n        }\n        mapped = mapped.slice(0, len = newLen);\n        items = newItems.slice(0);\n      }\n      return mapped;\n    });\n    function mapper(disposer) {\n      disposers[j] = disposer;\n      if (indexes) {\n        const [s, set] = createSignal(j);\n        indexes[j] = set;\n        return mapFn(newItems[j], s);\n      }\n      return mapFn(newItems[j]);\n    }\n  };\n}\nfunction indexArray(list, mapFn, options = {}) {\n  let items = [],\n    mapped = [],\n    disposers = [],\n    signals = [],\n    len = 0,\n    i;\n  onCleanup(() => dispose(disposers));\n  return () => {\n    const newItems = list() || [],\n      newLen = newItems.length;\n    newItems[$TRACK];\n    return untrack(() => {\n      if (newLen === 0) {\n        if (len !== 0) {\n          dispose(disposers);\n          disposers = [];\n          items = [];\n          mapped = [];\n          len = 0;\n          signals = [];\n        }\n        if (options.fallback) {\n          items = [FALLBACK];\n          mapped[0] = createRoot(disposer => {\n            disposers[0] = disposer;\n            return options.fallback();\n          });\n          len = 1;\n        }\n        return mapped;\n      }\n      if (items[0] === FALLBACK) {\n        disposers[0]();\n        disposers = [];\n        items = [];\n        mapped = [];\n        len = 0;\n      }\n      for (i = 0; i < newLen; i++) {\n        if (i < items.length && items[i] !== newItems[i]) {\n          signals[i](() => newItems[i]);\n        } else if (i >= items.length) {\n          mapped[i] = createRoot(mapper);\n        }\n      }\n      for (; i < items.length; i++) {\n        disposers[i]();\n      }\n      len = signals.length = disposers.length = newLen;\n      items = newItems.slice(0);\n      return mapped = mapped.slice(0, len);\n    });\n    function mapper(disposer) {\n      disposers[i] = disposer;\n      const [s, set] = createSignal(newItems[i]);\n      signals[i] = set;\n      return mapFn(s, i);\n    }\n  };\n}\n\nlet hydrationEnabled = false;\nfunction enableHydration() {\n  hydrationEnabled = true;\n}\nfunction createComponent(Comp, props) {\n  if (hydrationEnabled) {\n    if (sharedConfig.context) {\n      const c = sharedConfig.context;\n      setHydrateContext(nextHydrateContext());\n      const r = untrack(() => Comp(props || {}));\n      setHydrateContext(c);\n      return r;\n    }\n  }\n  return untrack(() => Comp(props || {}));\n}\nfunction trueFn() {\n  return true;\n}\nconst propTraps = {\n  get(_, property, receiver) {\n    if (property === $PROXY) return receiver;\n    return _.get(property);\n  },\n  has(_, property) {\n    if (property === $PROXY) return true;\n    return _.has(property);\n  },\n  set: trueFn,\n  deleteProperty: trueFn,\n  getOwnPropertyDescriptor(_, property) {\n    return {\n      configurable: true,\n      enumerable: true,\n      get() {\n        return _.get(property);\n      },\n      set: trueFn,\n      deleteProperty: trueFn\n    };\n  },\n  ownKeys(_) {\n    return _.keys();\n  }\n};\nfunction resolveSource(s) {\n  return !(s = typeof s === \"function\" ? s() : s) ? {} : s;\n}\nfunction resolveSources() {\n  for (let i = 0, length = this.length; i < length; ++i) {\n    const v = this[i]();\n    if (v !== undefined) return v;\n  }\n}\nfunction mergeProps(...sources) {\n  let proxy = false;\n  for (let i = 0; i < sources.length; i++) {\n    const s = sources[i];\n    proxy = proxy || !!s && $PROXY in s;\n    sources[i] = typeof s === \"function\" ? (proxy = true, createMemo(s)) : s;\n  }\n  if (proxy) {\n    return new Proxy({\n      get(property) {\n        for (let i = sources.length - 1; i >= 0; i--) {\n          const v = resolveSource(sources[i])[property];\n          if (v !== undefined) return v;\n        }\n      },\n      has(property) {\n        for (let i = sources.length - 1; i >= 0; i--) {\n          if (property in resolveSource(sources[i])) return true;\n        }\n        return false;\n      },\n      keys() {\n        const keys = [];\n        for (let i = 0; i < sources.length; i++) keys.push(...Object.keys(resolveSource(sources[i])));\n        return [...new Set(keys)];\n      }\n    }, propTraps);\n  }\n  const sourcesMap = {};\n  const defined = Object.create(null);\n  for (let i = sources.length - 1; i >= 0; i--) {\n    const source = sources[i];\n    if (!source) continue;\n    const sourceKeys = Object.getOwnPropertyNames(source);\n    for (let i = sourceKeys.length - 1; i >= 0; i--) {\n      const key = sourceKeys[i];\n      if (key === \"__proto__\" || key === \"constructor\") continue;\n      const desc = Object.getOwnPropertyDescriptor(source, key);\n      if (!defined[key]) {\n        defined[key] = desc.get ? {\n          enumerable: true,\n          configurable: true,\n          get: resolveSources.bind(sourcesMap[key] = [desc.get.bind(source)])\n        } : desc.value !== undefined ? desc : undefined;\n      } else {\n        const sources = sourcesMap[key];\n        if (sources) {\n          if (desc.get) sources.push(desc.get.bind(source));else if (desc.value !== undefined) sources.push(() => desc.value);\n        }\n      }\n    }\n  }\n  const target = {};\n  const definedKeys = Object.keys(defined);\n  for (let i = definedKeys.length - 1; i >= 0; i--) {\n    const key = definedKeys[i],\n      desc = defined[key];\n    if (desc && desc.get) Object.defineProperty(target, key, desc);else target[key] = desc ? desc.value : undefined;\n  }\n  return target;\n}\nfunction splitProps(props, ...keys) {\n  if ($PROXY in props) {\n    const blocked = new Set(keys.length > 1 ? keys.flat() : keys[0]);\n    const res = keys.map(k => {\n      return new Proxy({\n        get(property) {\n          return k.includes(property) ? props[property] : undefined;\n        },\n        has(property) {\n          return k.includes(property) && property in props;\n        },\n        keys() {\n          return k.filter(property => property in props);\n        }\n      }, propTraps);\n    });\n    res.push(new Proxy({\n      get(property) {\n        return blocked.has(property) ? undefined : props[property];\n      },\n      has(property) {\n        return blocked.has(property) ? false : property in props;\n      },\n      keys() {\n        return Object.keys(props).filter(k => !blocked.has(k));\n      }\n    }, propTraps));\n    return res;\n  }\n  const otherObject = {};\n  const objects = keys.map(() => ({}));\n  for (const propName of Object.getOwnPropertyNames(props)) {\n    const desc = Object.getOwnPropertyDescriptor(props, propName);\n    const isDefaultDesc = !desc.get && !desc.set && desc.enumerable && desc.writable && desc.configurable;\n    let blocked = false;\n    let objectIndex = 0;\n    for (const k of keys) {\n      if (k.includes(propName)) {\n        blocked = true;\n        isDefaultDesc ? objects[objectIndex][propName] = desc.value : Object.defineProperty(objects[objectIndex], propName, desc);\n      }\n      ++objectIndex;\n    }\n    if (!blocked) {\n      isDefaultDesc ? otherObject[propName] = desc.value : Object.defineProperty(otherObject, propName, desc);\n    }\n  }\n  return [...objects, otherObject];\n}\nfunction lazy(fn) {\n  let comp;\n  let p;\n  const wrap = props => {\n    const ctx = sharedConfig.context;\n    if (ctx) {\n      const [s, set] = createSignal();\n      sharedConfig.count || (sharedConfig.count = 0);\n      sharedConfig.count++;\n      (p || (p = fn())).then(mod => {\n        !sharedConfig.done && setHydrateContext(ctx);\n        sharedConfig.count--;\n        set(() => mod.default);\n        setHydrateContext();\n      });\n      comp = s;\n    } else if (!comp) {\n      const [s] = createResource(() => (p || (p = fn())).then(mod => mod.default));\n      comp = s;\n    }\n    let Comp;\n    return createMemo(() => (Comp = comp()) ? untrack(() => {\n      if (false) ;\n      if (!ctx || sharedConfig.done) return Comp(props);\n      const c = sharedConfig.context;\n      setHydrateContext(ctx);\n      const r = Comp(props);\n      setHydrateContext(c);\n      return r;\n    }) : \"\");\n  };\n  wrap.preload = () => p || ((p = fn()).then(mod => comp = () => mod.default), p);\n  return wrap;\n}\nlet counter = 0;\nfunction createUniqueId() {\n  const ctx = sharedConfig.context;\n  return ctx ? sharedConfig.getNextContextId() : `cl-${counter++}`;\n}\n\nconst narrowedError = name => `Stale read from <${name}>.`;\nfunction For(props) {\n  const fallback = \"fallback\" in props && {\n    fallback: () => props.fallback\n  };\n  return createMemo(mapArray(() => props.each, props.children, fallback || undefined));\n}\nfunction Index(props) {\n  const fallback = \"fallback\" in props && {\n    fallback: () => props.fallback\n  };\n  return createMemo(indexArray(() => props.each, props.children, fallback || undefined));\n}\nfunction Show(props) {\n  const keyed = props.keyed;\n  const condition = createMemo(() => props.when, undefined, {\n    equals: (a, b) => keyed ? a === b : !a === !b\n  });\n  return createMemo(() => {\n    const c = condition();\n    if (c) {\n      const child = props.children;\n      const fn = typeof child === \"function\" && child.length > 0;\n      return fn ? untrack(() => child(keyed ? c : () => {\n        if (!untrack(condition)) throw narrowedError(\"Show\");\n        return props.when;\n      })) : child;\n    }\n    return props.fallback;\n  }, undefined, undefined);\n}\nfunction Switch(props) {\n  let keyed = false;\n  const equals = (a, b) => (keyed ? a[1] === b[1] : !a[1] === !b[1]) && a[2] === b[2];\n  const conditions = children(() => props.children),\n    evalConditions = createMemo(() => {\n      let conds = conditions();\n      if (!Array.isArray(conds)) conds = [conds];\n      for (let i = 0; i < conds.length; i++) {\n        const c = conds[i].when;\n        if (c) {\n          keyed = !!conds[i].keyed;\n          return [i, c, conds[i]];\n        }\n      }\n      return [-1];\n    }, undefined, {\n      equals\n    });\n  return createMemo(() => {\n    const [index, when, cond] = evalConditions();\n    if (index < 0) return props.fallback;\n    const c = cond.children;\n    const fn = typeof c === \"function\" && c.length > 0;\n    return fn ? untrack(() => c(keyed ? when : () => {\n      if (untrack(evalConditions)[0] !== index) throw narrowedError(\"Match\");\n      return cond.when;\n    })) : c;\n  }, undefined, undefined);\n}\nfunction Match(props) {\n  return props;\n}\nlet Errors;\nfunction resetErrorBoundaries() {\n  Errors && [...Errors].forEach(fn => fn());\n}\nfunction ErrorBoundary(props) {\n  let err;\n  if (sharedConfig.context && sharedConfig.load) err = sharedConfig.load(sharedConfig.getContextId());\n  const [errored, setErrored] = createSignal(err, undefined);\n  Errors || (Errors = new Set());\n  Errors.add(setErrored);\n  onCleanup(() => Errors.delete(setErrored));\n  return createMemo(() => {\n    let e;\n    if (e = errored()) {\n      const f = props.fallback;\n      return typeof f === \"function\" && f.length ? untrack(() => f(e, () => setErrored())) : f;\n    }\n    return catchError(() => props.children, setErrored);\n  }, undefined, undefined);\n}\n\nconst suspenseListEquals = (a, b) => a.showContent === b.showContent && a.showFallback === b.showFallback;\nconst SuspenseListContext = /* #__PURE__ */createContext();\nfunction SuspenseList(props) {\n  let [wrapper, setWrapper] = createSignal(() => ({\n      inFallback: false\n    })),\n    show;\n  const listContext = useContext(SuspenseListContext);\n  const [registry, setRegistry] = createSignal([]);\n  if (listContext) {\n    show = listContext.register(createMemo(() => wrapper()().inFallback));\n  }\n  const resolved = createMemo(prev => {\n    const reveal = props.revealOrder,\n      tail = props.tail,\n      {\n        showContent = true,\n        showFallback = true\n      } = show ? show() : {},\n      reg = registry(),\n      reverse = reveal === \"backwards\";\n    if (reveal === \"together\") {\n      const all = reg.every(inFallback => !inFallback());\n      const res = reg.map(() => ({\n        showContent: all && showContent,\n        showFallback\n      }));\n      res.inFallback = !all;\n      return res;\n    }\n    let stop = false;\n    let inFallback = prev.inFallback;\n    const res = [];\n    for (let i = 0, len = reg.length; i < len; i++) {\n      const n = reverse ? len - i - 1 : i,\n        s = reg[n]();\n      if (!stop && !s) {\n        res[n] = {\n          showContent,\n          showFallback\n        };\n      } else {\n        const next = !stop;\n        if (next) inFallback = true;\n        res[n] = {\n          showContent: next,\n          showFallback: !tail || next && tail === \"collapsed\" ? showFallback : false\n        };\n        stop = true;\n      }\n    }\n    if (!stop) inFallback = false;\n    res.inFallback = inFallback;\n    return res;\n  }, {\n    inFallback: false\n  });\n  setWrapper(() => resolved);\n  return createComponent(SuspenseListContext.Provider, {\n    value: {\n      register: inFallback => {\n        let index;\n        setRegistry(registry => {\n          index = registry.length;\n          return [...registry, inFallback];\n        });\n        return createMemo(() => resolved()[index], undefined, {\n          equals: suspenseListEquals\n        });\n      }\n    },\n    get children() {\n      return props.children;\n    }\n  });\n}\nfunction Suspense(props) {\n  let counter = 0,\n    show,\n    ctx,\n    p,\n    flicker,\n    error;\n  const [inFallback, setFallback] = createSignal(false),\n    SuspenseContext = getSuspenseContext(),\n    store = {\n      increment: () => {\n        if (++counter === 1) setFallback(true);\n      },\n      decrement: () => {\n        if (--counter === 0) setFallback(false);\n      },\n      inFallback,\n      effects: [],\n      resolved: false\n    },\n    owner = getOwner();\n  if (sharedConfig.context && sharedConfig.load) {\n    const key = sharedConfig.getContextId();\n    let ref = sharedConfig.load(key);\n    if (ref) {\n      if (typeof ref !== \"object\" || ref.status !== \"success\") p = ref;else sharedConfig.gather(key);\n    }\n    if (p && p !== \"$$f\") {\n      const [s, set] = createSignal(undefined, {\n        equals: false\n      });\n      flicker = s;\n      p.then(() => {\n        if (sharedConfig.done) return set();\n        sharedConfig.gather(key);\n        setHydrateContext(ctx);\n        set();\n        setHydrateContext();\n      }, err => {\n        error = err;\n        set();\n      });\n    }\n  }\n  const listContext = useContext(SuspenseListContext);\n  if (listContext) show = listContext.register(store.inFallback);\n  let dispose;\n  onCleanup(() => dispose && dispose());\n  return createComponent(SuspenseContext.Provider, {\n    value: store,\n    get children() {\n      return createMemo(() => {\n        if (error) throw error;\n        ctx = sharedConfig.context;\n        if (flicker) {\n          flicker();\n          return flicker = undefined;\n        }\n        if (ctx && p === \"$$f\") setHydrateContext();\n        const rendered = createMemo(() => props.children);\n        return createMemo(prev => {\n          const inFallback = store.inFallback(),\n            {\n              showContent = true,\n              showFallback = true\n            } = show ? show() : {};\n          if ((!inFallback || p && p !== \"$$f\") && showContent) {\n            store.resolved = true;\n            dispose && dispose();\n            dispose = ctx = p = undefined;\n            resumeEffects(store.effects);\n            return rendered();\n          }\n          if (!showFallback) return;\n          if (dispose) return prev;\n          return createRoot(disposer => {\n            dispose = disposer;\n            if (ctx) {\n              setHydrateContext({\n                id: ctx.id + \"F\",\n                count: 0\n              });\n              ctx = undefined;\n            }\n            return props.fallback;\n          }, owner);\n        });\n      });\n    }\n  });\n}\n\nconst DEV = undefined;\n\nexport { $DEVCOMP, $PROXY, $TRACK, DEV, ErrorBoundary, For, Index, Match, Show, Suspense, SuspenseList, Switch, batch, cancelCallback, catchError, children, createComponent, createComputed, createContext, createDeferred, createEffect, createMemo, createReaction, createRenderEffect, createResource, createRoot, createSelector, createSignal, createUniqueId, enableExternalSource, enableHydration, enableScheduling, equalFn, from, getListener, getOwner, indexArray, lazy, mapArray, mergeProps, observable, on, onCleanup, onError, onMount, requestCallback, resetErrorBoundaries, runWithOwner, sharedConfig, splitProps, startTransition, untrack, useContext, useTransition };\n","import { createRoot, createRenderEffect, untrack, sharedConfig, enableHydration, getOwner, createEffect, runWithOwner, createMemo, createSignal, onCleanup, splitProps } from 'solid-js';\nexport { ErrorBoundary, For, Index, Match, Show, Suspense, SuspenseList, Switch, createComponent, createRenderEffect as effect, getOwner, createMemo as memo, mergeProps, untrack } from 'solid-js';\n\nconst booleans = [\"allowfullscreen\", \"async\", \"autofocus\", \"autoplay\", \"checked\", \"controls\", \"default\", \"disabled\", \"formnovalidate\", \"hidden\", \"indeterminate\", \"inert\", \"ismap\", \"loop\", \"multiple\", \"muted\", \"nomodule\", \"novalidate\", \"open\", \"playsinline\", \"readonly\", \"required\", \"reversed\", \"seamless\", \"selected\"];\nconst Properties = /*#__PURE__*/new Set([\"className\", \"value\", \"readOnly\", \"formNoValidate\", \"isMap\", \"noModule\", \"playsInline\", ...booleans]);\nconst ChildProperties = /*#__PURE__*/new Set([\"innerHTML\", \"textContent\", \"innerText\", \"children\"]);\nconst Aliases = /*#__PURE__*/Object.assign(Object.create(null), {\n  className: \"class\",\n  htmlFor: \"for\"\n});\nconst PropAliases = /*#__PURE__*/Object.assign(Object.create(null), {\n  class: \"className\",\n  formnovalidate: {\n    $: \"formNoValidate\",\n    BUTTON: 1,\n    INPUT: 1\n  },\n  ismap: {\n    $: \"isMap\",\n    IMG: 1\n  },\n  nomodule: {\n    $: \"noModule\",\n    SCRIPT: 1\n  },\n  playsinline: {\n    $: \"playsInline\",\n    VIDEO: 1\n  },\n  readonly: {\n    $: \"readOnly\",\n    INPUT: 1,\n    TEXTAREA: 1\n  }\n});\nfunction getPropAlias(prop, tagName) {\n  const a = PropAliases[prop];\n  return typeof a === \"object\" ? a[tagName] ? a[\"$\"] : undefined : a;\n}\nconst DelegatedEvents = /*#__PURE__*/new Set([\"beforeinput\", \"click\", \"dblclick\", \"contextmenu\", \"focusin\", \"focusout\", \"input\", \"keydown\", \"keyup\", \"mousedown\", \"mousemove\", \"mouseout\", \"mouseover\", \"mouseup\", \"pointerdown\", \"pointermove\", \"pointerout\", \"pointerover\", \"pointerup\", \"touchend\", \"touchmove\", \"touchstart\"]);\nconst SVGElements = /*#__PURE__*/new Set([\n\"altGlyph\", \"altGlyphDef\", \"altGlyphItem\", \"animate\", \"animateColor\", \"animateMotion\", \"animateTransform\", \"circle\", \"clipPath\", \"color-profile\", \"cursor\", \"defs\", \"desc\", \"ellipse\", \"feBlend\", \"feColorMatrix\", \"feComponentTransfer\", \"feComposite\", \"feConvolveMatrix\", \"feDiffuseLighting\", \"feDisplacementMap\", \"feDistantLight\", \"feDropShadow\", \"feFlood\", \"feFuncA\", \"feFuncB\", \"feFuncG\", \"feFuncR\", \"feGaussianBlur\", \"feImage\", \"feMerge\", \"feMergeNode\", \"feMorphology\", \"feOffset\", \"fePointLight\", \"feSpecularLighting\", \"feSpotLight\", \"feTile\", \"feTurbulence\", \"filter\", \"font\", \"font-face\", \"font-face-format\", \"font-face-name\", \"font-face-src\", \"font-face-uri\", \"foreignObject\", \"g\", \"glyph\", \"glyphRef\", \"hkern\", \"image\", \"line\", \"linearGradient\", \"marker\", \"mask\", \"metadata\", \"missing-glyph\", \"mpath\", \"path\", \"pattern\", \"polygon\", \"polyline\", \"radialGradient\", \"rect\",\n\"set\", \"stop\",\n\"svg\", \"switch\", \"symbol\", \"text\", \"textPath\",\n\"tref\", \"tspan\", \"use\", \"view\", \"vkern\"]);\nconst SVGNamespace = {\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\"\n};\nconst DOMElements = /*#__PURE__*/new Set([\"html\", \"base\", \"head\", \"link\", \"meta\", \"style\", \"title\", \"body\", \"address\", \"article\", \"aside\", \"footer\", \"header\", \"main\", \"nav\", \"section\", \"body\", \"blockquote\", \"dd\", \"div\", \"dl\", \"dt\", \"figcaption\", \"figure\", \"hr\", \"li\", \"ol\", \"p\", \"pre\", \"ul\", \"a\", \"abbr\", \"b\", \"bdi\", \"bdo\", \"br\", \"cite\", \"code\", \"data\", \"dfn\", \"em\", \"i\", \"kbd\", \"mark\", \"q\", \"rp\", \"rt\", \"ruby\", \"s\", \"samp\", \"small\", \"span\", \"strong\", \"sub\", \"sup\", \"time\", \"u\", \"var\", \"wbr\", \"area\", \"audio\", \"img\", \"map\", \"track\", \"video\", \"embed\", \"iframe\", \"object\", \"param\", \"picture\", \"portal\", \"source\", \"svg\", \"math\", \"canvas\", \"noscript\", \"script\", \"del\", \"ins\", \"caption\", \"col\", \"colgroup\", \"table\", \"tbody\", \"td\", \"tfoot\", \"th\", \"thead\", \"tr\", \"button\", \"datalist\", \"fieldset\", \"form\", \"input\", \"label\", \"legend\", \"meter\", \"optgroup\", \"option\", \"output\", \"progress\", \"select\", \"textarea\", \"details\", \"dialog\", \"menu\", \"summary\", \"details\", \"slot\", \"template\", \"acronym\", \"applet\", \"basefont\", \"bgsound\", \"big\", \"blink\", \"center\", \"content\", \"dir\", \"font\", \"frame\", \"frameset\", \"hgroup\", \"image\", \"keygen\", \"marquee\", \"menuitem\", \"nobr\", \"noembed\", \"noframes\", \"plaintext\", \"rb\", \"rtc\", \"shadow\", \"spacer\", \"strike\", \"tt\", \"xmp\", \"a\", \"abbr\", \"acronym\", \"address\", \"applet\", \"area\", \"article\", \"aside\", \"audio\", \"b\", \"base\", \"basefont\", \"bdi\", \"bdo\", \"bgsound\", \"big\", \"blink\", \"blockquote\", \"body\", \"br\", \"button\", \"canvas\", \"caption\", \"center\", \"cite\", \"code\", \"col\", \"colgroup\", \"content\", \"data\", \"datalist\", \"dd\", \"del\", \"details\", \"dfn\", \"dialog\", \"dir\", \"div\", \"dl\", \"dt\", \"em\", \"embed\", \"fieldset\", \"figcaption\", \"figure\", \"font\", \"footer\", \"form\", \"frame\", \"frameset\", \"head\", \"header\", \"hgroup\", \"hr\", \"html\", \"i\", \"iframe\", \"image\", \"img\", \"input\", \"ins\", \"kbd\", \"keygen\", \"label\", \"legend\", \"li\", \"link\", \"main\", \"map\", \"mark\", \"marquee\", \"menu\", \"menuitem\", \"meta\", \"meter\", \"nav\", \"nobr\", \"noembed\", \"noframes\", \"noscript\", \"object\", \"ol\", \"optgroup\", \"option\", \"output\", \"p\", \"param\", \"picture\", \"plaintext\", \"portal\", \"pre\", \"progress\", \"q\", \"rb\", \"rp\", \"rt\", \"rtc\", \"ruby\", \"s\", \"samp\", \"script\", \"section\", \"select\", \"shadow\", \"slot\", \"small\", \"source\", \"spacer\", \"span\", \"strike\", \"strong\", \"style\", \"sub\", \"summary\", \"sup\", \"table\", \"tbody\", \"td\", \"template\", \"textarea\", \"tfoot\", \"th\", \"thead\", \"time\", \"title\", \"tr\", \"track\", \"tt\", \"u\", \"ul\", \"var\", \"video\", \"wbr\", \"xmp\", \"input\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"]);\n\nfunction reconcileArrays(parentNode, a, b) {\n  let bLength = b.length,\n    aEnd = a.length,\n    bEnd = bLength,\n    aStart = 0,\n    bStart = 0,\n    after = a[aEnd - 1].nextSibling,\n    map = null;\n  while (aStart < aEnd || bStart < bEnd) {\n    if (a[aStart] === b[bStart]) {\n      aStart++;\n      bStart++;\n      continue;\n    }\n    while (a[aEnd - 1] === b[bEnd - 1]) {\n      aEnd--;\n      bEnd--;\n    }\n    if (aEnd === aStart) {\n      const node = bEnd < bLength ? bStart ? b[bStart - 1].nextSibling : b[bEnd - bStart] : after;\n      while (bStart < bEnd) parentNode.insertBefore(b[bStart++], node);\n    } else if (bEnd === bStart) {\n      while (aStart < aEnd) {\n        if (!map || !map.has(a[aStart])) a[aStart].remove();\n        aStart++;\n      }\n    } else if (a[aStart] === b[bEnd - 1] && b[bStart] === a[aEnd - 1]) {\n      const node = a[--aEnd].nextSibling;\n      parentNode.insertBefore(b[bStart++], a[aStart++].nextSibling);\n      parentNode.insertBefore(b[--bEnd], node);\n      a[aEnd] = b[bEnd];\n    } else {\n      if (!map) {\n        map = new Map();\n        let i = bStart;\n        while (i < bEnd) map.set(b[i], i++);\n      }\n      const index = map.get(a[aStart]);\n      if (index != null) {\n        if (bStart < index && index < bEnd) {\n          let i = aStart,\n            sequence = 1,\n            t;\n          while (++i < aEnd && i < bEnd) {\n            if ((t = map.get(a[i])) == null || t !== index + sequence) break;\n            sequence++;\n          }\n          if (sequence > index - bStart) {\n            const node = a[aStart];\n            while (bStart < index) parentNode.insertBefore(b[bStart++], node);\n          } else parentNode.replaceChild(b[bStart++], a[aStart++]);\n        } else aStart++;\n      } else a[aStart++].remove();\n    }\n  }\n}\n\nconst $$EVENTS = \"_$DX_DELEGATE\";\nfunction render(code, element, init, options = {}) {\n  let disposer;\n  createRoot(dispose => {\n    disposer = dispose;\n    element === document ? code() : insert(element, code(), element.firstChild ? null : undefined, init);\n  }, options.owner);\n  return () => {\n    disposer();\n    element.textContent = \"\";\n  };\n}\nfunction template(html, isCE, isSVG) {\n  let node;\n  const create = () => {\n    const t = document.createElement(\"template\");\n    t.innerHTML = html;\n    return isSVG ? t.content.firstChild.firstChild : t.content.firstChild;\n  };\n  const fn = isCE ? () => untrack(() => document.importNode(node || (node = create()), true)) : () => (node || (node = create())).cloneNode(true);\n  fn.cloneNode = fn;\n  return fn;\n}\nfunction delegateEvents(eventNames, document = window.document) {\n  const e = document[$$EVENTS] || (document[$$EVENTS] = new Set());\n  for (let i = 0, l = eventNames.length; i < l; i++) {\n    const name = eventNames[i];\n    if (!e.has(name)) {\n      e.add(name);\n      document.addEventListener(name, eventHandler);\n    }\n  }\n}\nfunction clearDelegatedEvents(document = window.document) {\n  if (document[$$EVENTS]) {\n    for (let name of document[$$EVENTS].keys()) document.removeEventListener(name, eventHandler);\n    delete document[$$EVENTS];\n  }\n}\nfunction setProperty(node, name, value) {\n  if (isHydrating(node)) return;\n  node[name] = value;\n}\nfunction setAttribute(node, name, value) {\n  if (isHydrating(node)) return;\n  if (value == null) node.removeAttribute(name);else node.setAttribute(name, value);\n}\nfunction setAttributeNS(node, namespace, name, value) {\n  if (isHydrating(node)) return;\n  if (value == null) node.removeAttributeNS(namespace, name);else node.setAttributeNS(namespace, name, value);\n}\nfunction className(node, value) {\n  if (isHydrating(node)) return;\n  if (value == null) node.removeAttribute(\"class\");else node.className = value;\n}\nfunction addEventListener(node, name, handler, delegate) {\n  if (delegate) {\n    if (Array.isArray(handler)) {\n      node[`$$${name}`] = handler[0];\n      node[`$$${name}Data`] = handler[1];\n    } else node[`$$${name}`] = handler;\n  } else if (Array.isArray(handler)) {\n    const handlerFn = handler[0];\n    node.addEventListener(name, handler[0] = e => handlerFn.call(node, handler[1], e));\n  } else node.addEventListener(name, handler);\n}\nfunction classList(node, value, prev = {}) {\n  const classKeys = Object.keys(value || {}),\n    prevKeys = Object.keys(prev);\n  let i, len;\n  for (i = 0, len = prevKeys.length; i < len; i++) {\n    const key = prevKeys[i];\n    if (!key || key === \"undefined\" || value[key]) continue;\n    toggleClassKey(node, key, false);\n    delete prev[key];\n  }\n  for (i = 0, len = classKeys.length; i < len; i++) {\n    const key = classKeys[i],\n      classValue = !!value[key];\n    if (!key || key === \"undefined\" || prev[key] === classValue || !classValue) continue;\n    toggleClassKey(node, key, true);\n    prev[key] = classValue;\n  }\n  return prev;\n}\nfunction style(node, value, prev) {\n  if (!value) return prev ? setAttribute(node, \"style\") : value;\n  const nodeStyle = node.style;\n  if (typeof value === \"string\") return nodeStyle.cssText = value;\n  typeof prev === \"string\" && (nodeStyle.cssText = prev = undefined);\n  prev || (prev = {});\n  value || (value = {});\n  let v, s;\n  for (s in prev) {\n    value[s] == null && nodeStyle.removeProperty(s);\n    delete prev[s];\n  }\n  for (s in value) {\n    v = value[s];\n    if (v !== prev[s]) {\n      nodeStyle.setProperty(s, v);\n      prev[s] = v;\n    }\n  }\n  return prev;\n}\nfunction spread(node, props = {}, isSVG, skipChildren) {\n  const prevProps = {};\n  if (!skipChildren) {\n    createRenderEffect(() => prevProps.children = insertExpression(node, props.children, prevProps.children));\n  }\n  createRenderEffect(() => typeof props.ref === \"function\" && use(props.ref, node));\n  createRenderEffect(() => assign(node, props, isSVG, true, prevProps, true));\n  return prevProps;\n}\nfunction dynamicProperty(props, key) {\n  const src = props[key];\n  Object.defineProperty(props, key, {\n    get() {\n      return src();\n    },\n    enumerable: true\n  });\n  return props;\n}\nfunction use(fn, element, arg) {\n  return untrack(() => fn(element, arg));\n}\nfunction insert(parent, accessor, marker, initial) {\n  if (marker !== undefined && !initial) initial = [];\n  if (typeof accessor !== \"function\") return insertExpression(parent, accessor, initial, marker);\n  createRenderEffect(current => insertExpression(parent, accessor(), current, marker), initial);\n}\nfunction assign(node, props, isSVG, skipChildren, prevProps = {}, skipRef = false) {\n  props || (props = {});\n  for (const prop in prevProps) {\n    if (!(prop in props)) {\n      if (prop === \"children\") continue;\n      prevProps[prop] = assignProp(node, prop, null, prevProps[prop], isSVG, skipRef);\n    }\n  }\n  for (const prop in props) {\n    if (prop === \"children\") {\n      if (!skipChildren) insertExpression(node, props.children);\n      continue;\n    }\n    const value = props[prop];\n    prevProps[prop] = assignProp(node, prop, value, prevProps[prop], isSVG, skipRef);\n  }\n}\nfunction hydrate$1(code, element, options = {}) {\n  if (globalThis._$HY.done) return render(code, element, [...element.childNodes], options);\n  sharedConfig.completed = globalThis._$HY.completed;\n  sharedConfig.events = globalThis._$HY.events;\n  sharedConfig.load = id => globalThis._$HY.r[id];\n  sharedConfig.has = id => id in globalThis._$HY.r;\n  sharedConfig.gather = root => gatherHydratable(element, root);\n  sharedConfig.registry = new Map();\n  sharedConfig.context = {\n    id: options.renderId || \"\",\n    count: 0\n  };\n  try {\n    gatherHydratable(element, options.renderId);\n    return render(code, element, [...element.childNodes], options);\n  } finally {\n    sharedConfig.context = null;\n  }\n}\nfunction getNextElement(template) {\n  let node,\n    key,\n    hydrating = isHydrating();\n  if (!hydrating || !(node = sharedConfig.registry.get(key = getHydrationKey()))) {\n    return template();\n  }\n  if (sharedConfig.completed) sharedConfig.completed.add(node);\n  sharedConfig.registry.delete(key);\n  return node;\n}\nfunction getNextMatch(el, nodeName) {\n  while (el && el.localName !== nodeName) el = el.nextSibling;\n  return el;\n}\nfunction getNextMarker(start) {\n  let end = start,\n    count = 0,\n    current = [];\n  if (isHydrating(start)) {\n    while (end) {\n      if (end.nodeType === 8) {\n        const v = end.nodeValue;\n        if (v === \"$\") count++;else if (v === \"/\") {\n          if (count === 0) return [end, current];\n          count--;\n        }\n      }\n      current.push(end);\n      end = end.nextSibling;\n    }\n  }\n  return [end, current];\n}\nfunction runHydrationEvents() {\n  if (sharedConfig.events && !sharedConfig.events.queued) {\n    queueMicrotask(() => {\n      const {\n        completed,\n        events\n      } = sharedConfig;\n      events.queued = false;\n      while (events.length) {\n        const [el, e] = events[0];\n        if (!completed.has(el)) return;\n        events.shift();\n        eventHandler(e);\n      }\n      if (sharedConfig.done) {\n        sharedConfig.events = _$HY.events = null;\n        sharedConfig.completed = _$HY.completed = null;\n      }\n    });\n    sharedConfig.events.queued = true;\n  }\n}\nfunction isHydrating(node) {\n  return !!sharedConfig.context && !sharedConfig.done && (!node || node.isConnected);\n}\nfunction toPropertyName(name) {\n  return name.toLowerCase().replace(/-([a-z])/g, (_, w) => w.toUpperCase());\n}\nfunction toggleClassKey(node, key, value) {\n  const classNames = key.trim().split(/\\s+/);\n  for (let i = 0, nameLen = classNames.length; i < nameLen; i++) node.classList.toggle(classNames[i], value);\n}\nfunction assignProp(node, prop, value, prev, isSVG, skipRef) {\n  let isCE, isProp, isChildProp, propAlias, forceProp;\n  if (prop === \"style\") return style(node, value, prev);\n  if (prop === \"classList\") return classList(node, value, prev);\n  if (value === prev) return prev;\n  if (prop === \"ref\") {\n    if (!skipRef) value(node);\n  } else if (prop.slice(0, 3) === \"on:\") {\n    const e = prop.slice(3);\n    prev && node.removeEventListener(e, prev);\n    value && node.addEventListener(e, value);\n  } else if (prop.slice(0, 10) === \"oncapture:\") {\n    const e = prop.slice(10);\n    prev && node.removeEventListener(e, prev, true);\n    value && node.addEventListener(e, value, true);\n  } else if (prop.slice(0, 2) === \"on\") {\n    const name = prop.slice(2).toLowerCase();\n    const delegate = DelegatedEvents.has(name);\n    if (!delegate && prev) {\n      const h = Array.isArray(prev) ? prev[0] : prev;\n      node.removeEventListener(name, h);\n    }\n    if (delegate || value) {\n      addEventListener(node, name, value, delegate);\n      delegate && delegateEvents([name]);\n    }\n  } else if (prop.slice(0, 5) === \"attr:\") {\n    setAttribute(node, prop.slice(5), value);\n  } else if ((forceProp = prop.slice(0, 5) === \"prop:\") || (isChildProp = ChildProperties.has(prop)) || !isSVG && ((propAlias = getPropAlias(prop, node.tagName)) || (isProp = Properties.has(prop))) || (isCE = node.nodeName.includes(\"-\"))) {\n    if (forceProp) {\n      prop = prop.slice(5);\n      isProp = true;\n    } else if (isHydrating(node)) return value;\n    if (prop === \"class\" || prop === \"className\") className(node, value);else if (isCE && !isProp && !isChildProp) node[toPropertyName(prop)] = value;else node[propAlias || prop] = value;\n  } else {\n    const ns = isSVG && prop.indexOf(\":\") > -1 && SVGNamespace[prop.split(\":\")[0]];\n    if (ns) setAttributeNS(node, ns, prop, value);else setAttribute(node, Aliases[prop] || prop, value);\n  }\n  return value;\n}\nfunction eventHandler(e) {\n  if (sharedConfig.registry && sharedConfig.events) {\n    if (sharedConfig.events.find(([el, ev]) => ev === e)) return;\n  }\n  const key = `$$${e.type}`;\n  let node = e.composedPath && e.composedPath()[0] || e.target;\n  if (e.target !== node) {\n    Object.defineProperty(e, \"target\", {\n      configurable: true,\n      value: node\n    });\n  }\n  Object.defineProperty(e, \"currentTarget\", {\n    configurable: true,\n    get() {\n      return node || document;\n    }\n  });\n  if (sharedConfig.registry && !sharedConfig.done) sharedConfig.done = _$HY.done = true;\n  while (node) {\n    const handler = node[key];\n    if (handler && !node.disabled) {\n      const data = node[`${key}Data`];\n      data !== undefined ? handler.call(node, data, e) : handler.call(node, e);\n      if (e.cancelBubble) return;\n    }\n    node = node._$host || node.parentNode || node.host;\n  }\n}\nfunction insertExpression(parent, value, current, marker, unwrapArray) {\n  const hydrating = isHydrating(parent);\n  if (hydrating) {\n    !current && (current = [...parent.childNodes]);\n    let cleaned = [];\n    for (let i = 0; i < current.length; i++) {\n      const node = current[i];\n      if (node.nodeType === 8 && node.data.slice(0, 2) === \"!$\") node.remove();else cleaned.push(node);\n    }\n    current = cleaned;\n  }\n  while (typeof current === \"function\") current = current();\n  if (value === current) return current;\n  const t = typeof value,\n    multi = marker !== undefined;\n  parent = multi && current[0] && current[0].parentNode || parent;\n  if (t === \"string\" || t === \"number\") {\n    if (hydrating) return current;\n    if (t === \"number\") {\n      value = value.toString();\n      if (value === current) return current;\n    }\n    if (multi) {\n      let node = current[0];\n      if (node && node.nodeType === 3) {\n        node.data !== value && (node.data = value);\n      } else node = document.createTextNode(value);\n      current = cleanChildren(parent, current, marker, node);\n    } else {\n      if (current !== \"\" && typeof current === \"string\") {\n        current = parent.firstChild.data = value;\n      } else current = parent.textContent = value;\n    }\n  } else if (value == null || t === \"boolean\") {\n    if (hydrating) return current;\n    current = cleanChildren(parent, current, marker);\n  } else if (t === \"function\") {\n    createRenderEffect(() => {\n      let v = value();\n      while (typeof v === \"function\") v = v();\n      current = insertExpression(parent, v, current, marker);\n    });\n    return () => current;\n  } else if (Array.isArray(value)) {\n    const array = [];\n    const currentArray = current && Array.isArray(current);\n    if (normalizeIncomingArray(array, value, current, unwrapArray)) {\n      createRenderEffect(() => current = insertExpression(parent, array, current, marker, true));\n      return () => current;\n    }\n    if (hydrating) {\n      if (!array.length) return current;\n      if (marker === undefined) return current = [...parent.childNodes];\n      let node = array[0];\n      if (node.parentNode !== parent) return current;\n      const nodes = [node];\n      while ((node = node.nextSibling) !== marker) nodes.push(node);\n      return current = nodes;\n    }\n    if (array.length === 0) {\n      current = cleanChildren(parent, current, marker);\n      if (multi) return current;\n    } else if (currentArray) {\n      if (current.length === 0) {\n        appendNodes(parent, array, marker);\n      } else reconcileArrays(parent, current, array);\n    } else {\n      current && cleanChildren(parent);\n      appendNodes(parent, array);\n    }\n    current = array;\n  } else if (value.nodeType) {\n    if (hydrating && value.parentNode) return current = multi ? [value] : value;\n    if (Array.isArray(current)) {\n      if (multi) return current = cleanChildren(parent, current, marker, value);\n      cleanChildren(parent, current, null, value);\n    } else if (current == null || current === \"\" || !parent.firstChild) {\n      parent.appendChild(value);\n    } else parent.replaceChild(value, parent.firstChild);\n    current = value;\n  } else ;\n  return current;\n}\nfunction normalizeIncomingArray(normalized, array, current, unwrap) {\n  let dynamic = false;\n  for (let i = 0, len = array.length; i < len; i++) {\n    let item = array[i],\n      prev = current && current[normalized.length],\n      t;\n    if (item == null || item === true || item === false) ; else if ((t = typeof item) === \"object\" && item.nodeType) {\n      normalized.push(item);\n    } else if (Array.isArray(item)) {\n      dynamic = normalizeIncomingArray(normalized, item, prev) || dynamic;\n    } else if (t === \"function\") {\n      if (unwrap) {\n        while (typeof item === \"function\") item = item();\n        dynamic = normalizeIncomingArray(normalized, Array.isArray(item) ? item : [item], Array.isArray(prev) ? prev : [prev]) || dynamic;\n      } else {\n        normalized.push(item);\n        dynamic = true;\n      }\n    } else {\n      const value = String(item);\n      if (prev && prev.nodeType === 3 && prev.data === value) normalized.push(prev);else normalized.push(document.createTextNode(value));\n    }\n  }\n  return dynamic;\n}\nfunction appendNodes(parent, array, marker = null) {\n  for (let i = 0, len = array.length; i < len; i++) parent.insertBefore(array[i], marker);\n}\nfunction cleanChildren(parent, current, marker, replacement) {\n  if (marker === undefined) return parent.textContent = \"\";\n  const node = replacement || document.createTextNode(\"\");\n  if (current.length) {\n    let inserted = false;\n    for (let i = current.length - 1; i >= 0; i--) {\n      const el = current[i];\n      if (node !== el) {\n        const isParent = el.parentNode === parent;\n        if (!inserted && !i) isParent ? parent.replaceChild(node, el) : parent.insertBefore(node, marker);else isParent && el.remove();\n      } else inserted = true;\n    }\n  } else parent.insertBefore(node, marker);\n  return [node];\n}\nfunction gatherHydratable(element, root) {\n  const templates = element.querySelectorAll(`*[data-hk]`);\n  for (let i = 0; i < templates.length; i++) {\n    const node = templates[i];\n    const key = node.getAttribute(\"data-hk\");\n    if ((!root || key.startsWith(root)) && !sharedConfig.registry.has(key)) sharedConfig.registry.set(key, node);\n  }\n}\nfunction getHydrationKey() {\n  return sharedConfig.getNextContextId();\n}\nfunction NoHydration(props) {\n  return sharedConfig.context ? undefined : props.children;\n}\nfunction Hydration(props) {\n  return props.children;\n}\nconst voidFn = () => undefined;\nconst RequestContext = Symbol();\nfunction innerHTML(parent, content) {\n  !sharedConfig.context && (parent.innerHTML = content);\n}\n\nfunction throwInBrowser(func) {\n  const err = new Error(`${func.name} is not supported in the browser, returning undefined`);\n  console.error(err);\n}\nfunction renderToString(fn, options) {\n  throwInBrowser(renderToString);\n}\nfunction renderToStringAsync(fn, options) {\n  throwInBrowser(renderToStringAsync);\n}\nfunction renderToStream(fn, options) {\n  throwInBrowser(renderToStream);\n}\nfunction ssr(template, ...nodes) {}\nfunction ssrElement(name, props, children, needsId) {}\nfunction ssrClassList(value) {}\nfunction ssrStyle(value) {}\nfunction ssrAttribute(key, value) {}\nfunction ssrHydrationKey() {}\nfunction resolveSSRNode(node) {}\nfunction escape(html) {}\nfunction ssrSpread(props, isSVG, skipChildren) {}\n\nconst isServer = false;\nconst isDev = false;\nconst SVG_NAMESPACE = \"http://www.w3.org/2000/svg\";\nfunction createElement(tagName, isSVG = false) {\n  return isSVG ? document.createElementNS(SVG_NAMESPACE, tagName) : document.createElement(tagName);\n}\nconst hydrate = (...args) => {\n  enableHydration();\n  return hydrate$1(...args);\n};\nfunction Portal(props) {\n  const {\n      useShadow\n    } = props,\n    marker = document.createTextNode(\"\"),\n    mount = () => props.mount || document.body,\n    owner = getOwner();\n  let content;\n  let hydrating = !!sharedConfig.context;\n  createEffect(() => {\n    if (hydrating) getOwner().user = hydrating = false;\n    content || (content = runWithOwner(owner, () => createMemo(() => props.children)));\n    const el = mount();\n    if (el instanceof HTMLHeadElement) {\n      const [clean, setClean] = createSignal(false);\n      const cleanup = () => setClean(true);\n      createRoot(dispose => insert(el, () => !clean() ? content() : dispose(), null));\n      onCleanup(cleanup);\n    } else {\n      const container = createElement(props.isSVG ? \"g\" : \"div\", props.isSVG),\n        renderRoot = useShadow && container.attachShadow ? container.attachShadow({\n          mode: \"open\"\n        }) : container;\n      Object.defineProperty(container, \"_$host\", {\n        get() {\n          return marker.parentNode;\n        },\n        configurable: true\n      });\n      insert(renderRoot, content);\n      el.appendChild(container);\n      props.ref && props.ref(container);\n      onCleanup(() => el.removeChild(container));\n    }\n  }, undefined, {\n    render: !hydrating\n  });\n  return marker;\n}\nfunction Dynamic(props) {\n  const [p, others] = splitProps(props, [\"component\"]);\n  const cached = createMemo(() => p.component);\n  return createMemo(() => {\n    const component = cached();\n    switch (typeof component) {\n      case \"function\":\n        return untrack(() => component(others));\n      case \"string\":\n        const isSvg = SVGElements.has(component);\n        const el = sharedConfig.context ? getNextElement() : createElement(component, isSvg);\n        spread(el, others, isSvg);\n        return el;\n    }\n  });\n}\n\nexport { Aliases, voidFn as Assets, ChildProperties, DOMElements, DelegatedEvents, Dynamic, Hydration, voidFn as HydrationScript, NoHydration, Portal, Properties, RequestContext, SVGElements, SVGNamespace, addEventListener, assign, classList, className, clearDelegatedEvents, delegateEvents, dynamicProperty, escape, voidFn as generateHydrationScript, voidFn as getAssets, getHydrationKey, getNextElement, getNextMarker, getNextMatch, getPropAlias, voidFn as getRequestEvent, hydrate, innerHTML, insert, isDev, isServer, render, renderToStream, renderToString, renderToStringAsync, resolveSSRNode, runHydrationEvents, setAttribute, setAttributeNS, setProperty, spread, ssr, ssrAttribute, ssrClassList, ssrElement, ssrHydrationKey, ssrSpread, ssrStyle, style, template, use, voidFn as useAssets };\n","import { $PROXY, $TRACK, getListener, batch, createSignal } from 'solid-js';\n\nconst $RAW = Symbol(\"store-raw\"),\n  $NODE = Symbol(\"store-node\"),\n  $HAS = Symbol(\"store-has\"),\n  $SELF = Symbol(\"store-self\");\nfunction wrap$1(value) {\n  let p = value[$PROXY];\n  if (!p) {\n    Object.defineProperty(value, $PROXY, {\n      value: p = new Proxy(value, proxyTraps$1)\n    });\n    if (!Array.isArray(value)) {\n      const keys = Object.keys(value),\n        desc = Object.getOwnPropertyDescriptors(value);\n      for (let i = 0, l = keys.length; i < l; i++) {\n        const prop = keys[i];\n        if (desc[prop].get) {\n          Object.defineProperty(value, prop, {\n            enumerable: desc[prop].enumerable,\n            get: desc[prop].get.bind(p)\n          });\n        }\n      }\n    }\n  }\n  return p;\n}\nfunction isWrappable(obj) {\n  let proto;\n  return obj != null && typeof obj === \"object\" && (obj[$PROXY] || !(proto = Object.getPrototypeOf(obj)) || proto === Object.prototype || Array.isArray(obj));\n}\nfunction unwrap(item, set = new Set()) {\n  let result, unwrapped, v, prop;\n  if (result = item != null && item[$RAW]) return result;\n  if (!isWrappable(item) || set.has(item)) return item;\n  if (Array.isArray(item)) {\n    if (Object.isFrozen(item)) item = item.slice(0);else set.add(item);\n    for (let i = 0, l = item.length; i < l; i++) {\n      v = item[i];\n      if ((unwrapped = unwrap(v, set)) !== v) item[i] = unwrapped;\n    }\n  } else {\n    if (Object.isFrozen(item)) item = Object.assign({}, item);else set.add(item);\n    const keys = Object.keys(item),\n      desc = Object.getOwnPropertyDescriptors(item);\n    for (let i = 0, l = keys.length; i < l; i++) {\n      prop = keys[i];\n      if (desc[prop].get) continue;\n      v = item[prop];\n      if ((unwrapped = unwrap(v, set)) !== v) item[prop] = unwrapped;\n    }\n  }\n  return item;\n}\nfunction getNodes(target, symbol) {\n  let nodes = target[symbol];\n  if (!nodes) Object.defineProperty(target, symbol, {\n    value: nodes = Object.create(null)\n  });\n  return nodes;\n}\nfunction getNode(nodes, property, value) {\n  if (nodes[property]) return nodes[property];\n  const [s, set] = createSignal(value, {\n    equals: false,\n    internal: true\n  });\n  s.$ = set;\n  return nodes[property] = s;\n}\nfunction proxyDescriptor$1(target, property) {\n  const desc = Reflect.getOwnPropertyDescriptor(target, property);\n  if (!desc || desc.get || !desc.configurable || property === $PROXY || property === $NODE) return desc;\n  delete desc.value;\n  delete desc.writable;\n  desc.get = () => target[$PROXY][property];\n  return desc;\n}\nfunction trackSelf(target) {\n  getListener() && getNode(getNodes(target, $NODE), $SELF)();\n}\nfunction ownKeys(target) {\n  trackSelf(target);\n  return Reflect.ownKeys(target);\n}\nconst proxyTraps$1 = {\n  get(target, property, receiver) {\n    if (property === $RAW) return target;\n    if (property === $PROXY) return receiver;\n    if (property === $TRACK) {\n      trackSelf(target);\n      return receiver;\n    }\n    const nodes = getNodes(target, $NODE);\n    const tracked = nodes[property];\n    let value = tracked ? tracked() : target[property];\n    if (property === $NODE || property === $HAS || property === \"__proto__\") return value;\n    if (!tracked) {\n      const desc = Object.getOwnPropertyDescriptor(target, property);\n      if (getListener() && (typeof value !== \"function\" || target.hasOwnProperty(property)) && !(desc && desc.get)) value = getNode(nodes, property, value)();\n    }\n    return isWrappable(value) ? wrap$1(value) : value;\n  },\n  has(target, property) {\n    if (property === $RAW || property === $PROXY || property === $TRACK || property === $NODE || property === $HAS || property === \"__proto__\") return true;\n    getListener() && getNode(getNodes(target, $HAS), property)();\n    return property in target;\n  },\n  set() {\n    return true;\n  },\n  deleteProperty() {\n    return true;\n  },\n  ownKeys: ownKeys,\n  getOwnPropertyDescriptor: proxyDescriptor$1\n};\nfunction setProperty(state, property, value, deleting = false) {\n  if (!deleting && state[property] === value) return;\n  const prev = state[property],\n    len = state.length;\n  if (value === undefined) {\n    delete state[property];\n    if (state[$HAS] && state[$HAS][property] && prev !== undefined) state[$HAS][property].$();\n  } else {\n    state[property] = value;\n    if (state[$HAS] && state[$HAS][property] && prev === undefined) state[$HAS][property].$();\n  }\n  let nodes = getNodes(state, $NODE),\n    node;\n  if (node = getNode(nodes, property, prev)) node.$(() => value);\n  if (Array.isArray(state) && state.length !== len) {\n    for (let i = state.length; i < len; i++) (node = nodes[i]) && node.$();\n    (node = getNode(nodes, \"length\", len)) && node.$(state.length);\n  }\n  (node = nodes[$SELF]) && node.$();\n}\nfunction mergeStoreNode(state, value) {\n  const keys = Object.keys(value);\n  for (let i = 0; i < keys.length; i += 1) {\n    const key = keys[i];\n    setProperty(state, key, value[key]);\n  }\n}\nfunction updateArray(current, next) {\n  if (typeof next === \"function\") next = next(current);\n  next = unwrap(next);\n  if (Array.isArray(next)) {\n    if (current === next) return;\n    let i = 0,\n      len = next.length;\n    for (; i < len; i++) {\n      const value = next[i];\n      if (current[i] !== value) setProperty(current, i, value);\n    }\n    setProperty(current, \"length\", len);\n  } else mergeStoreNode(current, next);\n}\nfunction updatePath(current, path, traversed = []) {\n  let part,\n    prev = current;\n  if (path.length > 1) {\n    part = path.shift();\n    const partType = typeof part,\n      isArray = Array.isArray(current);\n    if (Array.isArray(part)) {\n      for (let i = 0; i < part.length; i++) {\n        updatePath(current, [part[i]].concat(path), traversed);\n      }\n      return;\n    } else if (isArray && partType === \"function\") {\n      for (let i = 0; i < current.length; i++) {\n        if (part(current[i], i)) updatePath(current, [i].concat(path), traversed);\n      }\n      return;\n    } else if (isArray && partType === \"object\") {\n      const {\n        from = 0,\n        to = current.length - 1,\n        by = 1\n      } = part;\n      for (let i = from; i <= to; i += by) {\n        updatePath(current, [i].concat(path), traversed);\n      }\n      return;\n    } else if (path.length > 1) {\n      updatePath(current[part], path, [part].concat(traversed));\n      return;\n    }\n    prev = current[part];\n    traversed = [part].concat(traversed);\n  }\n  let value = path[0];\n  if (typeof value === \"function\") {\n    value = value(prev, traversed);\n    if (value === prev) return;\n  }\n  if (part === undefined && value == undefined) return;\n  value = unwrap(value);\n  if (part === undefined || isWrappable(prev) && isWrappable(value) && !Array.isArray(value)) {\n    mergeStoreNode(prev, value);\n  } else setProperty(current, part, value);\n}\nfunction createStore(...[store, options]) {\n  const unwrappedStore = unwrap(store || {});\n  const isArray = Array.isArray(unwrappedStore);\n  const wrappedStore = wrap$1(unwrappedStore);\n  function setStore(...args) {\n    batch(() => {\n      isArray && args.length === 1 ? updateArray(unwrappedStore, args[0]) : updatePath(unwrappedStore, args);\n    });\n  }\n  return [wrappedStore, setStore];\n}\n\nfunction proxyDescriptor(target, property) {\n  const desc = Reflect.getOwnPropertyDescriptor(target, property);\n  if (!desc || desc.get || desc.set || !desc.configurable || property === $PROXY || property === $NODE) return desc;\n  delete desc.value;\n  delete desc.writable;\n  desc.get = () => target[$PROXY][property];\n  desc.set = v => target[$PROXY][property] = v;\n  return desc;\n}\nconst proxyTraps = {\n  get(target, property, receiver) {\n    if (property === $RAW) return target;\n    if (property === $PROXY) return receiver;\n    if (property === $TRACK) {\n      trackSelf(target);\n      return receiver;\n    }\n    const nodes = getNodes(target, $NODE);\n    const tracked = nodes[property];\n    let value = tracked ? tracked() : target[property];\n    if (property === $NODE || property === $HAS || property === \"__proto__\") return value;\n    if (!tracked) {\n      const desc = Object.getOwnPropertyDescriptor(target, property);\n      const isFunction = typeof value === \"function\";\n      if (getListener() && (!isFunction || target.hasOwnProperty(property)) && !(desc && desc.get)) value = getNode(nodes, property, value)();else if (value != null && isFunction && value === Array.prototype[property]) {\n        return (...args) => batch(() => Array.prototype[property].apply(receiver, args));\n      }\n    }\n    return isWrappable(value) ? wrap(value) : value;\n  },\n  has(target, property) {\n    if (property === $RAW || property === $PROXY || property === $TRACK || property === $NODE || property === $HAS || property === \"__proto__\") return true;\n    getListener() && getNode(getNodes(target, $HAS), property)();\n    return property in target;\n  },\n  set(target, property, value) {\n    batch(() => setProperty(target, property, unwrap(value)));\n    return true;\n  },\n  deleteProperty(target, property) {\n    batch(() => setProperty(target, property, undefined, true));\n    return true;\n  },\n  ownKeys: ownKeys,\n  getOwnPropertyDescriptor: proxyDescriptor\n};\nfunction wrap(value) {\n  let p = value[$PROXY];\n  if (!p) {\n    Object.defineProperty(value, $PROXY, {\n      value: p = new Proxy(value, proxyTraps)\n    });\n    const keys = Object.keys(value),\n      desc = Object.getOwnPropertyDescriptors(value);\n    const proto = Object.getPrototypeOf(value);\n    const isClass = value !== null && typeof value === \"object\" && !Array.isArray(value) && proto !== Object.prototype;\n    if (isClass) {\n      const descriptors = Object.getOwnPropertyDescriptors(proto);\n      keys.push(...Object.keys(descriptors));\n      Object.assign(desc, descriptors);\n    }\n    for (let i = 0, l = keys.length; i < l; i++) {\n      const prop = keys[i];\n      if (isClass && prop === \"constructor\") continue;\n      if (desc[prop].get) {\n        const get = desc[prop].get.bind(p);\n        Object.defineProperty(value, prop, {\n          get,\n          configurable: true\n        });\n      }\n      if (desc[prop].set) {\n        const og = desc[prop].set,\n          set = v => batch(() => og.call(p, v));\n        Object.defineProperty(value, prop, {\n          set,\n          configurable: true\n        });\n      }\n    }\n  }\n  return p;\n}\nfunction createMutable(state, options) {\n  const unwrappedStore = unwrap(state || {});\n  const wrappedStore = wrap(unwrappedStore);\n  return wrappedStore;\n}\nfunction modifyMutable(state, modifier) {\n  batch(() => modifier(unwrap(state)));\n}\n\nconst $ROOT = Symbol(\"store-root\");\nfunction applyState(target, parent, property, merge, key) {\n  const previous = parent[property];\n  if (target === previous) return;\n  const isArray = Array.isArray(target);\n  if (property !== $ROOT && (!isWrappable(target) || !isWrappable(previous) || isArray !== Array.isArray(previous) || key && target[key] !== previous[key])) {\n    setProperty(parent, property, target);\n    return;\n  }\n  if (isArray) {\n    if (target.length && previous.length && (!merge || key && target[0] && target[0][key] != null)) {\n      let i, j, start, end, newEnd, item, newIndicesNext, keyVal;\n      for (start = 0, end = Math.min(previous.length, target.length); start < end && (previous[start] === target[start] || key && previous[start] && target[start] && previous[start][key] === target[start][key]); start++) {\n        applyState(target[start], previous, start, merge, key);\n      }\n      const temp = new Array(target.length),\n        newIndices = new Map();\n      for (end = previous.length - 1, newEnd = target.length - 1; end >= start && newEnd >= start && (previous[end] === target[newEnd] || key && previous[start] && target[start] && previous[end][key] === target[newEnd][key]); end--, newEnd--) {\n        temp[newEnd] = previous[end];\n      }\n      if (start > newEnd || start > end) {\n        for (j = start; j <= newEnd; j++) setProperty(previous, j, target[j]);\n        for (; j < target.length; j++) {\n          setProperty(previous, j, temp[j]);\n          applyState(target[j], previous, j, merge, key);\n        }\n        if (previous.length > target.length) setProperty(previous, \"length\", target.length);\n        return;\n      }\n      newIndicesNext = new Array(newEnd + 1);\n      for (j = newEnd; j >= start; j--) {\n        item = target[j];\n        keyVal = key && item ? item[key] : item;\n        i = newIndices.get(keyVal);\n        newIndicesNext[j] = i === undefined ? -1 : i;\n        newIndices.set(keyVal, j);\n      }\n      for (i = start; i <= end; i++) {\n        item = previous[i];\n        keyVal = key && item ? item[key] : item;\n        j = newIndices.get(keyVal);\n        if (j !== undefined && j !== -1) {\n          temp[j] = previous[i];\n          j = newIndicesNext[j];\n          newIndices.set(keyVal, j);\n        }\n      }\n      for (j = start; j < target.length; j++) {\n        if (j in temp) {\n          setProperty(previous, j, temp[j]);\n          applyState(target[j], previous, j, merge, key);\n        } else setProperty(previous, j, target[j]);\n      }\n    } else {\n      for (let i = 0, len = target.length; i < len; i++) {\n        applyState(target[i], previous, i, merge, key);\n      }\n    }\n    if (previous.length > target.length) setProperty(previous, \"length\", target.length);\n    return;\n  }\n  const targetKeys = Object.keys(target);\n  for (let i = 0, len = targetKeys.length; i < len; i++) {\n    applyState(target[targetKeys[i]], previous, targetKeys[i], merge, key);\n  }\n  const previousKeys = Object.keys(previous);\n  for (let i = 0, len = previousKeys.length; i < len; i++) {\n    if (target[previousKeys[i]] === undefined) setProperty(previous, previousKeys[i], undefined);\n  }\n}\nfunction reconcile(value, options = {}) {\n  const {\n      merge,\n      key = \"id\"\n    } = options,\n    v = unwrap(value);\n  return state => {\n    if (!isWrappable(state) || !isWrappable(v)) return v;\n    const res = applyState(v, {\n      [$ROOT]: state\n    }, $ROOT, merge, key);\n    return res === undefined ? state : res;\n  };\n}\nconst producers = new WeakMap();\nconst setterTraps = {\n  get(target, property) {\n    if (property === $RAW) return target;\n    const value = target[property];\n    let proxy;\n    return isWrappable(value) ? producers.get(value) || (producers.set(value, proxy = new Proxy(value, setterTraps)), proxy) : value;\n  },\n  set(target, property, value) {\n    setProperty(target, property, unwrap(value));\n    return true;\n  },\n  deleteProperty(target, property) {\n    setProperty(target, property, undefined, true);\n    return true;\n  }\n};\nfunction produce(fn) {\n  return state => {\n    if (isWrappable(state)) {\n      let proxy;\n      if (!(proxy = producers.get(state))) {\n        producers.set(state, proxy = new Proxy(state, setterTraps));\n      }\n      fn(proxy);\n    }\n    return state;\n  };\n}\n\nconst DEV = undefined;\n\nexport { $RAW, DEV, createMutable, createStore, modifyMutable, produce, reconcile, unwrap };\n","import { For, onCleanup, onMount } from 'solid-js'\nimport { createStore } from 'solid-js/store'\nimport type { Game } from '../../Game'\nimport type { LoadItem } from '../../Loader'\nimport './style.css'\n\nconst itemTypeGroupName: { [name: string]: string } = {\n  replay: 'Replay',\n  bsp: 'Map',\n  sound: 'Sounds',\n  sky: 'Skybox',\n  sprite: 'Sprites',\n  wad: 'Wads'\n}\n\nexport function Loading(props: { game: Game; visible: boolean }) {\n  const [items, setItems] = createStore<{ [name: string]: { name: string; progress: number }[] }>({})\n\n  onMount(() => {\n    const loaderEvents = props.game.loader.events\n    const offLoadStart = loaderEvents.on('loadstart', onItemLoad)\n    const offProgress = loaderEvents.on('progress', onItemProgress)\n    onCleanup(() => {\n      offLoadStart?.()\n      offProgress?.()\n    })\n  })\n\n  const onItemLoad = (item: LoadItem) => {\n    const typeItems = items[item.type] ? items[item.type] : []\n\n    for (let i = 0; i < typeItems.length; ++i) {\n      if (typeItems[i] === item) {\n        return\n      }\n    }\n\n    typeItems.push({\n      name: item.name,\n      progress: 0\n    })\n\n    setItems(item.type, typeItems)\n  }\n\n  const onItemProgress = (item: LoadItem) => {\n    if (!items[item.type]) {\n      return\n    }\n\n    const typeItems = items[item.type]\n    for (let i = 0; i < typeItems.length; ++i) {\n      if (typeItems[i].name === item.name) {\n        setItems(item.type, i, { progress: item.progress })\n        break\n      }\n    }\n  }\n\n  const formatItem = (_name: string, progress: number) => {\n    let name = _name\n    name = itemTypeGroupName[name]\n    const status = `${Math.round(progress * 100)}%`\n\n    let length = 29 - name.length - status.length\n    if (length < 2) {\n      length = 9 - status.length\n    }\n\n    const dots = Array(length).join('.')\n\n    return `${name}${dots}${status}`\n  }\n\n  return (\n    <div\n      classList={{\n        'hlv-loading': true,\n        visible: props.visible\n      }}\n    >\n      <div class=\"hlv-loading-spinner\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" width=\"80px\" height=\"80px\" viewBox=\"0 0 80 80\">\n          <title>Loading</title>\n          <path\n            fill=\"#ffffff\"\n            d=\"M40,72C22.4,72,8,57.6,8,40C8,22.4,22.4,8,40,8c17.6,0,32,14.4,32,32c0,1.1-0.9,2-2,2s-2-0.9-2-2c0-15.4-12.6-28-28-28S12,24.6,12,40s12.6,28,28,28c1.1,0,2,0.9,2,2S41.1,72,40,72z\"\n          />\n        </svg>\n      </div>\n\n      <div class=\"hlv-loading-log\">\n        <For each={Object.entries(items)}>\n          {([name, items]) => (\n            <div class=\"hlv-loading-log-item\">\n              {formatItem(name, items.reduce((prev, cur) => prev + cur.progress, 0) / items.length)}\n            </div>\n          )}\n        </For>\n      </div>\n    </div>\n  )\n}\n","import { createSignal } from 'solid-js'\nimport { type Game, PlayerMode } from '../../../Game'\nimport './style.css'\n\nexport const [showSpeed, setShowSpeed] = createSignal(true)\n\nexport function SettingsButton(props: { game: Game }) {\n  const [isOpen, setIsOpen] = createSignal(false)\n  const hasReplay = !!props.game.player.replay\n\n  const onFreeModeClick = () => {\n    if (props.game.mode === PlayerMode.FREE) {\n      return\n    }\n\n    props.game.changeMode(PlayerMode.FREE)\n    props.game.player.pause()\n  }\n\n  const onReplayModeClick = () => {\n    if (props.game.mode === PlayerMode.REPLAY) {\n      return\n    }\n\n    props.game.changeMode(PlayerMode.REPLAY)\n  }\n\n  return (\n    <div classList={{ 'hlv-settings': true, open: isOpen() }}>\n      <button type=\"button\" class=\"hlv-button\" onClick={() => setIsOpen(!isOpen())}>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"24\"\n          height=\"24\"\n          viewBox=\"0 0 24 24\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          stroke-width=\"2\"\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n        >\n          <title>Toggle</title>\n          <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n          <path d=\"M10.325 4.317c.426 -1.756 2.924 -1.756 3.35 0a1.724 1.724 0 0 0 2.573 1.066c1.543 -.94 3.31 .826 2.37 2.37a1.724 1.724 0 0 0 1.065 2.572c1.756 .426 1.756 2.924 0 3.35a1.724 1.724 0 0 0 -1.066 2.573c.94 1.543 -.826 3.31 -2.37 2.37a1.724 1.724 0 0 0 -2.572 1.065c-.426 1.756 -2.924 1.756 -3.35 0a1.724 1.724 0 0 0 -2.573 -1.066c-1.543 .94 -3.31 -.826 -2.37 -2.37a1.724 1.724 0 0 0 -1.065 -2.572c-1.756 -.426 -1.756 -2.924 0 -3.35a1.724 1.724 0 0 0 1.066 -2.573c-.94 -1.543 .826 -3.31 2.37 -2.37c1 .608 2.296 .07 2.572 -1.065z\" />\n          <path d=\"M9 12a3 3 0 1 0 6 0a3 3 0 0 0 -6 0\" />\n        </svg>\n      </button>\n\n      <div class=\"hlv-settings-menu\">\n        <span class=\"hlv-settings-menu-title\">Mode</span>\n        {hasReplay ? (\n          <button\n            type=\"button\"\n            classList={{\n              'hlv-settings-menu-item': true,\n              selected: props.game.mode === PlayerMode.REPLAY\n            }}\n            onClick={() => onReplayModeClick()}\n          >\n            Replay\n          </button>\n        ) : (\n          <span />\n        )}\n        <button\n          type=\"button\"\n          classList={{\n            'hlv-settings-menu-item': true,\n            selected: props.game.mode === PlayerMode.FREE\n          }}\n          onClick={() => onFreeModeClick()}\n        >\n          Free Move\n        </button>\n        <button\n          type=\"button\"\n          class=\"hlv-settings-menu-item\"\n          classList={{ selected: showSpeed() }}\n          onClick={() => setShowSpeed(!showSpeed())}\n        >\n          Show Speed\n        </button>\n      </div>\n    </div>\n  )\n}\n","const apis = [\r\n  {\r\n    enabled: 'fullscreenEnabled',\r\n    element: 'fullscreenElement',\r\n    request: 'requestFullscreen',\r\n    exit: 'exitFullscreen',\r\n    change: 'fullscreenchange',\r\n    error: 'fullscreenerror'\r\n  },\r\n  {\r\n    enabled: 'mozFullScreenEnabled',\r\n    element: 'mozFullScreenElement',\r\n    request: 'mozRequestFullScreen',\r\n    exit: 'mozCancelFullScreen',\r\n    change: 'mozfullscreenchange',\r\n    error: 'mozfullscreenerror'\r\n  },\r\n  {\r\n    enabled: 'webkitFullscreenEnabled',\r\n    element: 'webkitCurrentFullScreenElement',\r\n    request: 'webkitRequestFullscreen',\r\n    exit: 'webkitExitFullscreen',\r\n    change: 'webkitfullscreenchange',\r\n    error: 'webkitfullscreenerror'\r\n  },\r\n  {\r\n    enabled: 'msFullscreenEnabled',\r\n    element: 'msFullscreenElement',\r\n    request: 'msRequestFullscreen',\r\n    exit: 'msExitFullscreen',\r\n    change: 'MSFullscreenChange',\r\n    error: 'MSFullscreenError'\r\n  }\r\n]\r\n\r\nlet apiIdx = 0\r\n\r\ninterface Doc {\r\n  [key: string]: any\r\n}\r\nconst doc: Doc = document\r\n\r\nfor (let i = 0; i < apis.length; ++i) {\r\n  if (typeof doc[apis[i].enabled] !== 'undefined') {\r\n    apiIdx = i\r\n    break\r\n  }\r\n}\r\n\r\nexport const Fullscreen = {\r\n  element() {\r\n    return doc[apis[apiIdx].element]\r\n  },\r\n  enabled() {\r\n    return doc[apis[apiIdx].enabled]\r\n  },\r\n  isInFullscreen() {\r\n    return Fullscreen.element() !== null\r\n  },\r\n  enter(node: any) {\r\n    node[apis[apiIdx].request]()\r\n  },\r\n  exit() {\r\n    doc[apis[apiIdx].exit]()\r\n  },\r\n  onChange(callback: () => void) {\r\n    return window.addEventListener(apis[apiIdx].change, callback)\r\n  },\r\n  onChangeRemove(callback: () => void) {\r\n    window.removeEventListener(apis[apiIdx].change, callback)\r\n  },\r\n  onError(callback: () => void) {\r\n    return window.addEventListener(apis[apiIdx].error, callback)\r\n  }\r\n}\r\n","import { createSignal, onCleanup, onMount } from 'solid-js'\nimport { Fullscreen } from '../../../Fullscreen'\nimport './style.css'\n\nexport function FullscreenButton(props: { active: boolean; root: Element }) {\n  const [isInFullscreen, setIsInFullscreen] = createSignal(Fullscreen.isInFullscreen())\n\n  onMount(() => {\n    Fullscreen.onChange(onFullscreen)\n  })\n\n  onCleanup(() => {\n    Fullscreen.onChangeRemove(onFullscreen)\n  })\n\n  const onClick = () => {\n    if (Fullscreen.isInFullscreen()) {\n      Fullscreen.exit()\n    } else {\n      Fullscreen.enter(props.root)\n    }\n  }\n\n  const onFullscreen = () => {\n    setIsInFullscreen(Fullscreen.isInFullscreen())\n  }\n\n  return (\n    <button type=\"button\" class=\"hlv-button hlv-fullscreen-button\" onClick={() => onClick()}>\n      {isInFullscreen() ? (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"24\"\n          height=\"24\"\n          viewBox=\"0 0 24 24\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          stroke-width=\"2\"\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          class=\"icon icon-tabler icons-tabler-outline icon-tabler-minimize\"\n        >\n          <title>Exit fullscreen</title>\n          <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n          <path d=\"M15 19v-2a2 2 0 0 1 2 -2h2\" />\n          <path d=\"M15 5v2a2 2 0 0 0 2 2h2\" />\n          <path d=\"M5 15h2a2 2 0 0 1 2 2v2\" />\n          <path d=\"M5 9h2a2 2 0 0 0 2 -2v-2\" />\n        </svg>\n      ) : (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"24\"\n          height=\"24\"\n          viewBox=\"0 0 24 24\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          stroke-width=\"2\"\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n        >\n          <title>Fullscreen</title>\n          <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n          <path d=\"M4 8v-2a2 2 0 0 1 2 -2h2\" />\n          <path d=\"M4 16v2a2 2 0 0 0 2 2h2\" />\n          <path d=\"M16 4h2a2 2 0 0 1 2 2v2\" />\n          <path d=\"M16 20h2a2 2 0 0 0 2 -2v-2\" />\n        </svg>\n      )}\n    </button>\n  )\n}\n","import type { Game } from '../../Game'\nimport { SettingsButton } from '../Buttons/SettingsButton'\nimport { FullscreenButton } from '../Buttons/FullscreenButton'\n\nexport function FreeMode(props: { class: string; game: Game; root: Element }) {\n  return (\n    <div class={props.class}>\n      <div class=\"hlv-buttons\">\n        <div class=\"hlv-buttons-left\" />\n        <div class=\"hlv-buttons-right\">\n          <SettingsButton game={props.game} />\n          <FullscreenButton active={false} root={props.root} />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { createContext, useContext } from 'solid-js'\nimport { PlayerMode } from '../Game'\n\nexport const GameStateContext = createContext({\n  mode: PlayerMode.FREE,\n  time: 0,\n  volume: 1,\n  isPlaying: false,\n  isPaused: false\n})\n\nexport function useGameState() {\n  return useContext(GameStateContext)\n}\n","import { formatTime } from '../../Time'\nimport type { ReplayPlayer } from '../../ReplayPlayer'\nimport { useGameState } from '../GameState'\nimport './style.css'\n\nexport function Time(props: { player: ReplayPlayer }) {\n  const gameState = useGameState()\n  const current = () => formatTime(gameState.time)\n  const total = () => formatTime(props.player.replay.length)\n\n  return (\n    <div class=\"hlv-time\">\n      {current()} / {total()}\n    </div>\n  )\n}\n","import { createSignal, onCleanup, onMount } from 'solid-js'\nimport type { Game } from '../../Game'\nimport { formatTime } from '../../Time'\nimport './style.css'\n\nexport function Timeline(props: { game: Game }) {\n  const [progress, setProgress] = createSignal(0)\n  const [ghostKnobActive, setGhostKnobActive] = createSignal(false)\n  const [ghostKnobPos, setGhostKnobPos] = createSignal('0%')\n  const [ghostTime, setGhostTime] = createSignal(0)\n\n  onMount(() => {\n    const offPostUpdate = props.game.events.on('postupdate', () => {\n      setProgress(props.game.player.currentTime / props.game.player.replay.length)\n    })\n    onCleanup(() => {\n      offPostUpdate?.()\n    })\n  })\n\n  const onMouseDown = (e: MouseEvent & { currentTarget: HTMLButtonElement }) => {\n    const rects = e.currentTarget.getClientRects()[0]\n    const progress = 1 - (rects.right - e.pageX) / (rects.right - rects.left)\n    props.game.player.seekByPercent(progress * 100)\n    props.game.player.pause()\n\n    const onMouseMove = (e: MouseEvent) => {\n      const progressPos = Math.max(0, Math.min(1 - (rects.right - e.pageX) / (rects.right - rects.left), 1))\n      props.game.player.seekByPercent(progressPos * 100)\n      props.game.player.pause()\n    }\n    window.addEventListener('mousemove', onMouseMove)\n    window.addEventListener(\n      'mouseup',\n      () => {\n        window.removeEventListener('mousemove', onMouseMove)\n      },\n      { once: true }\n    )\n  }\n\n  const onMouseMove = (e: MouseEvent & { currentTarget: HTMLButtonElement }) => {\n    const rects = e.currentTarget.getClientRects()[0]\n    const progressPos = Math.max(0, Math.min(1 - (rects.right - e.pageX) / (rects.right - rects.left), 1))\n    if (ghostKnobActive()) {\n      setGhostKnobPos(`${progressPos * 100}%`)\n      setGhostTime(props.game.player.replay.length * progressPos)\n    }\n  }\n\n  const onMouseEnter = () => {\n    setGhostKnobActive(true)\n  }\n\n  const onMouseLeave = () => {\n    setGhostKnobActive(false)\n  }\n\n  const knobOffset = () => {\n    const timePos = progress() * 100\n    return `${timePos}%`\n  }\n\n  const lineOffset = () => {\n    const timePos = progress() * 100\n    return `${100 - timePos}%`\n  }\n\n  return (\n    <button\n      type=\"button\"\n      class=\"hlv-timeline\"\n      onMouseDown={(e) => onMouseDown(e)}\n      onMouseMove={(e) => onMouseMove(e)}\n      onMouseEnter={() => onMouseEnter()}\n      onMouseLeave={() => onMouseLeave()}\n    >\n      <div class=\"hlv-timeline-ghostline\" />\n      <div class=\"hlv-timeline-line\" style={{ right: lineOffset() }} />\n      <div class=\"hlv-timeline-knob\" style={{ left: knobOffset() }} />\n      <div class=\"hlv-timeline-ghosttime\" style={{ left: ghostKnobPos() }}>\n        {formatTime(ghostTime())}\n      </div>\n    </button>\n  )\n}\n","import type { Game } from '../../Game'\nimport { useGameState } from '../GameState'\nimport './style.css'\n\nexport function VolumeControl(props: { game: Game }) {\n  const gameState = useGameState()\n\n  const onMouseDown = (e: MouseEvent & { currentTarget: HTMLDivElement }) => {\n    const rects = e.currentTarget.getClientRects()[0]\n    const volume = 1 - (rects.right - e.pageX) / (rects.right - rects.left)\n    props.game.soundSystem.setVolume(volume)\n\n    const onMouseMove = (e: MouseEvent) => {\n      const volume = Math.max(0, Math.min(1 - (rects.right - e.pageX) / (rects.right - rects.left), 1))\n      props.game.soundSystem.setVolume(volume)\n    }\n    window.addEventListener('mousemove', onMouseMove)\n    window.addEventListener(\n      'mouseup',\n      () => {\n        window.removeEventListener('mousemove', onMouseMove)\n      },\n      { once: true }\n    )\n  }\n\n  const volumePos = () => gameState.volume * 100\n  const knobOffset = () => `${Math.min(95, Math.max(5, volumePos()))}%`\n  const lineOffset = () => `${Math.min(95, Math.max(5, 100 - volumePos()))}%`\n\n  return (\n    <div class=\"hlv-volume\" onMouseDown={(e) => onMouseDown(e)}>\n      <div class=\"hlv-volume-ghostline\" />\n      <div class=\"hlv-volume-line\" style={{ right: lineOffset() }} />\n      <div class=\"hlv-volume-knob\" style={{ left: knobOffset() }} />\n    </div>\n  )\n}\n","export function PlayButton(props: { onClick(): void }) {\n  return (\n    <button type=\"button\" class=\"hlv-button\" onClick={() => props.onClick()}>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        stroke-width=\"2\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      >\n        <title>Play</title>\n        <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M7 4v16l13 -8z\" />\n      </svg>\n    </button>\n  )\n}\n","export function PauseButton(props: { onClick(): void }) {\n  return (\n    <button type=\"button\" class=\"hlv-button\" onClick={() => props.onClick()}>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        stroke-width=\"2\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      >\n        <title>Pause</title>\n        <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M6 5m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v12a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z\" />\n        <path d=\"M14 5m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v12a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z\" />\n      </svg>\n    </button>\n  )\n}\n","export function VolumeFull() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      stroke-width=\"2\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    >\n      <title>Volume Full</title>\n      <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <path d=\"M15 8a5 5 0 0 1 0 8\" />\n      <path d=\"M17.7 5a9 9 0 0 1 0 14\" />\n      <path d=\"M6 15h-2a1 1 0 0 1 -1 -1v-4a1 1 0 0 1 1 -1h2l3.5 -4.5a.8 .8 0 0 1 1.5 .5v14a.8 .8 0 0 1 -1.5 .5l-3.5 -4.5\" />\n    </svg>\n  )\n}\n","export function VolumeHalf() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      stroke-width=\"2\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n      class=\"icon icon-tabler icons-tabler-outline icon-tabler-volume-2\"\n    >\n      <title>Volume Half</title>\n      <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <path d=\"M15 8a5 5 0 0 1 0 8\" />\n      <path d=\"M6 15h-2a1 1 0 0 1 -1 -1v-4a1 1 0 0 1 1 -1h2l3.5 -4.5a.8 .8 0 0 1 1.5 .5v14a.8 .8 0 0 1 -1.5 .5l-3.5 -4.5\" />\n    </svg>\n  )\n}\n","export function VolumeMute() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      stroke-width=\"2\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n      class=\"icon icon-tabler icons-tabler-outline icon-tabler-volume-3\"\n    >\n      <title>Volume Mute</title>\n      <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <path d=\"M6 15h-2a1 1 0 0 1 -1 -1v-4a1 1 0 0 1 1 -1h2l3.5 -4.5a.8 .8 0 0 1 1.5 .5v14a.8 .8 0 0 1 -1.5 .5l-3.5 -4.5\" />\n      <path d=\"M16 10l4 4m0 -4l-4 4\" />\n    </svg>\n  )\n}\n","import { useGameState } from '../../GameState'\nimport { VolumeFull } from './VolumeFull'\nimport { VolumeHalf } from './VolumeHalf'\nimport { VolumeMute } from './VolumeMute'\n\nexport function VolumeButton(props: { onClick(): void }) {\n  const gameState = useGameState()\n\n  return (\n    <button type=\"button\" class=\"hlv-button\" onClick={() => props.onClick()}>\n      {gameState.volume === 0 ? <VolumeMute /> : gameState.volume > 0.5 ? <VolumeFull /> : <VolumeHalf />}\n    </button>\n  )\n}\n","export function SpeedUpButton(props: { onClick(): void }) {\n  return (\n    <button type=\"button\" class=\"hlv-button\" onClick={() => props.onClick()}>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        stroke-width=\"2\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      >\n        <title>Speed Up</title>\n        <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M3 5v14l8 -7z\" />\n        <path d=\"M14 5v14l8 -7z\" />\n      </svg>\n    </button>\n  )\n}\n","export function SpeedDownButton(props: { onClick(): void }) {\n  return (\n    <button type=\"button\" class=\"hlv-button\" onClick={() => props.onClick()}>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        stroke-width=\"2\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      >\n        <title>Speed Down</title>\n        <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M21 5v14l-8 -7z\" />\n        <path d=\"M10 5v14l-8 -7z\" />\n      </svg>\n    </button>\n  )\n}\n","import { Time } from '../Time'\nimport type { Game } from '../../Game'\nimport { Timeline } from '../TimeLine'\nimport { useGameState } from '../GameState'\nimport { VolumeControl } from '../VolumeControl'\nimport { PlayButton } from '../Buttons/PlayButton'\nimport { PauseButton } from '../Buttons/PauseButton'\nimport { VolumeButton } from '../Buttons/VolumeButton'\nimport { SpeedUpButton } from '../Buttons/SpeedUpButton'\nimport { SpeedDownButton } from '../Buttons/SpeedDownButton'\nimport { SettingsButton } from '../Buttons/SettingsButton'\nimport { FullscreenButton } from '../Buttons/FullscreenButton'\nimport { createSignal, onCleanup, Show } from 'solid-js'\nimport { showSpeed } from '../Buttons/SettingsButton'\nimport './style.css'\n\nexport function ReplayMode(props: { class: string; game: Game; root: Element; visible: boolean }) {\n  const gameState = useGameState()\n  const [speed, setSpeed] = createSignal(0)\n\n  const updateSpeed = () => {\n    const state = props.game.player.state\n    if (state.speed) {\n      setSpeed(state.speed)\n    }\n  }\n\n  let frameId: number\n  const animate = () => {\n    updateSpeed()\n    frameId = requestAnimationFrame(animate)\n  }\n  animate()\n\n  onCleanup(() => cancelAnimationFrame(frameId))\n\n  const onPlayClick = () => {\n    props.game.player.play()\n  }\n\n  const onPauseClick = () => {\n    props.game.player.pause()\n  }\n\n  const onSpeedDown = () => {\n    props.game.player.speedDown()\n  }\n\n  const onSpeedUp = () => {\n    props.game.player.speedUp()\n  }\n\n  const onVolumeClick = () => {\n    props.game.soundSystem.toggleMute()\n  }\n\n  return (\n    <>\n      <div class=\"hlv-speed-wrapper\" classList={{ visible: props.visible }}>\n        <Show when={showSpeed()}>\n          <div class=\"hlv-speed-center\">\n            {speed().toFixed(0)}u/s\n          </div>\n        </Show>\n      </div>\n      <div class={props.class}>\n        <Timeline game={props.game} />\n\n        <div class=\"hlv-buttons\">\n          <div class=\"hlv-buttons-left\">\n            <SpeedDownButton onClick={() => onSpeedDown()} />\n            {gameState.isPaused || !gameState.isPlaying ? (\n              <PlayButton onClick={() => onPlayClick()} />\n            ) : (\n              <PauseButton onClick={() => onPauseClick()} />\n            )}\n            <SpeedUpButton onClick={() => onSpeedUp()} />\n            <div />\n            <div />\n            <VolumeButton onClick={() => onVolumeClick()} />\n            <VolumeControl game={props.game} />\n            <Time player={props.game.player} />\n          </div>\n\n          <div class=\"hlv-buttons-right\">\n            <SettingsButton game={props.game} />\n            <FullscreenButton active={true} root={props.root} />\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n","import { createSignal, onCleanup, onMount, Show } from 'solid-js'\nimport { createStore } from 'solid-js/store'\nimport { Loading } from '../Loading'\nimport { FreeMode } from '../FreeMode'\nimport { ReplayMode } from '../ReplayMode'\nimport { Fullscreen } from '../../Fullscreen'\nimport { GameStateContext } from '../GameState'\nimport { type Game, PlayerMode } from '../../Game'\nimport './style.css'\n\nexport function App(props: { game: Game; root: Element }) {\n  let screen: HTMLButtonElement | null = null\n  let fadeOut: ReturnType<typeof setTimeout> | undefined = undefined\n\n  const [title, setTitle] = createSignal(props.game.title)\n  const [isActive, setIsActive] = createSignal(false)\n  const [isLoading, setIsLoading] = createSignal(false)\n  const [isMouseOver, setIsMouseOver] = createSignal(false)\n  const [isVisible, setIsVisible] = createSignal(false)\n\n  const [gameState, setGameState] = createStore({\n    mode: props.game.mode,\n    time: props.game.player.currentTime,\n    volume: props.game.soundSystem.getVolume(),\n    isPlaying: props.game.player.isPlaying,\n    isPaused: props.game.player.isPaused\n  })\n\n  onMount(() => {\n    if (!screen) {\n      return\n    }\n\n    const game = props.game\n    const root = props.root\n\n    screen.appendChild(game.getCanvas())\n\n    const offLoadStart = game.events.on('loadstart', () => setIsLoading(true))\n    const offLoad = game.events.on('load', () => setIsLoading(false))\n    const offModeChange = game.events.on('modechange', (mode: PlayerMode) => setGameState({ mode }))\n    const offTitleChange = game.events.on('titlechange', (title: string) => setTitle(title))\n    const offPlay = props.game.player.events.on('play', () => setGameState({ isPlaying: true, isPaused: false }))\n    const offPause = props.game.player.events.on('pause', () => setGameState({ isPlaying: true, isPaused: true }))\n    const offStop = props.game.player.events.on('stop', () => setGameState({ isPlaying: false, isPaused: false }))\n    const offVolumeChange = props.game.soundSystem.events.on('volumeChange', () => {\n      setGameState({ volume: props.game.soundSystem.getVolume() })\n    })\n\n    let interval: number\n    const onPlay = () => {\n      interval = setInterval(() => {\n        setGameState({ time: props.game.player.currentTime })\n      }, 100)\n    }\n    const onPauseOrStop = () => {\n      clearInterval(interval)\n    }\n    const offPlayTimer = props.game.player.events.on('play', onPlay)\n    const offPauseTimer = props.game.player.events.on('pause', onPauseOrStop)\n    const offStopTimer = props.game.player.events.on('stop', onPauseOrStop)\n    const offSeekTimer = props.game.player.events.on('seek', (time) => setGameState({ time }))\n\n    window.addEventListener('click', onWindowClick)\n    window.addEventListener('keydown', onKeyDown)\n    document.addEventListener('pointerlockchange', onPointerLockChange, false)\n\n    root.addEventListener('click', onRootClick)\n    root.addEventListener('mouseover', onMouseEnter)\n    root.addEventListener('mousemove', onMouseMove)\n    root.addEventListener('mouseout', onMouseLeave)\n    root.addEventListener('contextmenu', onContextMenu)\n\n    onCleanup(() => {\n      offLoadStart?.()\n      offLoad?.()\n      offModeChange?.()\n      offTitleChange?.()\n      offPlay?.()\n      offPause?.()\n      offStop?.()\n      offVolumeChange?.()\n      offPlayTimer?.()\n      offPauseTimer?.()\n      offStopTimer?.()\n      offSeekTimer?.()\n\n      props.root.removeEventListener('click', onRootClick)\n      window.removeEventListener('click', onWindowClick)\n      window.removeEventListener('keydown', onKeyDown)\n      document.removeEventListener('pointerlockchange', onPointerLockChange, false)\n\n      props.root.removeEventListener('mouseover', onMouseEnter)\n      props.root.removeEventListener('mousemove', onMouseMove)\n      props.root.removeEventListener('mouseout', onMouseLeave)\n      props.root.removeEventListener('contextmenu', onContextMenu)\n    })\n  })\n\n  const onPointerLockChange = () => {\n    if (document.pointerLockElement === props.root) {\n      props.game.pointerLocked = true\n    } else {\n      props.game.pointerLocked = false\n    }\n  }\n\n  const onContextMenu = (e: Event) => {\n    e.preventDefault()\n  }\n\n  const onWindowClick = (e: MouseEvent) => {\n    const target = e.target as HTMLElement\n    if (!target.closest('.hlv-app')) {\n      setIsActive(false)\n    }\n  }\n\n  const onRootClick = () => {\n    setIsActive(true)\n    fadeReset()\n  }\n\n  const onKeyDown = (e: KeyboardEvent) => {\n    if (!isActive()) {\n      return\n    }\n\n    switch (e.code) {\n      case 'KeyF': {\n        if (Fullscreen.isInFullscreen()) {\n          Fullscreen.exit()\n        } else {\n          Fullscreen.enter(props.root)\n        }\n        fadeReset()\n        break\n      }\n\n      case 'KeyM': {\n        props.game.soundSystem.toggleMute()\n        fadeReset()\n        break\n      }\n\n      case 'ArrowUp': {\n        props.game.soundSystem.setVolume(props.game.soundSystem.getVolume() + 0.05)\n        fadeReset()\n        break\n      }\n      case 'ArrowDown': {\n        props.game.soundSystem.setVolume(props.game.soundSystem.getVolume() - 0.05)\n        fadeReset()\n        break\n      }\n\n      case 'KeyJ':\n      case 'ArrowLeft': {\n        props.game.player.seek(props.game.player.currentTime - 5)\n        fadeReset()\n        break\n      }\n      case 'KeyL':\n      case 'ArrowRight': {\n        props.game.player.seek(props.game.player.currentTime + 5)\n        fadeReset()\n        break\n      }\n\n      case 'KeyK':\n      case 'Space': {\n        if (gameState.mode !== PlayerMode.REPLAY) {\n          return\n        }\n\n        if (!props.game.player.isPlaying || props.game.player.isPaused) {\n          props.game.player.play()\n        } else {\n          props.game.player.pause()\n        }\n        break\n      }\n    }\n  }\n\n  const onMouseEnter = () => {\n    setIsMouseOver(true)\n    fadeReset()\n  }\n\n  const onMouseMove = () => {\n    if (isMouseOver() && !Fullscreen.isInFullscreen()) {\n      fadeReset()\n    }\n  }\n\n  const onMouseLeave = () => {\n    setIsMouseOver(false)\n    setIsVisible(false)\n\n    clearTimeout(fadeOut)\n    fadeOut = undefined\n  }\n\n  const fadeReset = () => {\n    if (!isVisible()) {\n      setIsVisible(true)\n    }\n\n    clearTimeout(fadeOut)\n    fadeOut = setTimeout(() => {\n      setIsVisible(false)\n      fadeOut = undefined\n    }, 2000)\n  }\n\n  const onScreenClick = () => {\n    switch (gameState.mode) {\n      case PlayerMode.REPLAY: {\n        const player = props.game.player\n        if (!player.isPlaying || player.isPaused) {\n          player.play()\n        } else {\n          player.pause()\n        }\n        break\n      }\n\n      case PlayerMode.FREE: {\n        props.root.requestPointerLock()\n        break\n      }\n    }\n  }\n\n  const onScreenDblClick = () => {\n    if (Fullscreen.isInFullscreen()) {\n      Fullscreen.exit()\n    } else {\n      Fullscreen.enter(props.root)\n    }\n  }\n\n  return (\n    <GameStateContext.Provider value={gameState}>\n      <div\n        classList={{\n          'hlv-app': true,\n          visible: isVisible(),\n          'mode-free': gameState.mode === PlayerMode.FREE,\n          'mode-replay': gameState.mode === PlayerMode.REPLAY\n        }}\n      >\n        <div class=\"hlv-title\">{title()}</div>\n\n        <Loading game={props.game} visible={isLoading()} />\n\n        <button\n          type=\"button\"\n          class=\"hlv-screen\"\n          ref={(node) => {\n            screen = node\n          }}\n          onClick={() => onScreenClick()}\n          onDblClick={() => onScreenDblClick()}\n        />\n\n        <Show when={gameState.mode === PlayerMode.FREE}>\n          <FreeMode class=\"hlv-controls\" game={props.game} root={props.root} />\n        </Show>\n\n        <Show when={gameState.mode === PlayerMode.REPLAY}>\n          <ReplayMode class=\"hlv-controls\" game={props.game} root={props.root} visible={isMouseOver()} />\n        </Show>\n      </div>\n    </GameStateContext.Provider>\n  )\n}\n","import { render } from 'solid-js/web'\nimport type { Game } from '../Game'\nimport { App } from './App'\n\nexport class PlayerInterface {\n  private game: Game\n  private rootNode: Element\n\n  constructor(game: Game, rootNode: Element) {\n    this.game = game\n    this.rootNode = rootNode\n  }\n\n  getRootNode() {\n    return this.rootNode\n  }\n\n  draw() {\n    render(() => <App game={this.game} root={this.rootNode} />, this.rootNode)\n  }\n}\n","import { Game } from './Game'\r\nimport { Config } from './Config'\r\nimport { PlayerInterface } from './PlayerInterface/index'\r\n\r\ndeclare const VERSION: string\r\n\r\nclass HLV {\r\n  public static readonly VERSION = VERSION\r\n\r\n  private game: Game\r\n\r\n  constructor(game: Game) {\r\n    this.game = game\r\n  }\r\n\r\n  load(name: string) {\r\n    this.game.load(name)\r\n  }\r\n\r\n  setTitle(title: string) {\r\n    this.game.setTitle(title)\r\n  }\r\n\r\n  getTitle() {\r\n    return this.game.getTitle()\r\n  }\r\n}\r\n\r\nexport namespace HLViewer {\r\n  export function init(rootSelector: string, params: Config | string) {\r\n    const node = document.querySelector(rootSelector)\r\n    if (!node) {\r\n      return null\r\n    }\r\n\r\n    const config = Config.init(params)\r\n    const result = Game.init(config)\r\n    if (result.status === 'success') {\r\n      const game = result.game\r\n      const ui = new PlayerInterface(game, node)\r\n\r\n      ui.draw()\r\n      game.draw()\r\n\r\n      return new HLV(game)\r\n    }\r\n\r\n    return null\r\n  }\r\n}\r\n\r\nif (typeof window !== 'undefined') {\r\n  Object.assign(window, { HLViewer })\r\n}\r\n"],"names":["createNanoEvents","event","args","i","callbacks","length","cb","_a","now","formatTime","seconds","m","mm","ss","audioContext","SoundSystem","__publicField","volume","sound","channel","gain","source","value","current","Sound","buffer","resolve","reject","err","basename","path","extension","extname","slashPos","dotPos","ReaderDataType","Reader","data","offset","r","isLittleEndian","n","charCode","f","type","nstrlen","Tga","name","width","height","header","w","h","pixelCount","imageData","byteCount","temp","j","dst","repCount","bl","gr","rd","paletteToRGBA","pixels","palette","rgba","len","paletteWithLastTransToRGBA","parseDecal","parseCache","_r","metadata","parseTexture","parseFont","rowCount","rowHeight","glyphs","glyphOffset","glyphWidth","parseUnknown","parseEntry","Wad","entries","entryCount","directoryOffset","entriesMetadata","entry","e","ReplayMap","mapFilePath","resources","res","chunk","ReplayChunk","initialState","startTime","ReplayState","obj","frame","readCoord","bs","intFlag","fractionFlag","sign","intValue","fractionValue","DeltaType","readDelta","dd","maskBitCount","maskBits","brk","index","divisor","multiplier","initialDeltaDecoders","getInitialDeltaDecoders","_BitView","_offset","bits","signed","available","remaining","bitOffset","currentByte","read","mask","readBits","BitView","BitStream","val","bytes","utf8","chars","append","c","string","frameReaders","deltaDecoders","events","eventCount","flags","attenuation","entityIndex","soundIndex","xFlag","yFlag","zFlag","xPosition","yPosition","zPosition","pitch","command","arg","func","params","info","fieldCount","clientDataDecoder","clientData","weaponDataDecoder","pings","eventIndex","eventData","delayBit","delay","entities","entityIdx","entityType","entityTypeString","nExtraData","extraData","saveName","mapCount","maps","entityStates","entityNumber","custom","removeEntity","nBits","playerIndex","downloadSize","md5hash","size","frameReadHandlers","readFrame","handler","SVC","checkType","readHeader","readDirectories","count","directories","readFrameData","customMessages","limit","message","FrameData.readFrame","Replay","directoryCount","isFinalMacroReached","macro","msg","frameDataEnd","frameData","currentMap","currentChunk","lastFrame","lastFrameOffset","state","directoryEndOffset","serverInfo","FrameData.SVC","resourceList","timeLength","lastFrameLength","tempOffset","s","sounds","commands","soundName","SpriteType","Sprite","frames","paletteSize","xhr","url","method","isBinary","progressCallback","request","totalStr","total","encoding","loadedPercent","ARRAY_TYPE","degree","toRadian","a","y","create","out","glMatrix.ARRAY_TYPE","identity","translate","v","x","z","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","scale","rotateX","rad","rotateY","rotateZ","perspectiveNO","fovy","aspect","near","far","nf","perspective","clone","fromValues","add","b","distance","dist","vec","stride","fn","vdf","input","key","objects","Bsp","textures","models","lightmap","_BspLightmapParser","faceData","texinfo","rect","lu","lv","minU","minV","maxU","maxV","block","d","p","bestHeight","tentativeHeight","BspLightmapParser","parseModels","faces","edges","surfEdges","vertices","parsedModels","model","_faces","v0","v1","v2","uv0","uv1","uv2","luv0","luv1","luv2","_origin","_","origin","vec3.fromValues","faceTexInfo","faceTexture","faceSurfEdges","v0idx","v1idx","compIndex","v2idx","BspParser","lumps","parsedLightmap","isExternal","offsets","VECTOR_ATTRS","NUMBER_ATTRS","worldSpawn","attr","LoadItemBase","LoadItemReplay","LoadItemBsp","LoadItemSky","LoadItemWad","LoadItemSound","LoadItemSprite","Loader","config","sprites","_1","progress","replayPath","replay","mapsPath","map","pos","arr","skyname","wadPromises","item","sprite","skiesPath","skyImage","wadItem","wadsPath","wad","cmp","texture","soundsPath","Mouse","vec2.create","Touch","Camera","mat4.create","glMatrix.toRadian","vec3.create","mat4.perspective","mat4.identity","mat4.rotateX","mat4.rotateZ","mat4.translate","Keyboard","KEYS","Context","gl","canvas","MESSAGES","program","vertexShader","fragmentShader","reason","attributes","uniforms","uniform","shader","updateGame","game","ReplayPlayer","firstChunk","t","chunks","timeLimit","dt","endTime","hitStop","time","Renderer","context","fragmentSrc","vertexSrc","SkyShader","attributeNames","uniformNames","matrix","SkyScene","bsp","vertexBuffer","indexBuffer","indices","ctx","coords","sky","smc","smctx","side","pixelData","anisotropy","camera","MainShader","RenderMode","resizeTexture","newWidth","newHeight","nc","nctx","cid","isPowerOfTwo","nextPowerOfTwo","_n","WorldScene","INVISIBLE_TEXTURES","sceneInfo","currentVertex","modelInfo","faceInfo","k","sortedSceneInfo","vec3.clone","face","newOffset","newFaces","currentTextureIndex","glTexture","nw","nh","glLightmap","opaqueEntities","transparentEntities","mmx","entity","modelIndex","angles","vec3.add","vec3.scale","mat4.rotateY","mat4.scale","entityDistances","vec3.dist","PlayerMode","Game","loader","skies","skiesValid","parent","pw","ph","currTime","Time.now","touch","renderer","worldScene","skyScene","spawn","mode","title","keyboard","mouse","ds","KEY_W","KEY_S","KEY_A","KEY_D","downKey","upKey","Config","_b","_c","_d","_e","_f","equalFn","$PROXY","$TRACK","signalOptions","runEffects","runQueue","STALE","PENDING","UNOWNED","Owner","Transition","ExternalSourceConfig","Listener","Updates","Effects","ExecCount","createRoot","detachedOwner","listener","owner","unowned","root","updateFn","untrack","cleanNode","runUpdates","createSignal","options","setter","writeSignal","readSignal","createRenderEffect","createComputation","updateComputation","createEffect","runUserEffects","createMemo","batch","onMount","onCleanup","getListener","createContext","defaultValue","id","createProvider","useContext","children","memo","resolveChildren","updates","lookUpstream","sSlot","node","isComp","TransitionRunning","markDownstream","runComputation","nextValue","handleError","init","pure","runTop","ancestors","wait","completeUpdates","queue","userLength","ignore","o","obs","castError","results","result","props","FALLBACK","dispose","mapArray","list","mapFn","items","mapped","disposers","indexes","newItems","newLen","newIndices","newIndicesNext","tempdisposers","tempIndexes","start","end","newEnd","disposer","mapper","set","createComponent","Comp","narrowedError","For","fallback","Show","keyed","condition","child","reconcileArrays","parentNode","bLength","aEnd","bEnd","aStart","bStart","after","sequence","$$EVENTS","render","code","element","insert","template","html","isCE","isSVG","delegateEvents","eventNames","document","l","eventHandler","className","use","accessor","marker","initial","insertExpression","unwrapArray","multi","cleanChildren","array","currentArray","normalizeIncomingArray","appendNodes","normalized","unwrap","dynamic","prev","replacement","inserted","el","isParent","$RAW","$NODE","$HAS","$SELF","wrap$1","proxyTraps$1","keys","desc","prop","isWrappable","proto","unwrapped","getNodes","target","symbol","nodes","getNode","property","proxyDescriptor$1","trackSelf","ownKeys","receiver","tracked","setProperty","deleting","mergeStoreNode","updateArray","next","updatePath","traversed","part","partType","isArray","from","to","by","createStore","store","unwrappedStore","wrappedStore","setStore","itemTypeGroupName","Loading","setItems","loaderEvents","offLoadStart","on","onItemLoad","offProgress","onItemProgress","typeItems","push","formatItem","_name","status","Math","round","dots","Array","join","_el$","_tmpl$","_el$2","firstChild","_el$3","nextSibling","_$createComponent","each","Object","_el$4","_tmpl$2","_$insert","reduce","cur","_$effect","classList","toggle","visible","showSpeed","setShowSpeed","SettingsButton","isOpen","setIsOpen","hasReplay","player","onFreeModeClick","FREE","changeMode","pause","onReplayModeClick","REPLAY","_el$5","_el$6","$$click","_el$7","_tmpl$3","_p$","_v$","_v$2","_v$3","undefined","_$delegateEvents","apis","apiIdx","doc","Fullscreen","callback","FullscreenButton","isInFullscreen","setIsInFullscreen","onChange","onFullscreen","onChangeRemove","onClick","exit","enter","_c$","_$memo","FreeMode","active","_$className","class","GameStateContext","isPlaying","isPaused","useGameState","Time","gameState","Timeline","setProgress","ghostKnobActive","setGhostKnobActive","ghostKnobPos","setGhostKnobPos","ghostTime","setGhostTime","offPostUpdate","currentTime","onMouseDown","rects","currentTarget","getClientRects","right","pageX","left","seekByPercent","onMouseMove","progressPos","max","min","addEventListener","removeEventListener","once","onMouseEnter","onMouseLeave","knobOffset","lineOffset","$$mousemove","$$mousedown","style","removeProperty","VolumeControl","soundSystem","setVolume","volumePos","PlayButton","PauseButton","VolumeFull","VolumeHalf","VolumeMute","VolumeButton","_c$2","SpeedUpButton","SpeedDownButton","ReplayMode","speed","setSpeed","updateSpeed","frameId","animate","requestAnimationFrame","cancelAnimationFrame","onPlayClick","play","onPauseClick","onSpeedDown","speedDown","onSpeedUp","speedUp","onVolumeClick","toggleMute","when","toFixed","_el$9","App","screen","fadeOut","setTitle","isActive","setIsActive","isLoading","setIsLoading","isMouseOver","setIsMouseOver","isVisible","setIsVisible","setGameState","getVolume","appendChild","getCanvas","offLoad","offModeChange","offTitleChange","offPlay","offPause","offStop","offVolumeChange","interval","onPlay","setInterval","onPauseOrStop","clearInterval","offPlayTimer","offPauseTimer","offStopTimer","offSeekTimer","onWindowClick","onKeyDown","onPointerLockChange","onRootClick","onContextMenu","pointerLockElement","pointerLocked","preventDefault","closest","fadeReset","seek","clearTimeout","setTimeout","onScreenClick","requestPointerLock","onScreenDblClick","Provider","$$dblclick","_$use","PlayerInterface","constructor","rootNode","getRootNode","draw","_self$","HLV","HLViewer","rootSelector"],"mappings":"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","x_google_ignoreList":[0,20,21,22,23,44,45,46]}